

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 23 13:58:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x620,48
    57                           	dabs	1,0x5A0,80
    58                           	dabs	1,0x520,80
    59                           	dabs	1,0x4C0,48
    60                           	dabs	1,0x22F0,0,_buffer_char
    61                           	dabs	1,0x2370,0,_prnBuf
    62                           	dabs	1,0x7E,2
    63     0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16LF1829 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99     0000                     	;# 
   100     0001                     	;# 
   101     0002                     	;# 
   102     0003                     	;# 
   103     0004                     	;# 
   104     0005                     	;# 
   105     0006                     	;# 
   106     0007                     	;# 
   107     0008                     	;# 
   108     0009                     	;# 
   109     000A                     	;# 
   110     000B                     	;# 
   111     000C                     	;# 
   112     000D                     	;# 
   113     000E                     	;# 
   114     0011                     	;# 
   115     0012                     	;# 
   116     0013                     	;# 
   117     0014                     	;# 
   118     0015                     	;# 
   119     0016                     	;# 
   120     0016                     	;# 
   121     0017                     	;# 
   122     0018                     	;# 
   123     0019                     	;# 
   124     001A                     	;# 
   125     001B                     	;# 
   126     001C                     	;# 
   127     001E                     	;# 
   128     001F                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     0091                     	;# 
   133     0092                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009B                     	;# 
   144     009C                     	;# 
   145     009D                     	;# 
   146     009E                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     0111                     	;# 
   151     0112                     	;# 
   152     0113                     	;# 
   153     0114                     	;# 
   154     0115                     	;# 
   155     0116                     	;# 
   156     0117                     	;# 
   157     0118                     	;# 
   158     0119                     	;# 
   159     011A                     	;# 
   160     011B                     	;# 
   161     011D                     	;# 
   162     011E                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     018E                     	;# 
   166     0191                     	;# 
   167     0191                     	;# 
   168     0192                     	;# 
   169     0193                     	;# 
   170     0193                     	;# 
   171     0193                     	;# 
   172     0194                     	;# 
   173     0195                     	;# 
   174     0196                     	;# 
   175     0199                     	;# 
   176     019A                     	;# 
   177     019B                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019B                     	;# 
   181     019C                     	;# 
   182     019C                     	;# 
   183     019D                     	;# 
   184     019E                     	;# 
   185     019F                     	;# 
   186     020C                     	;# 
   187     020D                     	;# 
   188     020E                     	;# 
   189     0211                     	;# 
   190     0211                     	;# 
   191     0212                     	;# 
   192     0212                     	;# 
   193     0213                     	;# 
   194     0213                     	;# 
   195     0214                     	;# 
   196     0214                     	;# 
   197     0215                     	;# 
   198     0215                     	;# 
   199     0215                     	;# 
   200     0216                     	;# 
   201     0216                     	;# 
   202     0217                     	;# 
   203     0217                     	;# 
   204     0219                     	;# 
   205     021A                     	;# 
   206     021B                     	;# 
   207     021C                     	;# 
   208     021D                     	;# 
   209     021E                     	;# 
   210     021F                     	;# 
   211     0291                     	;# 
   212     0291                     	;# 
   213     0292                     	;# 
   214     0293                     	;# 
   215     0294                     	;# 
   216     0295                     	;# 
   217     0295                     	;# 
   218     0296                     	;# 
   219     0298                     	;# 
   220     0298                     	;# 
   221     0299                     	;# 
   222     029A                     	;# 
   223     029B                     	;# 
   224     029C                     	;# 
   225     029D                     	;# 
   226     029E                     	;# 
   227     0311                     	;# 
   228     0311                     	;# 
   229     0312                     	;# 
   230     0313                     	;# 
   231     0318                     	;# 
   232     0318                     	;# 
   233     0319                     	;# 
   234     031A                     	;# 
   235     038C                     	;# 
   236     038D                     	;# 
   237     038E                     	;# 
   238     0391                     	;# 
   239     0392                     	;# 
   240     0393                     	;# 
   241     0394                     	;# 
   242     0395                     	;# 
   243     0396                     	;# 
   244     039A                     	;# 
   245     039C                     	;# 
   246     039D                     	;# 
   247     039E                     	;# 
   248     039F                     	;# 
   249     0415                     	;# 
   250     0416                     	;# 
   251     0417                     	;# 
   252     041C                     	;# 
   253     041D                     	;# 
   254     041E                     	;# 
   255     0FE4                     	;# 
   256     0FE5                     	;# 
   257     0FE6                     	;# 
   258     0FE7                     	;# 
   259     0FE8                     	;# 
   260     0FE9                     	;# 
   261     0FEA                     	;# 
   262     0FEB                     	;# 
   263     0FED                     	;# 
   264     0FEE                     	;# 
   265     0FEF                     	;# 
   266     0000                     	;# 
   267     0001                     	;# 
   268     0002                     	;# 
   269     0003                     	;# 
   270     0004                     	;# 
   271     0005                     	;# 
   272     0006                     	;# 
   273     0007                     	;# 
   274     0008                     	;# 
   275     0009                     	;# 
   276     000A                     	;# 
   277     000B                     	;# 
   278     000C                     	;# 
   279     000D                     	;# 
   280     000E                     	;# 
   281     0011                     	;# 
   282     0012                     	;# 
   283     0013                     	;# 
   284     0014                     	;# 
   285     0015                     	;# 
   286     0016                     	;# 
   287     0016                     	;# 
   288     0017                     	;# 
   289     0018                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001C                     	;# 
   294     001E                     	;# 
   295     001F                     	;# 
   296     008C                     	;# 
   297     008D                     	;# 
   298     008E                     	;# 
   299     0091                     	;# 
   300     0092                     	;# 
   301     0093                     	;# 
   302     0094                     	;# 
   303     0095                     	;# 
   304     0096                     	;# 
   305     0097                     	;# 
   306     0098                     	;# 
   307     0099                     	;# 
   308     009A                     	;# 
   309     009B                     	;# 
   310     009B                     	;# 
   311     009C                     	;# 
   312     009D                     	;# 
   313     009E                     	;# 
   314     010C                     	;# 
   315     010D                     	;# 
   316     010E                     	;# 
   317     0111                     	;# 
   318     0112                     	;# 
   319     0113                     	;# 
   320     0114                     	;# 
   321     0115                     	;# 
   322     0116                     	;# 
   323     0117                     	;# 
   324     0118                     	;# 
   325     0119                     	;# 
   326     011A                     	;# 
   327     011B                     	;# 
   328     011D                     	;# 
   329     011E                     	;# 
   330     018C                     	;# 
   331     018D                     	;# 
   332     018E                     	;# 
   333     0191                     	;# 
   334     0191                     	;# 
   335     0192                     	;# 
   336     0193                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0194                     	;# 
   340     0195                     	;# 
   341     0196                     	;# 
   342     0199                     	;# 
   343     019A                     	;# 
   344     019B                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019C                     	;# 
   349     019C                     	;# 
   350     019D                     	;# 
   351     019E                     	;# 
   352     019F                     	;# 
   353     020C                     	;# 
   354     020D                     	;# 
   355     020E                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029D                     	;# 
   393     029E                     	;# 
   394     0311                     	;# 
   395     0311                     	;# 
   396     0312                     	;# 
   397     0313                     	;# 
   398     0318                     	;# 
   399     0318                     	;# 
   400     0319                     	;# 
   401     031A                     	;# 
   402     038C                     	;# 
   403     038D                     	;# 
   404     038E                     	;# 
   405     0391                     	;# 
   406     0392                     	;# 
   407     0393                     	;# 
   408     0394                     	;# 
   409     0395                     	;# 
   410     0396                     	;# 
   411     039A                     	;# 
   412     039C                     	;# 
   413     039D                     	;# 
   414     039E                     	;# 
   415     039F                     	;# 
   416     0415                     	;# 
   417     0416                     	;# 
   418     0417                     	;# 
   419     041C                     	;# 
   420     041D                     	;# 
   421     041E                     	;# 
   422     0FE4                     	;# 
   423     0FE5                     	;# 
   424     0FE6                     	;# 
   425     0FE7                     	;# 
   426     0FE8                     	;# 
   427     0FE9                     	;# 
   428     0FEA                     	;# 
   429     0FEB                     	;# 
   430     0FED                     	;# 
   431     0FEE                     	;# 
   432     0FEF                     	;# 
   433     0000                     	;# 
   434     0001                     	;# 
   435     0002                     	;# 
   436     0003                     	;# 
   437     0004                     	;# 
   438     0005                     	;# 
   439     0006                     	;# 
   440     0007                     	;# 
   441     0008                     	;# 
   442     0009                     	;# 
   443     000A                     	;# 
   444     000B                     	;# 
   445     000C                     	;# 
   446     000D                     	;# 
   447     000E                     	;# 
   448     0011                     	;# 
   449     0012                     	;# 
   450     0013                     	;# 
   451     0014                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     008E                     	;# 
   466     0091                     	;# 
   467     0092                     	;# 
   468     0093                     	;# 
   469     0094                     	;# 
   470     0095                     	;# 
   471     0096                     	;# 
   472     0097                     	;# 
   473     0098                     	;# 
   474     0099                     	;# 
   475     009A                     	;# 
   476     009B                     	;# 
   477     009B                     	;# 
   478     009C                     	;# 
   479     009D                     	;# 
   480     009E                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     010E                     	;# 
   484     0111                     	;# 
   485     0112                     	;# 
   486     0113                     	;# 
   487     0114                     	;# 
   488     0115                     	;# 
   489     0116                     	;# 
   490     0117                     	;# 
   491     0118                     	;# 
   492     0119                     	;# 
   493     011A                     	;# 
   494     011B                     	;# 
   495     011D                     	;# 
   496     011E                     	;# 
   497     018C                     	;# 
   498     018D                     	;# 
   499     018E                     	;# 
   500     0191                     	;# 
   501     0191                     	;# 
   502     0192                     	;# 
   503     0193                     	;# 
   504     0193                     	;# 
   505     0193                     	;# 
   506     0194                     	;# 
   507     0195                     	;# 
   508     0196                     	;# 
   509     0199                     	;# 
   510     019A                     	;# 
   511     019B                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019C                     	;# 
   516     019C                     	;# 
   517     019D                     	;# 
   518     019E                     	;# 
   519     019F                     	;# 
   520     020C                     	;# 
   521     020D                     	;# 
   522     020E                     	;# 
   523     0211                     	;# 
   524     0211                     	;# 
   525     0212                     	;# 
   526     0212                     	;# 
   527     0213                     	;# 
   528     0213                     	;# 
   529     0214                     	;# 
   530     0214                     	;# 
   531     0215                     	;# 
   532     0215                     	;# 
   533     0215                     	;# 
   534     0216                     	;# 
   535     0216                     	;# 
   536     0217                     	;# 
   537     0217                     	;# 
   538     0219                     	;# 
   539     021A                     	;# 
   540     021B                     	;# 
   541     021C                     	;# 
   542     021D                     	;# 
   543     021E                     	;# 
   544     021F                     	;# 
   545     0291                     	;# 
   546     0291                     	;# 
   547     0292                     	;# 
   548     0293                     	;# 
   549     0294                     	;# 
   550     0295                     	;# 
   551     0295                     	;# 
   552     0296                     	;# 
   553     0298                     	;# 
   554     0298                     	;# 
   555     0299                     	;# 
   556     029A                     	;# 
   557     029B                     	;# 
   558     029C                     	;# 
   559     029D                     	;# 
   560     029E                     	;# 
   561     0311                     	;# 
   562     0311                     	;# 
   563     0312                     	;# 
   564     0313                     	;# 
   565     0318                     	;# 
   566     0318                     	;# 
   567     0319                     	;# 
   568     031A                     	;# 
   569     038C                     	;# 
   570     038D                     	;# 
   571     038E                     	;# 
   572     0391                     	;# 
   573     0392                     	;# 
   574     0393                     	;# 
   575     0394                     	;# 
   576     0395                     	;# 
   577     0396                     	;# 
   578     039A                     	;# 
   579     039C                     	;# 
   580     039D                     	;# 
   581     039E                     	;# 
   582     039F                     	;# 
   583     0415                     	;# 
   584     0416                     	;# 
   585     0417                     	;# 
   586     041C                     	;# 
   587     041D                     	;# 
   588     041E                     	;# 
   589     0FE4                     	;# 
   590     0FE5                     	;# 
   591     0FE6                     	;# 
   592     0FE7                     	;# 
   593     0FE8                     	;# 
   594     0FE9                     	;# 
   595     0FEA                     	;# 
   596     0FEB                     	;# 
   597     0FED                     	;# 
   598     0FEE                     	;# 
   599     0FEF                     	;_buffer_char
   600     0018                     _T1CONbits	set	24
   601     000B                     _INTCON	set	11
   602     0011                     _PIR1bits	set	17
   603     000B                     _INTCONbits	set	11
   604     006F                     _RB7	set	111
   605     0070                     _RC0	set	112
   606     0076                     _RC6	set	118
   607     006D                     _RB5	set	109
   608     0073                     _RC3	set	115
   609     0091                     _PIE1bits	set	145
   610     008E                     _TRISC	set	142
   611     008D                     _TRISB	set	141
   612     008C                     _TRISA	set	140
   613     0095                     _OPTION_REG	set	149
   614     0099                     _OSCCON	set	153
   615     0098                     _OSCTUNE	set	152
   616     0097                     _WDTCONbits	set	151
   617     009E                     _ADCON1	set	158
   618     009C                     _ADRESHbits	set	156
   619     009B                     _ADRESLbits	set	155
   620     009E                     _ADCON1bits	set	158
   621     009D                     _ADCON0bits	set	157
   622     0474                     _TRISC4	set	1140
   623     0475                     _TRISC5	set	1141
   624     010E                     _LATC	set	270
   625     010D                     _LATB	set	269
   626     010C                     _LATA	set	268
   627     011D                     _APFCON0	set	285
   628     0117                     _FVRCONbits	set	279
   629     019A                     _TXREG	set	410
   630     019B                     _SPBRG	set	411
   631     018E                     _ANSELC	set	398
   632     018D                     _ANSELB	set	397
   633     018C                     _ANSELA	set	396
   634     0199                     _RCREG	set	409
   635     0CF1                     _TRMT	set	3313
   636     0CF5                     _TXEN	set	3317
   637     0CEC                     _CREN	set	3308
   638     0CEF                     _SPEN	set	3311
   639     0CF2                     _BRGH	set	3314
   640     0CFB                     _BRG16	set	3323
   641     0CF4                     _SYNC	set	3316
   642     020E                     _WPUC	set	526
   643     020D                     _WPUB	set	525
   644     020C                     _WPUA	set	524
   645     0394                     _IOCBPbits	set	916
   646     0395                     _IOCBNbits	set	917
   647     0391                     _IOCAPbits	set	913
   648     0392                     _IOCANbits	set	914
   649     0396                     _IOCBFbits	set	918
   650     0393                     _IOCAFbits	set	915
   651                           
   652                           	psect	stringtext1
   653     05FF                     __pstringtext1:
   654     05FF                     STR_12:
   655     05FF  340D               	retlw	13
   656     0600  340A               	retlw	10
   657     0601  3449               	retlw	73	;'I'
   658     0602  346E               	retlw	110	;'n'
   659     0603  3473               	retlw	115	;'s'
   660     0604  3474               	retlw	116	;'t'
   661     0605  3461               	retlw	97	;'a'
   662     0606  346E               	retlw	110	;'n'
   663     0607  3474               	retlw	116	;'t'
   664     0608  3420               	retlw	32	;' '
   665     0609  3443               	retlw	67	;'C'
   666     060A  3461               	retlw	97	;'a'
   667     060B  3472               	retlw	114	;'r'
   668     060C  3465               	retlw	101	;'e'
   669     060D  3420               	retlw	32	;' '
   670     060E  3442               	retlw	66	;'B'
   671     060F  3461               	retlw	97	;'a'
   672     0610  3474               	retlw	116	;'t'
   673     0611  3474               	retlw	116	;'t'
   674     0612  3465               	retlw	101	;'e'
   675     0613  3472               	retlw	114	;'r'
   676     0614  3479               	retlw	121	;'y'
   677     0615  3420               	retlw	32	;' '
   678     0616  3444               	retlw	68	;'D'
   679     0617  3469               	retlw	105	;'i'
   680     0618  3473               	retlw	115	;'s'
   681     0619  3463               	retlw	99	;'c'
   682     061A  3468               	retlw	104	;'h'
   683     061B  3461               	retlw	97	;'a'
   684     061C  3472               	retlw	114	;'r'
   685     061D  3467               	retlw	103	;'g'
   686     061E  3465               	retlw	101	;'e'
   687     061F  3420               	retlw	32	;' '
   688     0620  3449               	retlw	73	;'I'
   689     0621  3443               	retlw	67	;'C'
   690     0622  340D               	retlw	13
   691     0623  340A               	retlw	10
   692     0624  3400               	retlw	0
   693                           
   694                           	psect	stringtext2
   695     0694                     __pstringtext2:
   696     0694                     STR_3:
   697     0694  340D               	retlw	13
   698     0695  340A               	retlw	10
   699     0696  3420               	retlw	32	;' '
   700     0697  3442               	retlw	66	;'B'
   701     0698  3461               	retlw	97	;'a'
   702     0699  3474               	retlw	116	;'t'
   703     069A  3474               	retlw	116	;'t'
   704     069B  3465               	retlw	101	;'e'
   705     069C  3472               	retlw	114	;'r'
   706     069D  3479               	retlw	121	;'y'
   707     069E  3420               	retlw	32	;' '
   708     069F  3462               	retlw	98	;'b'
   709     06A0  3465               	retlw	101	;'e'
   710     06A1  346C               	retlw	108	;'l'
   711     06A2  346F               	retlw	111	;'o'
   712     06A3  3477               	retlw	119	;'w'
   713     06A4  3420               	retlw	32	;' '
   714     06A5  3433               	retlw	51	;'3'
   715     06A6  342E               	retlw	46	;'.'
   716     06A7  3431               	retlw	49	;'1'
   717     06A8  3456               	retlw	86	;'V'
   718     06A9  3420               	retlw	32	;' '
   719     06AA  342D               	retlw	45	;'-'
   720     06AB  3420               	retlw	32	;' '
   721     06AC  344E               	retlw	78	;'N'
   722     06AD  346F               	retlw	111	;'o'
   723     06AE  3474               	retlw	116	;'t'
   724     06AF  3420               	retlw	32	;' '
   725     06B0  3447               	retlw	71	;'G'
   726     06B1  3442               	retlw	66	;'B'
   727     06B2  3420               	retlw	32	;' '
   728     06B3  340D               	retlw	13
   729     06B4  340A               	retlw	10
   730     06B5  3400               	retlw	0
   731                           
   732                           	psect	stringtext3
   733     06D8                     __pstringtext3:
   734     06D8                     STR_10:
   735     06D8  340D               	retlw	13
   736     06D9  340A               	retlw	10
   737     06DA  3420               	retlw	32	;' '
   738     06DB  3450               	retlw	80	;'P'
   739     06DC  3461               	retlw	97	;'a'
   740     06DD  346E               	retlw	110	;'n'
   741     06DE  3461               	retlw	97	;'a'
   742     06DF  3473               	retlw	115	;'s'
   743     06E0  346F               	retlw	111	;'o'
   744     06E1  346E               	retlw	110	;'n'
   745     06E2  3469               	retlw	105	;'i'
   746     06E3  3463               	retlw	99	;'c'
   747     06E4  3420               	retlw	32	;' '
   748     06E5  3432               	retlw	50	;'2'
   749     06E6  3430               	retlw	48	;'0'
   750     06E7  3433               	retlw	51	;'3'
   751     06E8  3432               	retlw	50	;'2'
   752     06E9  3420               	retlw	32	;' '
   753     06EA  3444               	retlw	68	;'D'
   754     06EB  3469               	retlw	105	;'i'
   755     06EC  3473               	retlw	115	;'s'
   756     06ED  3463               	retlw	99	;'c'
   757     06EE  3468               	retlw	104	;'h'
   758     06EF  3461               	retlw	97	;'a'
   759     06F0  3472               	retlw	114	;'r'
   760     06F1  3467               	retlw	103	;'g'
   761     06F2  3465               	retlw	101	;'e'
   762     06F3  3420               	retlw	32	;' '
   763     06F4  340D               	retlw	13
   764     06F5  340A               	retlw	10
   765     06F6  3400               	retlw	0
   766                           
   767                           	psect	stringtext4
   768     06F7                     __pstringtext4:
   769     06F7                     STR_11:
   770     06F7  340D               	retlw	13
   771     06F8  340A               	retlw	10
   772     06F9  3420               	retlw	32	;' '
   773     06FA  3450               	retlw	80	;'P'
   774     06FB  3461               	retlw	97	;'a'
   775     06FC  346E               	retlw	110	;'n'
   776     06FD  3461               	retlw	97	;'a'
   777     06FE  3473               	retlw	115	;'s'
   778     06FF  346F               	retlw	111	;'o'
   779     0700  346E               	retlw	110	;'n'
   780     0701  3469               	retlw	105	;'i'
   781     0702  3463               	retlw	99	;'c'
   782     0703  3420               	retlw	32	;' '
   783     0704  3431               	retlw	49	;'1'
   784     0705  3436               	retlw	54	;'6'
   785     0706  3433               	retlw	51	;'3'
   786     0707  3432               	retlw	50	;'2'
   787     0708  3420               	retlw	32	;' '
   788     0709  3444               	retlw	68	;'D'
   789     070A  3469               	retlw	105	;'i'
   790     070B  3473               	retlw	115	;'s'
   791     070C  3463               	retlw	99	;'c'
   792     070D  3468               	retlw	104	;'h'
   793     070E  3461               	retlw	97	;'a'
   794     070F  3472               	retlw	114	;'r'
   795     0710  3467               	retlw	103	;'g'
   796     0711  3465               	retlw	101	;'e'
   797     0712  3420               	retlw	32	;' '
   798     0713  340D               	retlw	13
   799     0714  340A               	retlw	10
   800     0715  3400               	retlw	0
   801                           
   802                           	psect	stringtext5
   803     0716                     __pstringtext5:
   804     0716                     STR_9:
   805     0716  340D               	retlw	13
   806     0717  340A               	retlw	10
   807     0718  3420               	retlw	32	;' '
   808     0719  3450               	retlw	80	;'P'
   809     071A  3461               	retlw	97	;'a'
   810     071B  346E               	retlw	110	;'n'
   811     071C  3461               	retlw	97	;'a'
   812     071D  3473               	retlw	115	;'s'
   813     071E  346F               	retlw	111	;'o'
   814     071F  346E               	retlw	110	;'n'
   815     0720  3469               	retlw	105	;'i'
   816     0721  3463               	retlw	99	;'c'
   817     0722  3420               	retlw	32	;' '
   818     0723  3432               	retlw	50	;'2'
   819     0724  3434               	retlw	52	;'4'
   820     0725  3437               	retlw	55	;'7'
   821     0726  3437               	retlw	55	;'7'
   822     0727  3420               	retlw	32	;' '
   823     0728  3444               	retlw	68	;'D'
   824     0729  3469               	retlw	105	;'i'
   825     072A  3473               	retlw	115	;'s'
   826     072B  3463               	retlw	99	;'c'
   827     072C  3468               	retlw	104	;'h'
   828     072D  3461               	retlw	97	;'a'
   829     072E  3472               	retlw	114	;'r'
   830     072F  3467               	retlw	103	;'g'
   831     0730  3465               	retlw	101	;'e'
   832     0731  3420               	retlw	32	;' '
   833     0732  340D               	retlw	13
   834     0733  340A               	retlw	10
   835     0734  3400               	retlw	0
   836                           
   837                           	psect	stringtext6
   838     0772                     __pstringtext6:
   839     0772                     STR_7:
   840     0772  340D               	retlw	13
   841     0773  340A               	retlw	10
   842     0774  3420               	retlw	32	;' '
   843     0775  3442               	retlw	66	;'B'
   844     0776  3461               	retlw	97	;'a'
   845     0777  3474               	retlw	116	;'t'
   846     0778  3474               	retlw	116	;'t'
   847     0779  3465               	retlw	101	;'e'
   848     077A  3472               	retlw	114	;'r'
   849     077B  3479               	retlw	121	;'y'
   850     077C  3420               	retlw	32	;' '
   851     077D  3461               	retlw	97	;'a'
   852     077E  3474               	retlw	116	;'t'
   853     077F  3420               	retlw	32	;' '
   854     0780  3445               	retlw	69	;'E'
   855     0781  344F               	retlw	79	;'O'
   856     0782  344C               	retlw	76	;'L'
   857     0783  3420               	retlw	32	;' '
   858     0784  3456               	retlw	86	;'V'
   859     0785  346F               	retlw	111	;'o'
   860     0786  346C               	retlw	108	;'l'
   861     0787  3474               	retlw	116	;'t'
   862     0788  3461               	retlw	97	;'a'
   863     0789  3467               	retlw	103	;'g'
   864     078A  3465               	retlw	101	;'e'
   865     078B  3420               	retlw	32	;' '
   866     078C  340D               	retlw	13
   867     078D  340A               	retlw	10
   868     078E  3400               	retlw	0
   869                           
   870                           	psect	stringtext7
   871     07F6                     __pstringtext7:
   872     07F6                     STR_8:
   873     07F6  340D               	retlw	13
   874     07F7  340A               	retlw	10
   875     07F8  3420               	retlw	32	;' '
   876     07F9  3443               	retlw	67	;'C'
   877     07FA  3452               	retlw	82	;'R'
   878     07FB  3431               	retlw	49	;'1'
   879     07FC  3432               	retlw	50	;'2'
   880     07FD  3433               	retlw	51	;'3'
   881     07FE  3441               	retlw	65	;'A'
   882     07FF  3420               	retlw	32	;' '
   883     0800  3444               	retlw	68	;'D'
   884     0801  3469               	retlw	105	;'i'
   885     0802  3473               	retlw	115	;'s'
   886     0803  3463               	retlw	99	;'c'
   887     0804  3468               	retlw	104	;'h'
   888     0805  3461               	retlw	97	;'a'
   889     0806  3472               	retlw	114	;'r'
   890     0807  3467               	retlw	103	;'g'
   891     0808  3465               	retlw	101	;'e'
   892     0809  3420               	retlw	32	;' '
   893     080A  340D               	retlw	13
   894     080B  340A               	retlw	10
   895     080C  3400               	retlw	0
   896                           
   897                           	psect	stringtext8
   898     080D                     __pstringtext8:
   899     080D                     STR_6:
   900     080D  340D               	retlw	13
   901     080E  340A               	retlw	10
   902     080F  3420               	retlw	32	;' '
   903     0810  3442               	retlw	66	;'B'
   904     0811  3461               	retlw	97	;'a'
   905     0812  3474               	retlw	116	;'t'
   906     0813  3474               	retlw	116	;'t'
   907     0814  3465               	retlw	101	;'e'
   908     0815  3472               	retlw	114	;'r'
   909     0816  3479               	retlw	121	;'y'
   910     0817  343A               	retlw	58	;':'
   911     0818  3420               	retlw	32	;' '
   912     0819  3425               	retlw	37	;'%'
   913     081A  3430               	retlw	48	;'0'
   914     081B  3434               	retlw	52	;'4'
   915     081C  3475               	retlw	117	;'u'
   916     081D  3420               	retlw	32	;' '
   917     081E  340D               	retlw	13
   918     081F  340A               	retlw	10
   919     0820  3400               	retlw	0
   920                           
   921                           	psect	stringtext9
   922     0821                     __pstringtext9:
   923     0821                     STR_4:
   924     0821  340D               	retlw	13
   925     0822  340A               	retlw	10
   926     0823  3420               	retlw	32	;' '
   927     0824  3442               	retlw	66	;'B'
   928     0825  3461               	retlw	97	;'a'
   929     0826  3474               	retlw	116	;'t'
   930     0827  3474               	retlw	116	;'t'
   931     0828  3465               	retlw	101	;'e'
   932     0829  3472               	retlw	114	;'r'
   933     082A  3479               	retlw	121	;'y'
   934     082B  343A               	retlw	58	;':'
   935     082C  3420               	retlw	32	;' '
   936     082D  3425               	retlw	37	;'%'
   937     082E  3430               	retlw	48	;'0'
   938     082F  3434               	retlw	52	;'4'
   939     0830  3475               	retlw	117	;'u'
   940     0831  3420               	retlw	32	;' '
   941     0832  340A               	retlw	10
   942     0833  340D               	retlw	13
   943     0834  3400               	retlw	0
   944                           
   945                           	psect	stringtext10
   946     0835                     __pstringtext10:
   947     0835                     STR_2:
   948     0835  340D               	retlw	13
   949     0836  340A               	retlw	10
   950     0837  3420               	retlw	32	;' '
   951     0838  3444               	retlw	68	;'D'
   952     0839  3445               	retlw	69	;'E'
   953     083A  3442               	retlw	66	;'B'
   954     083B  3455               	retlw	85	;'U'
   955     083C  3447               	retlw	71	;'G'
   956     083D  3420               	retlw	32	;' '
   957     083E  3431               	retlw	49	;'1'
   958     083F  3420               	retlw	32	;' '
   959     0840  340D               	retlw	13
   960     0841  340A               	retlw	10
   961     0842  3400               	retlw	0
   962                           
   963                           	psect	stringtext11
   964     0843                     __pstringtext11:
   965     0843                     STR_1:
   966     0843  340D               	retlw	13
   967     0844  340A               	retlw	10
   968     0845  3420               	retlw	32	;' '
   969     0846  3444               	retlw	68	;'D'
   970     0847  3445               	retlw	69	;'E'
   971     0848  3442               	retlw	66	;'B'
   972     0849  3455               	retlw	85	;'U'
   973     084A  3447               	retlw	71	;'G'
   974     084B  3420               	retlw	32	;' '
   975     084C  3432               	retlw	50	;'2'
   976     084D  3420               	retlw	32	;' '
   977     084E  340D               	retlw	13
   978     084F  340A               	retlw	10
   979     0850  3400               	retlw	0
   980                           
   981                           	psect	stringtext12
   982     0851                     __pstringtext12:
   983     0851                     STR_5:
   984     0851  340D               	retlw	13
   985     0852  340A               	retlw	10
   986     0853  3420               	retlw	32	;' '
   987     0854  344F               	retlw	79	;'O'
   988     0855  344B               	retlw	75	;'K'
   989     0856  3420               	retlw	32	;' '
   990     0857  3447               	retlw	71	;'G'
   991     0858  3442               	retlw	66	;'B'
   992     0859  3420               	retlw	32	;' '
   993     085A  340D               	retlw	13
   994     085B  340A               	retlw	10
   995     085C  3400               	retlw	0
   996                           
   997                           	psect	stringtext13
   998     0000                     __pstringtext13:
   999                           
  1000                           	psect	cinit
  1001     01CB                     start_initialization:	
  1002                           ; #config settings
  1003                           
  1004     01CB                     __initialization:	;BIGRAM
  1005                           
  1006                           ; Clear objects allocated to BIGRAM
  1007     01CB  30F0               	movlw	low (0+8944)
  1008     01CC  0084               	movwf	4
  1009     01CD  3022               	movlw	high (0+8944)
  1010     01CE  0085               	movwf	5
  1011     01CF  3000               	movlw	0
  1012     01D0  00FE               	movwf	btemp
  1013     01D1  3001               	movlw	1
  1014     01D2  00FF               	movwf	btemp+1
  1015     01D3  318F  27F4  3181   	fcall	clear_ram0
  1016                           
  1017                           ; Clear objects allocated to BANK0
  1018     01D6  305F               	movlw	low __pbssBANK0
  1019     01D7  0084               	movwf	4
  1020     01D8  3000               	movlw	high __pbssBANK0
  1021     01D9  0085               	movwf	5
  1022     01DA  300D               	movlw	13
  1023     01DB  00FE               	movwf	btemp
  1024     01DC  3000               	movlw	0
  1025     01DD  00FF               	movwf	btemp+1
  1026     01DE  318F  27F4  3181   	fcall	clear_ram0
  1027                           
  1028                           ; Clear objects allocated to BANK1
  1029     01E1  30A0               	movlw	low __pbssBANK1
  1030     01E2  0084               	movwf	4
  1031     01E3  3000               	movlw	high __pbssBANK1
  1032     01E4  0085               	movwf	5
  1033     01E5  3021               	movlw	33
  1034     01E6  00FE               	movwf	btemp
  1035     01E7  3000               	movlw	0
  1036     01E8  00FF               	movwf	btemp+1
  1037     01E9  318F  27F4  3181   	fcall	clear_ram0
  1038     01EC                     end_of_initialization:	
  1039                           ;End of C runtime variable initialization code
  1040                           
  1041     01EC                     __end_of__initialization:
  1042     01EC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1043     01ED  0020               	movlb	0
  1044     01EE  3184  2CCB         	ljmp	_main	;jump to C main() function
  1045                           
  1046                           	psect	bssBANK0
  1047     005F                     __pbssBANK0:
  1048     005F                     _width:
  1049     005F                     	ds	2
  1050     0061                     _prec:
  1051     0061                     	ds	2
  1052     0063                     _TX_TEST_voltage:
  1053     0063                     	ds	2
  1054     0065                     _startup_voltage:
  1055     0065                     	ds	2
  1056     0067                     _flags:
  1057     0067                     	ds	1
  1058     0068                     _batt_mode:
  1059     0068                     	ds	1
  1060     0069                     _rxChar:
  1061     0069                     	ds	1
  1062     006A                     _consecutiveLowReadings:
  1063     006A                     	ds	1
  1064     006B                     _str_voltage:
  1065     006B                     	ds	1
  1066                           
  1067                           	psect	bssBANK1
  1068     00A0                     __pbssBANK1:
  1069     00A0                     _discharge_EOL_Complete:
  1070     00A0                     	ds	1
  1071     00A1                     _dbuf:
  1072     00A1                     	ds	32
  1073                           
  1074                           	psect	clrtext
  1075     0FF4                     clear_ram0:	
  1076                           ;	Called with FSR0 containing the base address, and
  1077                           ;	btemp/btemp+1 has the size to clear
  1078                           
  1079     0FF4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1080     0FF5                     clrloop0:
  1081     0FF5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1082     0FF6  3101               	addfsr 0,1
  1083     0FF7  3001               	movlw	1
  1084     0FF8  02FE               	subwf	btemp,f
  1085     0FF9  3000               	movlw	0
  1086     0FFA  3BFF               	subwfb	btemp+1,f
  1087     0FFB  087F               	movf	btemp+1,w
  1088     0FFC  047E               	iorwf	btemp,w
  1089     0FFD  1D03               	skipz
  1090     0FFE  2FF5               	goto	clrloop0	;have we reached the end yet?
  1091     0FFF  3400               	retlw	0	;all done for this memory range, return
  1092                           
  1093                           	psect	cstackBANK1
  1094     00C1                     __pcstackBANK1:
  1095     00C1                     ??_initPic:
  1096     00C1                     ??_initUart:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099     00C1                     ??_startUart:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102     00C1                     ??_writeUart:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105     00C1                     ??_blinkLED_red:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108     00C1                     ??_blinkLED_GRN_daughterboard:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111     00C1                     ?_strcpy:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114     00C1                     ?_strlen:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117     00C1                     writeUart@data:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120     00C1                     strcpy@dest:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123     00C1                     strlen@s:	
  1124                           ; 2 bytes @ 0x0
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x0
  1128     00C1                     	ds	2
  1129     00C3                     ??_strlen:
  1130     00C3                     blinkLED_red@ticks:	
  1131                           ; 1 bytes @ 0x2
  1132                           
  1133     00C3                     blinkLED_GRN_daughterboard@ticks:	
  1134                           ; 1 bytes @ 0x2
  1135                           
  1136     00C3                     strcpy@src:	
  1137                           ; 1 bytes @ 0x2
  1138                           
  1139     00C3                     strlen@a:	
  1140                           ; 2 bytes @ 0x2
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x2
  1144     00C3                     	ds	1
  1145     00C4                     blinkLED_red@i:
  1146     00C4                     blinkLED_GRN_daughterboard@i:	
  1147                           ; 1 bytes @ 0x3
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x3
  1151     00C4                     	ds	1
  1152     00C5                     ??_strcpy:
  1153     00C5                     ?_writeMsg:	
  1154                           ; 1 bytes @ 0x4
  1155                           
  1156     00C5                     writeMsg@msg:	
  1157                           ; 1 bytes @ 0x4
  1158                           
  1159                           
  1160                           ; 2 bytes @ 0x4
  1161     00C5                     	ds	2
  1162     00C7                     writeMsg@len:
  1163                           
  1164                           ; 1 bytes @ 0x6
  1165     00C7                     	ds	1
  1166     00C8                     ??_writeMsg:
  1167                           
  1168                           ; 1 bytes @ 0x7
  1169     00C8                     	ds	1
  1170     00C9                     writeMsg@i:
  1171     00C9                     strcpy@d:	
  1172                           ; 1 bytes @ 0x8
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x8
  1176     00C9                     	ds	2
  1177     00CB                     ??_main:
  1178                           
  1179                           	psect	cstackCOMMON
  1180     0070                     __pcstackCOMMON:	
  1181                           ; 1 bytes @ 0xA
  1182                           
  1183     0070                     ?_initPic:
  1184     0070                     ?_initUart:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187     0070                     ?_startUart:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190     0070                     ?_writeUart:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193     0070                     ?_putch:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196     0070                     ??_putch:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199     0070                     ?_isFVReadDone:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202     0070                     ??_isFVReadDone:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205     0070                     ?_blinkLED_red:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208     0070                     ?_blinkLED_GRN_daughterboard:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211     0070                     ?_ISR:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214     0070                     ?_main:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217     0070                     ?i1_blinkLED_red:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220     0070                     ??i1_blinkLED_red:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223     0070                     ?i1_writeUart:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226     0070                     ??i1_writeUart:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229     0070                     ?_fputc:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232     0070                     ?_getVoltage:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235     0070                     ?___wmul:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238     0070                     ?___lwdiv:	
  1239                           ; 2 bytes @ 0x0
  1240                           
  1241     0070                     ?___lwmod:	
  1242                           ; 2 bytes @ 0x0
  1243                           
  1244     0070                     ?i1_strcpy:	
  1245                           ; 2 bytes @ 0x0
  1246                           
  1247     0070                     ?i1_strlen:	
  1248                           ; 2 bytes @ 0x0
  1249                           
  1250     0070                     putch@c:	
  1251                           ; 2 bytes @ 0x0
  1252                           
  1253     0070                     i1writeUart@data:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256     0070                     ___wmul@multiplier:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259     0070                     ___lwdiv@divisor:	
  1260                           ; 2 bytes @ 0x0
  1261                           
  1262     0070                     ___lwmod@divisor:	
  1263                           ; 2 bytes @ 0x0
  1264                           
  1265     0070                     fputc@c:	
  1266                           ; 2 bytes @ 0x0
  1267                           
  1268     0070                     i1strcpy@dest:	
  1269                           ; 2 bytes @ 0x0
  1270                           
  1271     0070                     i1strlen@s:	
  1272                           ; 2 bytes @ 0x0
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x0
  1276     0070                     	ds	2
  1277     0072                     ??_getVoltage:
  1278     0072                     ??i1_strlen:	
  1279                           ; 1 bytes @ 0x2
  1280                           
  1281     0072                     i1blinkLED_red@ticks:	
  1282                           ; 1 bytes @ 0x2
  1283                           
  1284     0072                     ___wmul@multiplicand:	
  1285                           ; 1 bytes @ 0x2
  1286                           
  1287     0072                     ___lwdiv@dividend:	
  1288                           ; 2 bytes @ 0x2
  1289                           
  1290     0072                     ___lwmod@dividend:	
  1291                           ; 2 bytes @ 0x2
  1292                           
  1293     0072                     fputc@fp:	
  1294                           ; 2 bytes @ 0x2
  1295                           
  1296     0072                     i1strcpy@src:	
  1297                           ; 2 bytes @ 0x2
  1298                           
  1299     0072                     i1strlen@a:	
  1300                           ; 2 bytes @ 0x2
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x2
  1304     0072                     	ds	1
  1305     0073                     i1blinkLED_red@i:
  1306                           
  1307                           ; 1 bytes @ 0x3
  1308     0073                     	ds	1
  1309     0074                     ??_fputc:
  1310     0074                     ??___wmul:	
  1311                           ; 1 bytes @ 0x4
  1312                           
  1313     0074                     ??___lwdiv:	
  1314                           ; 1 bytes @ 0x4
  1315                           
  1316     0074                     ??___lwmod:	
  1317                           ; 1 bytes @ 0x4
  1318                           
  1319     0074                     ?i1_writeMsg:	
  1320                           ; 1 bytes @ 0x4
  1321                           
  1322     0074                     ??i1_strcpy:	
  1323                           ; 1 bytes @ 0x4
  1324                           
  1325     0074                     ___wmul@product:	
  1326                           ; 1 bytes @ 0x4
  1327                           
  1328     0074                     i1writeMsg@msg:	
  1329                           ; 2 bytes @ 0x4
  1330                           
  1331                           
  1332                           ; 2 bytes @ 0x4
  1333     0074                     	ds	1
  1334     0075                     ___lwmod@counter:
  1335     0075                     ___lwdiv@quotient:	
  1336                           ; 1 bytes @ 0x5
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x5
  1340     0075                     	ds	1
  1341     0076                     ?_read_prec_or_width:
  1342     0076                     read_prec_or_width@ap:	
  1343                           ; 2 bytes @ 0x6
  1344                           
  1345     0076                     i1writeMsg@len:	
  1346                           ; 1 bytes @ 0x6
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x6
  1350     0076                     	ds	1
  1351     0077                     ??i1_writeMsg:
  1352     0077                     ___lwdiv@counter:	
  1353                           ; 1 bytes @ 0x7
  1354                           
  1355     0077                     getVoltage@voltage:	
  1356                           ; 1 bytes @ 0x7
  1357                           
  1358                           
  1359                           ; 2 bytes @ 0x7
  1360     0077                     	ds	1
  1361     0078                     ??_read_prec_or_width:
  1362     0078                     i1writeMsg@i:	
  1363                           ; 1 bytes @ 0x8
  1364                           
  1365     0078                     i1strcpy@d:	
  1366                           ; 1 bytes @ 0x8
  1367                           
  1368                           
  1369                           ; 2 bytes @ 0x8
  1370     0078                     	ds	1
  1371     0079                     ?_fputs:
  1372     0079                     getVoltage@lo:	
  1373                           ; 2 bytes @ 0x9
  1374                           
  1375     0079                     fputs@fp:	
  1376                           ; 1 bytes @ 0x9
  1377                           
  1378                           
  1379                           ; 2 bytes @ 0x9
  1380     0079                     	ds	1
  1381     007A                     getVoltage@hi:
  1382                           
  1383                           ; 1 bytes @ 0xA
  1384     007A                     	ds	1
  1385     007B                     ??_fputs:
  1386                           
  1387                           ; 1 bytes @ 0xB
  1388     007B                     	ds	2
  1389     007D                     ??_pad:
  1390                           
  1391                           ; 1 bytes @ 0xD
  1392     007D                     	ds	1
  1393     007E                     ??_sprintf:
  1394                           
  1395                           	psect	cstackBANK0
  1396     0020                     __pcstackBANK0:	
  1397                           ; 1 bytes @ 0xE
  1398                           
  1399     0020                     read_prec_or_width@c:
  1400     0020                     fputs@c:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x0
  1405     0020                     	ds	1
  1406     0021                     read_prec_or_width@n:
  1407     0021                     fputs@i:	
  1408                           ; 2 bytes @ 0x1
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x1
  1412     0021                     	ds	2
  1413     0023                     read_prec_or_width@fmt:
  1414     0023                     fputs@s:	
  1415                           ; 1 bytes @ 0x3
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x3
  1419     0023                     	ds	1
  1420     0024                     ?_pad:
  1421     0024                     pad@fp:	
  1422                           ; 1 bytes @ 0x4
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x4
  1426     0024                     	ds	2
  1427     0026                     pad@buf:
  1428                           
  1429                           ; 1 bytes @ 0x6
  1430     0026                     	ds	1
  1431     0027                     pad@p:
  1432                           
  1433                           ; 2 bytes @ 0x7
  1434     0027                     	ds	2
  1435     0029                     pad@i:
  1436                           
  1437                           ; 2 bytes @ 0x9
  1438     0029                     	ds	2
  1439     002B                     ?_utoa:
  1440     002B                     utoa@fp:	
  1441                           ; 1 bytes @ 0xB
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0xB
  1445     002B                     	ds	2
  1446     002D                     utoa@d:
  1447                           
  1448                           ; 2 bytes @ 0xD
  1449     002D                     	ds	2
  1450     002F                     ??_utoa:
  1451                           
  1452                           ; 1 bytes @ 0xF
  1453     002F                     	ds	1
  1454     0030                     utoa@p:
  1455                           
  1456                           ; 1 bytes @ 0x10
  1457     0030                     	ds	1
  1458     0031                     utoa@w:
  1459                           
  1460                           ; 2 bytes @ 0x11
  1461     0031                     	ds	2
  1462     0033                     utoa@i:
  1463                           
  1464                           ; 2 bytes @ 0x13
  1465     0033                     	ds	2
  1466     0035                     ?_vfpfcnvrt:
  1467     0035                     vfpfcnvrt@fp:	
  1468                           ; 1 bytes @ 0x15
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0x15
  1472     0035                     	ds	2
  1473     0037                     vfpfcnvrt@fmt:
  1474                           
  1475                           ; 1 bytes @ 0x17
  1476     0037                     	ds	1
  1477     0038                     vfpfcnvrt@ap:
  1478                           
  1479                           ; 1 bytes @ 0x18
  1480     0038                     	ds	1
  1481     0039                     ??_vfpfcnvrt:
  1482                           
  1483                           ; 1 bytes @ 0x19
  1484     0039                     	ds	4
  1485     003D                     vfpfcnvrt@convarg:
  1486                           
  1487                           ; 4 bytes @ 0x1D
  1488     003D                     	ds	4
  1489     0041                     vfpfcnvrt@done:
  1490                           
  1491                           ; 1 bytes @ 0x21
  1492     0041                     	ds	1
  1493     0042                     vfpfcnvrt@cp:
  1494                           
  1495                           ; 2 bytes @ 0x22
  1496     0042                     	ds	2
  1497     0044                     ?_vfprintf:
  1498     0044                     vfprintf@fp:	
  1499                           ; 2 bytes @ 0x24
  1500                           
  1501                           
  1502                           ; 2 bytes @ 0x24
  1503     0044                     	ds	2
  1504     0046                     vfprintf@fmt:
  1505                           
  1506                           ; 2 bytes @ 0x26
  1507     0046                     	ds	2
  1508     0048                     vfprintf@ap:
  1509                           
  1510                           ; 1 bytes @ 0x28
  1511     0048                     	ds	1
  1512     0049                     ??_vfprintf:
  1513                           
  1514                           ; 1 bytes @ 0x29
  1515     0049                     	ds	1
  1516     004A                     vfprintf@cfmt:
  1517                           
  1518                           ; 2 bytes @ 0x2A
  1519     004A                     	ds	2
  1520     004C                     ?_sprintf:
  1521     004C                     sprintf@s:	
  1522                           ; 2 bytes @ 0x2C
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0x2C
  1526     004C                     	ds	2
  1527     004E                     sprintf@fmt:
  1528                           
  1529                           ; 2 bytes @ 0x2E
  1530     004E                     	ds	4
  1531     0052                     sprintf@ap:
  1532                           
  1533                           ; 1 bytes @ 0x32
  1534     0052                     	ds	1
  1535     0053                     sprintf@f:
  1536                           
  1537                           ; 11 bytes @ 0x33
  1538     0053                     	ds	11
  1539     005E                     ??_ISR:
  1540                           
  1541                           ; 1 bytes @ 0x3E
  1542     005E                     	ds	1
  1543                           
  1544                           	psect	maintext
  1545     04CB                     __pmaintext:	
  1546 ;;
  1547 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1548 ;;
  1549 ;; *************** function _main *****************
  1550 ;; Defined at:
  1551 ;;		line 269 in file "battery_discharge.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : B1F/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels required when called: 11
  1571 ;; This function calls:
  1572 ;;		_blinkLED_GRN_daughterboard
  1573 ;;		_blinkLED_red
  1574 ;;		_initPic
  1575 ;;		_initUart
  1576 ;;		_startUart
  1577 ;;		_strcpy
  1578 ;;		_strlen
  1579 ;;		_writeMsg
  1580 ;; This function is called by:
  1581 ;;		Startup code after reset
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585     04CB                     _main:	
  1586                           ;psect for function _main
  1587                           
  1588     04CB                     l2109:	
  1589                           ;incstack = 0
  1590                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1591                           
  1592                           
  1593                           ;battery_discharge.c: 271:     initPic();
  1594     04CB  3184  2437  3184   	fcall	_initPic
  1595                           
  1596                           ;battery_discharge.c: 272:     blinkLED_red(3);
  1597     04CE  3003               	movlw	3
  1598     04CF  3185  2577  3184   	fcall	_blinkLED_red
  1599                           
  1600                           ;battery_discharge.c: 273:     initUart();
  1601     04D2  318F  27E0  3184   	fcall	_initUart
  1602     04D5                     l2111:
  1603                           
  1604                           ;battery_discharge.c: 274:  startUart();
  1605     04D5  318F  27D7  3184   	fcall	_startUart
  1606     04D8  0064               	clrwdt	;# 
  1607     04D9                     l2113:
  1608                           
  1609                           ;battery_discharge.c: 277:     RB7 = 0;
  1610     04D9  0020               	movlb	0	; select bank0
  1611     04DA  138D               	bcf	13,7	;volatile
  1612     04DB                     l2115:
  1613                           
  1614                           ;battery_discharge.c: 278:     RC3 = 0;
  1615     04DB  118E               	bcf	14,3	;volatile
  1616     04DC                     l2117:
  1617                           
  1618                           ;battery_discharge.c: 282:     strcpy(prnBuf, "\r\nInstant Care Battery Discharge IC\r\n
      +                          ");
  1619     04DC  3070               	movlw	112
  1620     04DD  0021               	movlb	1	; select bank1
  1621     04DE  00C1               	movwf	strcpy@dest^(0+128)
  1622     04DF  3023               	movlw	35
  1623     04E0  00C2               	movwf	(strcpy@dest^(0+128)+1)
  1624     04E1  30FF               	movlw	low (STR_12| (0+32768))
  1625     04E2  00C3               	movwf	strcpy@src^(0+128)
  1626     04E3  3085               	movlw	high (STR_12| (0+32768))
  1627     04E4  00C4               	movwf	(strcpy@src^(0+128)+1)
  1628     04E5  3186  2671  3184   	fcall	_strcpy
  1629     04E8                     l2119:
  1630                           
  1631                           ;battery_discharge.c: 283:  writeMsg(prnBuf, strlen(prnBuf));
  1632     04E8  3070               	movlw	112
  1633     04E9  0021               	movlb	1	; select bank1
  1634     04EA  00C5               	movwf	writeMsg@msg^(0+128)
  1635     04EB  3023               	movlw	35
  1636     04EC  00C6               	movwf	(writeMsg@msg^(0+128)+1)
  1637     04ED  3070               	movlw	112
  1638     04EE  00C1               	movwf	strlen@s^(0+128)
  1639     04EF  3023               	movlw	35
  1640     04F0  00C2               	movwf	(strlen@s^(0+128)+1)
  1641     04F1  3187  27AA  3184   	fcall	_strlen
  1642     04F4  0021               	movlb	1	; select bank1
  1643     04F5  0841               	movf	?_strlen^(0+128),w
  1644     04F6  00C7               	movwf	writeMsg@len^(0+128)
  1645     04F7  3187  278F  3184   	fcall	_writeMsg
  1646     04FA                     l2121:
  1647                           
  1648                           ;battery_discharge.c: 289:     {;battery_discharge.c: 291:         if (discharge_EOL_Com
      +                          plete == 1){
  1649     04FA  0021               	movlb	1	; select bank1
  1650     04FB  0320               	decf	_discharge_EOL_Complete^(0+128),w
  1651     04FC  1D03               	btfss	3,2
  1652     04FD  2CFF               	goto	u1391
  1653     04FE  2D00               	goto	u1390
  1654     04FF                     u1391:
  1655     04FF  2CFA               	goto	l2121
  1656     0500                     u1390:
  1657     0500                     l2123:
  1658                           
  1659                           ;battery_discharge.c: 294:                 blinkLED_GRN_daughterboard(4);
  1660     0500  3004               	movlw	4
  1661     0501  3185  25A5  3184   	fcall	_blinkLED_GRN_daughterboard
  1662     0504  2D00               	goto	l2123
  1663     0505  3181  29C9         	ljmp	start
  1664     0507                     __end_of_main:
  1665                           
  1666                           	psect	text1
  1667     078F                     __ptext1:	
  1668 ;; *************** function _writeMsg *****************
  1669 ;; Defined at:
  1670 ;;		line 58 in file "uart.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  msg             2    4[BANK1 ] PTR unsigned char 
  1673 ;;		 -> buffer_char(128), prnBuf(128), 
  1674 ;;  len             1    6[BANK1 ] unsigned char 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  i               1    8[BANK1 ] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1686 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1687 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1688 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1689 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  1690 ;;Total ram usage:        5 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 10
  1693 ;; This function calls:
  1694 ;;		_writeUart
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700     078F                     _writeMsg:	
  1701                           ;psect for function _writeMsg
  1702                           
  1703     078F                     l1857:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _writeMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1706                           
  1707                           
  1708                           ;uart.c: 58: void writeMsg(char *msg, uint8_t len);uart.c: 59: {;uart.c: 60:  for (uint8
      +                          _t i = 0; i < len; i++)
  1709     078F  0021               	movlb	1	; select bank1
  1710     0790  01C9               	clrf	writeMsg@i^(0+128)
  1711     0791  2FA3               	goto	l1865
  1712     0792                     l1859:
  1713                           
  1714                           ;uart.c: 61:   writeUart(*msg++);
  1715     0792  0845               	movf	writeMsg@msg^(0+128),w
  1716     0793  0086               	movwf	6
  1717     0794  0846               	movf	(writeMsg@msg+1)^(0+128),w
  1718     0795  0087               	movwf	7
  1719     0796  0801               	movf	1,w
  1720     0797  318F  27EA  3187   	fcall	_writeUart
  1721     079A                     l1861:
  1722     079A  3001               	movlw	1
  1723     079B  0021               	movlb	1	; select bank1
  1724     079C  07C5               	addwf	writeMsg@msg^(0+128),f
  1725     079D  3000               	movlw	0
  1726     079E  3DC6               	addwfc	(writeMsg@msg+1)^(0+128),f
  1727     079F                     l1863:
  1728     079F  3001               	movlw	1
  1729     07A0  00C8               	movwf	??_writeMsg^(0+128)
  1730     07A1  0848               	movf	??_writeMsg^(0+128),w
  1731     07A2  07C9               	addwf	writeMsg@i^(0+128),f
  1732     07A3                     l1865:
  1733     07A3  0847               	movf	writeMsg@len^(0+128),w
  1734     07A4  0249               	subwf	writeMsg@i^(0+128),w
  1735     07A5  1C03               	skipc
  1736     07A6  2FA8               	goto	u1201
  1737     07A7  2FA9               	goto	u1200
  1738     07A8                     u1201:
  1739     07A8  2F92               	goto	l1859
  1740     07A9                     u1200:
  1741     07A9                     l242:
  1742     07A9  0008               	return
  1743     07AA                     __end_of_writeMsg:
  1744                           
  1745                           	psect	text2
  1746     0FEA                     __ptext2:	
  1747 ;; *************** function _writeUart *****************
  1748 ;; Defined at:
  1749 ;;		line 64 in file "uart.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  data            1    wreg     unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  data            1    0[BANK1 ] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 9
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_writeMsg
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777     0FEA                     _writeUart:	
  1778                           ;psect for function _writeUart
  1779                           
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _writeUart: [wreg]
  1783                           ;writeUart@data stored from wreg
  1784     0FEA  0021               	movlb	1	; select bank1
  1785     0FEB  00C1               	movwf	writeUart@data^(0+128)
  1786     0FEC                     l1769:
  1787                           
  1788                           ;uart.c: 64: void writeUart(unsigned char data);uart.c: 65: {;uart.c: 66:     TXREG = da
      +                          ta;
  1789     0FEC  0841               	movf	writeUart@data^(0+128),w
  1790     0FED  0023               	movlb	3	; select bank3
  1791     0FEE  009A               	movwf	26	;volatile
  1792     0FEF                     l245:	
  1793                           ;uart.c: 67:     while (!TRMT);
  1794                           
  1795     0FEF  1C9E               	btfss	30,1	;volatile
  1796     0FF0  2FF2               	goto	u1111
  1797     0FF1  2FF3               	goto	u1110
  1798     0FF2                     u1111:
  1799     0FF2  2FEF               	goto	l245
  1800     0FF3                     u1110:
  1801     0FF3                     l248:
  1802     0FF3  0008               	return
  1803     0FF4                     __end_of_writeUart:
  1804                           
  1805                           	psect	text3
  1806     07AA                     __ptext3:	
  1807 ;; *************** function _strlen *****************
  1808 ;; Defined at:
  1809 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  1812 ;;		 -> buffer_char(128), prnBuf(128), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  a               2    2[BANK1 ] PTR const unsigned char 
  1815 ;;		 -> buffer_char(128), prnBuf(128), 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    0[BANK1 ] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1825 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 9
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839     07AA                     _strlen:	
  1840                           ;psect for function _strlen
  1841                           
  1842     07AA                     l1847:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  1845                           
  1846     07AA  0021               	movlb	1	; select bank1
  1847     07AB  0842               	movf	(strlen@s+1)^(0+128),w
  1848     07AC  00C4               	movwf	(strlen@a+1)^(0+128)
  1849     07AD  0841               	movf	strlen@s^(0+128),w
  1850     07AE  00C3               	movwf	strlen@a^(0+128)
  1851     07AF  2FB4               	goto	l1851
  1852     07B0                     l1849:
  1853     07B0  3001               	movlw	1
  1854     07B1  07C1               	addwf	strlen@s^(0+128),f
  1855     07B2  3000               	movlw	0
  1856     07B3  3DC2               	addwfc	(strlen@s+1)^(0+128),f
  1857     07B4                     l1851:
  1858     07B4  0841               	movf	strlen@s^(0+128),w
  1859     07B5  0086               	movwf	6
  1860     07B6  0842               	movf	(strlen@s+1)^(0+128),w
  1861     07B7  0087               	movwf	7
  1862     07B8  0801               	movf	1,w
  1863     07B9  1D03               	btfss	3,2
  1864     07BA  2FBC               	goto	u1191
  1865     07BB  2FBD               	goto	u1190
  1866     07BC                     u1191:
  1867     07BC  2FB0               	goto	l1849
  1868     07BD                     u1190:
  1869     07BD                     l1853:
  1870     07BD  0843               	movf	strlen@a^(0+128),w
  1871     07BE  0241               	subwf	strlen@s^(0+128),w
  1872     07BF  00C1               	movwf	?_strlen^(0+128)
  1873     07C0  0844               	movf	(strlen@a+1)^(0+128),w
  1874     07C1  3B42               	subwfb	(strlen@s+1)^(0+128),w
  1875     07C2  00C2               	movwf	(?_strlen+1)^(0+128)
  1876     07C3                     l961:
  1877     07C3  0008               	return
  1878     07C4                     __end_of_strlen:
  1879                           
  1880                           	psect	text4
  1881     0671                     __ptext4:	
  1882 ;; *************** function _strcpy *****************
  1883 ;; Defined at:
  1884 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  dest            2    0[BANK1 ] PTR unsigned char 
  1887 ;;		 -> prnBuf(128), 
  1888 ;;  src             2    2[BANK1 ] PTR const unsigned char 
  1889 ;;		 -> STR_12(38), STR_11(31), STR_10(31), STR_9(31), 
  1890 ;;		 -> STR_8(23), STR_7(29), STR_5(12), STR_3(34), 
  1891 ;;		 -> STR_2(14), STR_1(14), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  d               2    8[BANK1 ] PTR unsigned char 
  1894 ;;		 -> prnBuf(128), 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    0[BANK1 ] PTR unsigned char 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:       10 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 9
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918     0671                     _strcpy:	
  1919                           ;psect for function _strcpy
  1920                           
  1921     0671                     l1843:	
  1922                           ;incstack = 0
  1923                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  1924                           
  1925     0671  0021               	movlb	1	; select bank1
  1926     0672  0842               	movf	(strcpy@dest+1)^(0+128),w
  1927     0673  00CA               	movwf	(strcpy@d+1)^(0+128)
  1928     0674  0841               	movf	strcpy@dest^(0+128),w
  1929     0675  00C9               	movwf	strcpy@d^(0+128)
  1930     0676                     l1845:
  1931     0676  084A               	movf	(strcpy@d+1)^(0+128),w
  1932     0677  00C6               	movwf	(??_strcpy^(0+128)+1)
  1933     0678  0849               	movf	strcpy@d^(0+128),w
  1934     0679  00C5               	movwf	??_strcpy^(0+128)
  1935     067A  0AC9               	incf	strcpy@d^(0+128),f
  1936     067B  1903               	skipnz
  1937     067C  0ACA               	incf	(strcpy@d+1)^(0+128),f
  1938     067D  0845               	movf	??_strcpy^(0+128),w
  1939     067E  0086               	movwf	6
  1940     067F  0846               	movf	(??_strcpy+1)^(0+128),w
  1941     0680  0087               	movwf	7
  1942     0681  0844               	movf	(strcpy@src+1)^(0+128),w
  1943     0682  00C8               	movwf	((??_strcpy+2)^(0+128)+1)
  1944     0683  0843               	movf	strcpy@src^(0+128),w
  1945     0684  00C7               	movwf	(??_strcpy+2)^(0+128)
  1946     0685  0AC3               	incf	strcpy@src^(0+128),f
  1947     0686  1903               	skipnz
  1948     0687  0AC4               	incf	(strcpy@src+1)^(0+128),f
  1949     0688  0847               	movf	(??_strcpy+2)^(0+128),w
  1950     0689  0084               	movwf	4
  1951     068A  0848               	movf	(??_strcpy+3)^(0+128),w
  1952     068B  0085               	movwf	5
  1953     068C  0800               	movf	0,w	;code access
  1954     068D  3FC0               	movwi [0]fsr1
  1955     068E  0889               	movf	9,f
  1956     068F  1D03               	btfss	3,2
  1957     0690  2E92               	goto	u1181
  1958     0691  2E93               	goto	u1180
  1959     0692                     u1181:
  1960     0692  2E76               	goto	l1845
  1961     0693                     u1180:
  1962     0693                     l955:
  1963     0693  0008               	return
  1964     0694                     __end_of_strcpy:
  1965                           
  1966                           	psect	text5
  1967     0FD7                     __ptext5:	
  1968 ;; *************** function _startUart *****************
  1969 ;; Defined at:
  1970 ;;		line 35 in file "uart.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		None
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 9
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998     0FD7                     _startUart:	
  1999                           ;psect for function _startUart
  2000                           
  2001     0FD7                     l1965:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _startUart: []
  2004                           
  2005                           
  2006                           ;uart.c: 37:  PIE1bits.RCIE = 1;
  2007     0FD7  0021               	movlb	1	; select bank1
  2008     0FD8  1691               	bsf	17,5	;volatile
  2009                           
  2010                           ;uart.c: 38:     INTCONbits.PEIE = 1;
  2011     0FD9  170B               	bsf	11,6	;volatile
  2012                           
  2013                           ;uart.c: 40:  SYNC = 0;
  2014     0FDA  0023               	movlb	3	; select bank3
  2015     0FDB  121E               	bcf	30,4	;volatile
  2016                           
  2017                           ;uart.c: 41:     SPEN = 1;
  2018     0FDC  179D               	bsf	29,7	;volatile
  2019                           
  2020                           ;uart.c: 44:     CREN = 1;
  2021     0FDD  161D               	bsf	29,4	;volatile
  2022                           
  2023                           ;uart.c: 45:     TXEN = 1;
  2024     0FDE  169E               	bsf	30,5	;volatile
  2025     0FDF                     l236:
  2026     0FDF  0008               	return
  2027     0FE0                     __end_of_startUart:
  2028                           
  2029                           	psect	text6
  2030     0FE0                     __ptext6:	
  2031 ;; *************** function _initUart *****************
  2032 ;; Defined at:
  2033 ;;		line 18 in file "uart.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 9
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061     0FE0                     _initUart:	
  2062                           ;psect for function _initUart
  2063                           
  2064     0FE0                     l1961:	
  2065                           ;incstack = 0
  2066                           ; Regs used in _initUart: [wreg]
  2067                           
  2068                           
  2069                           ;uart.c: 20:     TRISC5 = 1;
  2070     0FE0  0021               	movlb	1	; select bank1
  2071     0FE1  168E               	bsf	14,5	;volatile
  2072                           
  2073                           ;uart.c: 21:     TRISC4 = 0;
  2074     0FE2  120E               	bcf	14,4	;volatile
  2075                           
  2076                           ;uart.c: 28:   SYNC = 0;
  2077     0FE3  0023               	movlb	3	; select bank3
  2078     0FE4  121E               	bcf	30,4	;volatile
  2079                           
  2080                           ;uart.c: 29:   BRG16 = 1;
  2081     0FE5  159F               	bsf	31,3	;volatile
  2082                           
  2083                           ;uart.c: 30:   BRGH = 1;
  2084     0FE6  151E               	bsf	30,2	;volatile
  2085     0FE7                     l1963:
  2086                           
  2087                           ;uart.c: 31:   SPBRG = 68;
  2088     0FE7  3044               	movlw	68
  2089     0FE8  009B               	movwf	27	;volatile
  2090     0FE9                     l233:
  2091     0FE9  0008               	return
  2092     0FEA                     __end_of_initUart:
  2093                           
  2094                           	psect	text7
  2095     0437                     __ptext7:	
  2096 ;; *************** function _initPic *****************
  2097 ;; Defined at:
  2098 ;;		line 317 in file "battery_discharge.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 9
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126     0437                     _initPic:	
  2127                           ;psect for function _initPic
  2128                           
  2129     0437                     l1879:	
  2130                           ;incstack = 0
  2131                           ; Regs used in _initPic: [wreg+status,2+status,0]
  2132                           
  2133     0437  0064               	clrwdt	;# 
  2134                           
  2135                           ;battery_discharge.c: 322:     WDTCONbits.SWDTEN = 0;
  2136     0438  0021               	movlb	1	; select bank1
  2137     0439  1017               	bcf	23,0	;volatile
  2138     043A                     l1881:
  2139                           
  2140                           ;battery_discharge.c: 325:     WDTCONbits.WDTPS = 0b01010;
  2141     043A  0817               	movf	23,w	;volatile
  2142     043B  39C1               	andlw	-63
  2143     043C  3814               	iorlw	20
  2144     043D  0097               	movwf	23	;volatile
  2145     043E                     l1883:
  2146                           
  2147                           ;battery_discharge.c: 326:     INTCON = 0;
  2148     043E  018B               	clrf	11	;volatile
  2149     043F                     l1885:
  2150                           
  2151                           ;battery_discharge.c: 328:     OSCTUNE = 0;
  2152     043F  0198               	clrf	24	;volatile
  2153     0440                     l1887:
  2154                           
  2155                           ;battery_discharge.c: 329:  OSCCON = 0b11110000;
  2156     0440  30F0               	movlw	240
  2157     0441  0099               	movwf	25	;volatile
  2158     0442                     l1889:
  2159                           
  2160                           ;battery_discharge.c: 331:     OPTION_REG = 0b00000111;
  2161     0442  3007               	movlw	7
  2162     0443  0095               	movwf	21	;volatile
  2163     0444                     l1891:
  2164                           
  2165                           ;battery_discharge.c: 332:     APFCON0 = 0b10000100;
  2166     0444  3084               	movlw	132
  2167     0445  0022               	movlb	2	; select bank2
  2168     0446  009D               	movwf	29	;volatile
  2169     0447                     l1893:
  2170                           
  2171                           ;battery_discharge.c: 334:     ANSELA = 0;
  2172     0447  0023               	movlb	3	; select bank3
  2173     0448  018C               	clrf	12	;volatile
  2174     0449                     l1895:
  2175                           
  2176                           ;battery_discharge.c: 335:     ANSELB = 0;
  2177     0449  018D               	clrf	13	;volatile
  2178     044A                     l1897:
  2179                           
  2180                           ;battery_discharge.c: 336:     ANSELC = 0b10000110;
  2181     044A  3086               	movlw	134
  2182     044B  008E               	movwf	14	;volatile
  2183     044C                     l1899:
  2184                           
  2185                           ;battery_discharge.c: 339:     TRISA = 0b00000100;
  2186     044C  3004               	movlw	4
  2187     044D  0021               	movlb	1	; select bank1
  2188     044E  008C               	movwf	12	;volatile
  2189     044F                     l1901:
  2190                           
  2191                           ;battery_discharge.c: 340:     WPUA = 0b00000100;
  2192     044F  3004               	movlw	4
  2193     0450  0024               	movlb	4	; select bank4
  2194     0451  008C               	movwf	12	;volatile
  2195     0452                     l1903:
  2196                           
  2197                           ;battery_discharge.c: 341:  LATA = 0b00000000;
  2198     0452  0022               	movlb	2	; select bank2
  2199     0453  018C               	clrf	12	;volatile
  2200     0454                     l1905:
  2201                           
  2202                           ;battery_discharge.c: 343:  TRISB = 0b01010000;
  2203     0454  3050               	movlw	80
  2204     0455  0021               	movlb	1	; select bank1
  2205     0456  008D               	movwf	13	;volatile
  2206     0457                     l1907:
  2207                           
  2208                           ;battery_discharge.c: 344:     WPUB = 0b00010000;
  2209     0457  3010               	movlw	16
  2210     0458  0024               	movlb	4	; select bank4
  2211     0459  008D               	movwf	13	;volatile
  2212     045A                     l1909:
  2213                           
  2214                           ;battery_discharge.c: 345:     LATB = 0b00000000;
  2215     045A  0022               	movlb	2	; select bank2
  2216     045B  018D               	clrf	13	;volatile
  2217     045C                     l1911:
  2218                           
  2219                           ;battery_discharge.c: 347:     TRISC = 0b10101110;
  2220     045C  30AE               	movlw	174
  2221     045D  0021               	movlb	1	; select bank1
  2222     045E  008E               	movwf	14	;volatile
  2223     045F                     l1913:
  2224                           
  2225                           ;battery_discharge.c: 348:     WPUC = 0b00101000;
  2226     045F  3028               	movlw	40
  2227     0460  0024               	movlb	4	; select bank4
  2228     0461  008E               	movwf	14	;volatile
  2229     0462                     l1915:
  2230                           
  2231                           ;battery_discharge.c: 349:     LATC = 0b01000001;
  2232     0462  3041               	movlw	65
  2233     0463  0022               	movlb	2	; select bank2
  2234     0464  008E               	movwf	14	;volatile
  2235     0465                     l1917:
  2236                           
  2237                           ;battery_discharge.c: 352:     FVRCONbits.ADFVR = 0b01;
  2238     0465  0817               	movf	23,w	;volatile
  2239     0466  39FC               	andlw	-4
  2240     0467  3801               	iorlw	1
  2241     0468  0097               	movwf	23	;volatile
  2242     0469                     l1919:
  2243                           
  2244                           ;battery_discharge.c: 353:     FVRCONbits.CDAFVR = 0b00;
  2245     0469  30F3               	movlw	-13
  2246     046A  0597               	andwf	23,f	;volatile
  2247     046B                     l1921:
  2248                           
  2249                           ;battery_discharge.c: 354:     FVRCONbits.TSRNG = 0b0;
  2250     046B  1217               	bcf	23,4	;volatile
  2251     046C                     l1923:
  2252                           
  2253                           ;battery_discharge.c: 355:     FVRCONbits.TSEN = 0b0;
  2254     046C  1297               	bcf	23,5	;volatile
  2255     046D                     l1925:
  2256                           
  2257                           ;battery_discharge.c: 357:     ADCON0bits.ADON = 0;
  2258     046D  0021               	movlb	1	; select bank1
  2259     046E  101D               	bcf	29,0	;volatile
  2260     046F                     l1927:
  2261                           
  2262                           ;battery_discharge.c: 358:     FVRCONbits.FVREN = 0;
  2263     046F  0022               	movlb	2	; select bank2
  2264     0470  1397               	bcf	23,7	;volatile
  2265     0471                     l1929:
  2266                           
  2267                           ;battery_discharge.c: 359:     FVRCONbits.ADFVR = 0b00;
  2268     0471  30FC               	movlw	-4
  2269     0472  0597               	andwf	23,f	;volatile
  2270     0473                     l1931:
  2271                           
  2272                           ;battery_discharge.c: 362:     INTCONbits.IOCIF = 0;
  2273     0473  100B               	bcf	11,0	;volatile
  2274     0474                     l1933:
  2275                           
  2276                           ;battery_discharge.c: 363:     INTCONbits.IOCIE = 1;
  2277     0474  158B               	bsf	11,3	;volatile
  2278     0475                     l1935:
  2279                           
  2280                           ;battery_discharge.c: 365:     IOCAFbits.IOCAF2 = 0;
  2281     0475  0027               	movlb	7	; select bank7
  2282     0476  1113               	bcf	19,2	;volatile
  2283     0477                     l1937:
  2284                           
  2285                           ;battery_discharge.c: 366:     IOCANbits.IOCAN2 = 1;
  2286     0477  1512               	bsf	18,2	;volatile
  2287     0478                     l1939:
  2288                           
  2289                           ;battery_discharge.c: 367:     IOCAPbits.IOCAP2 = 0;
  2290     0478  1111               	bcf	17,2	;volatile
  2291     0479                     l1941:
  2292                           
  2293                           ;battery_discharge.c: 369:     IOCBFbits.IOCBF4 = 0;
  2294     0479  1216               	bcf	22,4	;volatile
  2295     047A                     l1943:
  2296                           
  2297                           ;battery_discharge.c: 370:     IOCBNbits.IOCBN4 = 1;
  2298     047A  1615               	bsf	21,4	;volatile
  2299     047B                     l1945:
  2300                           
  2301                           ;battery_discharge.c: 371:     IOCBPbits.IOCBP4 = 0;
  2302     047B  1214               	bcf	20,4	;volatile
  2303     047C                     l1947:
  2304                           
  2305                           ;battery_discharge.c: 373:     IOCBFbits.IOCBF6 = 0;
  2306     047C  1316               	bcf	22,6	;volatile
  2307     047D                     l1949:
  2308                           
  2309                           ;battery_discharge.c: 374:     IOCBNbits.IOCBN6 = 1;
  2310     047D  1715               	bsf	21,6	;volatile
  2311     047E                     l1951:
  2312                           
  2313                           ;battery_discharge.c: 375:     IOCBPbits.IOCBP6 = 0;
  2314     047E  1314               	bcf	20,6	;volatile
  2315     047F                     l1953:
  2316                           
  2317                           ;battery_discharge.c: 378:     T1CONbits.nT1SYNC = 1;
  2318     047F  0020               	movlb	0	; select bank0
  2319     0480  1518               	bsf	24,2	;volatile
  2320     0481                     l1955:
  2321                           
  2322                           ;battery_discharge.c: 379:     T1CONbits.TMR1CS = 0b00;
  2323     0481  303F               	movlw	-193
  2324     0482  0598               	andwf	24,f	;volatile
  2325     0483                     l1957:
  2326                           
  2327                           ;battery_discharge.c: 380:     T1CONbits.T1CKPS = 0b11;
  2328     0483  3030               	movlw	48
  2329     0484  0498               	iorwf	24,f	;volatile
  2330     0485                     l1959:
  2331                           
  2332                           ;battery_discharge.c: 382:  INTCONbits.GIE = 1;
  2333     0485  178B               	bsf	11,7	;volatile
  2334     0486                     l177:
  2335     0486  0008               	return
  2336     0487                     __end_of_initPic:
  2337                           
  2338                           	psect	text8
  2339     0577                     __ptext8:	
  2340 ;; *************** function _blinkLED_red *****************
  2341 ;; Defined at:
  2342 ;;		line 86 in file "battery_discharge.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  ticks           1    wreg     unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  ticks           1    2[BANK1 ] unsigned char 
  2347 ;;  i               1    3[BANK1 ] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2358 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2359 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;Total ram usage:        4 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 9
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371     0577                     _blinkLED_red:	
  2372                           ;psect for function _blinkLED_red
  2373                           
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _blinkLED_red: [wreg+status,2+status,0]
  2377                           ;blinkLED_red@ticks stored from wreg
  2378     0577  0021               	movlb	1	; select bank1
  2379     0578  00C3               	movwf	blinkLED_red@ticks^(0+128)
  2380     0579                     l1823:
  2381                           
  2382                           ;battery_discharge.c: 86: void blinkLED_red(uint8_t ticks);battery_discharge.c: 87: {;ba
      +                          ttery_discharge.c: 88:     for (uint8_t i = 0; i < ticks; i++)
  2383     0579  01C4               	clrf	blinkLED_red@i^(0+128)
  2384     057A  2D9E               	goto	l1831
  2385     057B                     l128:
  2386                           
  2387                           ;battery_discharge.c: 89: {;battery_discharge.c: 90:     RB5 = 0;
  2388     057B  0020               	movlb	0	; select bank0
  2389     057C  128D               	bcf	13,5	;volatile
  2390     057D  0064               	clrwdt	;# 
  2391     057E                     l1825:
  2392                           
  2393                           ;battery_discharge.c: 92:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2394     057E  3005               	movlw	5
  2395     057F  0021               	movlb	1	; select bank1
  2396     0580  00C2               	movwf	(??_blinkLED_red^(0+128)+1)
  2397     0581  300F               	movlw	15
  2398     0582  00C1               	movwf	??_blinkLED_red^(0+128)
  2399     0583  30F1               	movlw	241
  2400     0584                     u1427:
  2401     0584  0B89               	decfsz	9,f
  2402     0585  2D84               	goto	u1427
  2403     0586  0BC1               	decfsz	??_blinkLED_red^(0+128),f
  2404     0587  2D84               	goto	u1427
  2405     0588  0BC2               	decfsz	(??_blinkLED_red^(0+128)+1),f
  2406     0589  2D84               	goto	u1427
  2407     058A                     l1827:
  2408                           
  2409                           ;battery_discharge.c: 93:     RB5 = 1;
  2410     058A  0020               	movlb	0	; select bank0
  2411     058B  168D               	bsf	13,5	;volatile
  2412     058C  0064               	clrwdt	;# 
  2413                           
  2414                           ;battery_discharge.c: 95:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2415     058D  3005               	movlw	5
  2416     058E  0021               	movlb	1	; select bank1
  2417     058F  00C2               	movwf	(??_blinkLED_red^(0+128)+1)
  2418     0590  300F               	movlw	15
  2419     0591  00C1               	movwf	??_blinkLED_red^(0+128)
  2420     0592  30F1               	movlw	241
  2421     0593                     u1437:
  2422     0593  0B89               	decfsz	9,f
  2423     0594  2D93               	goto	u1437
  2424     0595  0BC1               	decfsz	??_blinkLED_red^(0+128),f
  2425     0596  2D93               	goto	u1437
  2426     0597  0BC2               	decfsz	(??_blinkLED_red^(0+128)+1),f
  2427     0598  2D93               	goto	u1437
  2428     0599                     l1829:
  2429                           
  2430                           ;battery_discharge.c: 96:     }
  2431     0599  3001               	movlw	1
  2432     059A  0021               	movlb	1	; select bank1
  2433     059B  00C1               	movwf	??_blinkLED_red^(0+128)
  2434     059C  0841               	movf	??_blinkLED_red^(0+128),w
  2435     059D  07C4               	addwf	blinkLED_red@i^(0+128),f
  2436     059E                     l1831:
  2437     059E  0843               	movf	blinkLED_red@ticks^(0+128),w
  2438     059F  0244               	subwf	blinkLED_red@i^(0+128),w
  2439     05A0  1C03               	skipc
  2440     05A1  2DA3               	goto	u1161
  2441     05A2  2DA4               	goto	u1160
  2442     05A3                     u1161:
  2443     05A3  2D7B               	goto	l128
  2444     05A4                     u1160:
  2445     05A4                     l130:
  2446     05A4  0008               	return
  2447     05A5                     __end_of_blinkLED_red:
  2448                           
  2449                           	psect	text9
  2450     05A5                     __ptext9:	
  2451 ;; *************** function _blinkLED_GRN_daughterboard *****************
  2452 ;; Defined at:
  2453 ;;		line 112 in file "battery_discharge.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  ticks           1    wreg     unsigned char 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  ticks           1    2[BANK1 ] unsigned char 
  2458 ;;  i               1    3[BANK1 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;Total ram usage:        4 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 9
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482     05A5                     _blinkLED_GRN_daughterboard:	
  2483                           ;psect for function _blinkLED_GRN_daughterboard
  2484                           
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _blinkLED_GRN_daughterboard: [wreg+status,2+status,0]
  2488                           ;blinkLED_GRN_daughterboard@ticks stored from wreg
  2489     05A5  0021               	movlb	1	; select bank1
  2490     05A6  00C3               	movwf	blinkLED_GRN_daughterboard@ticks^(0+128)
  2491     05A7                     l1833:
  2492                           
  2493                           ;battery_discharge.c: 112: void blinkLED_GRN_daughterboard(uint8_t ticks);battery_discha
      +                          rge.c: 113: {;battery_discharge.c: 114:     for (uint8_t i = 0; i < ticks; i++)
  2494     05A7  01C4               	clrf	blinkLED_GRN_daughterboard@i^(0+128)
  2495     05A8  2DCC               	goto	l1841
  2496     05A9                     l140:
  2497                           
  2498                           ;battery_discharge.c: 115: {;battery_discharge.c: 116:     RC0 = 0;
  2499     05A9  0020               	movlb	0	; select bank0
  2500     05AA  100E               	bcf	14,0	;volatile
  2501     05AB  0064               	clrwdt	;# 
  2502     05AC                     l1835:
  2503                           
  2504                           ;battery_discharge.c: 118:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2505     05AC  3005               	movlw	5
  2506     05AD  0021               	movlb	1	; select bank1
  2507     05AE  00C2               	movwf	(??_blinkLED_GRN_daughterboard^(0+128)+1)
  2508     05AF  300F               	movlw	15
  2509     05B0  00C1               	movwf	??_blinkLED_GRN_daughterboard^(0+128)
  2510     05B1  30F1               	movlw	241
  2511     05B2                     u1447:
  2512     05B2  0B89               	decfsz	9,f
  2513     05B3  2DB2               	goto	u1447
  2514     05B4  0BC1               	decfsz	??_blinkLED_GRN_daughterboard^(0+128),f
  2515     05B5  2DB2               	goto	u1447
  2516     05B6  0BC2               	decfsz	(??_blinkLED_GRN_daughterboard^(0+128)+1),f
  2517     05B7  2DB2               	goto	u1447
  2518     05B8                     l1837:
  2519                           
  2520                           ;battery_discharge.c: 119:     RC0 = 1;
  2521     05B8  0020               	movlb	0	; select bank0
  2522     05B9  140E               	bsf	14,0	;volatile
  2523     05BA  0064               	clrwdt	;# 
  2524                           
  2525                           ;battery_discharge.c: 121:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2526     05BB  3005               	movlw	5
  2527     05BC  0021               	movlb	1	; select bank1
  2528     05BD  00C2               	movwf	(??_blinkLED_GRN_daughterboard^(0+128)+1)
  2529     05BE  300F               	movlw	15
  2530     05BF  00C1               	movwf	??_blinkLED_GRN_daughterboard^(0+128)
  2531     05C0  30F1               	movlw	241
  2532     05C1                     u1457:
  2533     05C1  0B89               	decfsz	9,f
  2534     05C2  2DC1               	goto	u1457
  2535     05C3  0BC1               	decfsz	??_blinkLED_GRN_daughterboard^(0+128),f
  2536     05C4  2DC1               	goto	u1457
  2537     05C5  0BC2               	decfsz	(??_blinkLED_GRN_daughterboard^(0+128)+1),f
  2538     05C6  2DC1               	goto	u1457
  2539     05C7                     l1839:
  2540                           
  2541                           ;battery_discharge.c: 122:     }
  2542     05C7  3001               	movlw	1
  2543     05C8  0021               	movlb	1	; select bank1
  2544     05C9  00C1               	movwf	??_blinkLED_GRN_daughterboard^(0+128)
  2545     05CA  0841               	movf	??_blinkLED_GRN_daughterboard^(0+128),w
  2546     05CB  07C4               	addwf	blinkLED_GRN_daughterboard@i^(0+128),f
  2547     05CC                     l1841:
  2548     05CC  0843               	movf	blinkLED_GRN_daughterboard@ticks^(0+128),w
  2549     05CD  0244               	subwf	blinkLED_GRN_daughterboard@i^(0+128),w
  2550     05CE  1C03               	skipc
  2551     05CF  2DD1               	goto	u1171
  2552     05D0  2DD2               	goto	u1170
  2553     05D1                     u1171:
  2554     05D1  2DA9               	goto	l140
  2555     05D2                     u1170:
  2556     05D2                     l142:
  2557     05D2  0008               	return
  2558     05D3                     __end_of_blinkLED_GRN_daughterboard:
  2559                           
  2560                           	psect	intentry
  2561     0004                     __pintentry:	
  2562 ;; *************** function _ISR *****************
  2563 ;; Defined at:
  2564 ;;		line 128 in file "battery_discharge.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;Total ram usage:        1 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 8
  2585 ;; This function calls:
  2586 ;;		_getVoltage
  2587 ;;		_sprintf
  2588 ;;		i1_blinkLED_red
  2589 ;;		i1_strcpy
  2590 ;;		i1_strlen
  2591 ;;		i1_writeMsg
  2592 ;; This function is called by:
  2593 ;;		Interrupt level 1
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597     0004                     _ISR:
  2598                           
  2599                           ;incstack = 0
  2600     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2601                           
  2602                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2603     0005  3180               	pagesel	$
  2604     0006                     i1l2009:
  2605                           
  2606                           ;battery_discharge.c: 130:     if(IOCAFbits.IOCAF2)
  2607     0006  0027               	movlb	7	; select bank7
  2608     0007  1D13               	btfss	19,2	;volatile
  2609     0008  280A               	goto	u126_21
  2610     0009  280B               	goto	u126_20
  2611     000A                     u126_21:
  2612     000A  2833               	goto	i1l2021
  2613     000B                     u126_20:
  2614     000B                     i1l2011:
  2615                           
  2616                           ;battery_discharge.c: 131:     {;battery_discharge.c: 132:         INTCONbits.IOCIF = 0;
  2617     000B  100B               	bcf	11,0	;volatile
  2618                           
  2619                           ;battery_discharge.c: 133:         IOCAFbits.IOCAF2 = 0;
  2620     000C  1113               	bcf	19,2	;volatile
  2621                           
  2622                           ;battery_discharge.c: 134:         RB7 = 0;
  2623     000D  0020               	movlb	0	; select bank0
  2624     000E  138D               	bcf	13,7	;volatile
  2625                           
  2626                           ;battery_discharge.c: 135:         RC3 = 0;
  2627     000F  118E               	bcf	14,3	;volatile
  2628                           
  2629                           ;battery_discharge.c: 136:         RC0 = 1;
  2630     0010  140E               	bsf	14,0	;volatile
  2631                           
  2632                           ;battery_discharge.c: 137:         RC6 = 1;
  2633     0011  170E               	bsf	14,6	;volatile
  2634     0012                     i1l2013:
  2635                           
  2636                           ;battery_discharge.c: 138:         discharge_EOL_Complete = 0;
  2637     0012  0021               	movlb	1	; select bank1
  2638     0013  01A0               	clrf	_discharge_EOL_Complete^(0+128)
  2639     0014                     i1l2015:
  2640                           
  2641                           ;battery_discharge.c: 139:         blinkLED_red(3);
  2642     0014  3003               	movlw	3
  2643     0015  3185  25D3  3180   	fcall	i1_blinkLED_red
  2644     0018                     i1l2017:
  2645                           
  2646                           ;battery_discharge.c: 143:         strcpy(prnBuf, "\r\n DEBUG 2 \r\n");
  2647     0018  3070               	movlw	112
  2648     0019  00F0               	movwf	i1strcpy@dest
  2649     001A  3023               	movlw	35
  2650     001B  00F1               	movwf	i1strcpy@dest+1
  2651     001C  3043               	movlw	low (STR_1| (0+32768))
  2652     001D  00F2               	movwf	i1strcpy@src
  2653     001E  3088               	movlw	high (STR_1| (0+32768))
  2654     001F  00F3               	movwf	i1strcpy@src+1
  2655     0020  3186  26B6  3180   	fcall	i1_strcpy
  2656     0023                     i1l2019:
  2657                           
  2658                           ;battery_discharge.c: 144:         writeMsg(prnBuf, strlen(prnBuf));
  2659     0023  3070               	movlw	112
  2660     0024  00F4               	movwf	i1writeMsg@msg
  2661     0025  3023               	movlw	35
  2662     0026  00F5               	movwf	i1writeMsg@msg+1
  2663     0027  3070               	movlw	112
  2664     0028  00F0               	movwf	i1strlen@s
  2665     0029  3023               	movlw	35
  2666     002A  00F1               	movwf	i1strlen@s+1
  2667     002B  3187  27DD  3180   	fcall	i1_strlen
  2668     002E  0870               	movf	?i1_strlen,w
  2669     002F  00F6               	movwf	i1writeMsg@len
  2670     0030  3187  27C4  3180   	fcall	i1_writeMsg
  2671     0033                     i1l2021:
  2672                           
  2673                           ;battery_discharge.c: 148:  if (IOCBFbits.IOCBF4)
  2674     0033  0027               	movlb	7	; select bank7
  2675     0034  1E16               	btfss	22,4	;volatile
  2676     0035  2837               	goto	u127_21
  2677     0036  2838               	goto	u127_20
  2678     0037                     u127_21:
  2679     0037  28E0               	goto	i1l2049
  2680     0038                     u127_20:
  2681     0038                     i1l2023:
  2682                           
  2683                           ;battery_discharge.c: 149:  {;battery_discharge.c: 150:         IOCBFbits.IOCBF4 = 0;
  2684     0038  1216               	bcf	22,4	;volatile
  2685     0039                     i1l2025:
  2686                           
  2687                           ;battery_discharge.c: 151:         discharge_EOL_Complete = 0;
  2688     0039  0021               	movlb	1	; select bank1
  2689     003A  01A0               	clrf	_discharge_EOL_Complete^(0+128)
  2690     003B                     i1l2027:
  2691                           
  2692                           ;battery_discharge.c: 152:         startup_voltage = getVoltage();
  2693     003B  3183  23DE  3180   	fcall	_getVoltage
  2694     003E  0871               	movf	?_getVoltage+1,w
  2695     003F  0020               	movlb	0	; select bank0
  2696     0040  00E6               	movwf	_startup_voltage+1
  2697     0041  0870               	movf	?_getVoltage,w
  2698     0042  00E5               	movwf	_startup_voltage
  2699     0043                     i1l2029:
  2700                           
  2701                           ;battery_discharge.c: 153:         strcpy(prnBuf, "\r\n DEBUG 1 \r\n");
  2702     0043  3070               	movlw	112
  2703     0044  00F0               	movwf	i1strcpy@dest
  2704     0045  3023               	movlw	35
  2705     0046  00F1               	movwf	i1strcpy@dest+1
  2706     0047  3035               	movlw	low (STR_2| (0+32768))
  2707     0048  00F2               	movwf	i1strcpy@src
  2708     0049  3088               	movlw	high (STR_2| (0+32768))
  2709     004A  00F3               	movwf	i1strcpy@src+1
  2710     004B  3186  26B6  3180   	fcall	i1_strcpy
  2711     004E                     i1l2031:
  2712                           
  2713                           ;battery_discharge.c: 154:         writeMsg(prnBuf, strlen(prnBuf));
  2714     004E  3070               	movlw	112
  2715     004F  00F4               	movwf	i1writeMsg@msg
  2716     0050  3023               	movlw	35
  2717     0051  00F5               	movwf	i1writeMsg@msg+1
  2718     0052  3070               	movlw	112
  2719     0053  00F0               	movwf	i1strlen@s
  2720     0054  3023               	movlw	35
  2721     0055  00F1               	movwf	i1strlen@s+1
  2722     0056  3187  27DD  3180   	fcall	i1_strlen
  2723     0059  0870               	movf	?i1_strlen,w
  2724     005A  00F6               	movwf	i1writeMsg@len
  2725     005B  3187  27C4  3180   	fcall	i1_writeMsg
  2726     005E                     i1l2033:
  2727                           
  2728                           ;battery_discharge.c: 156:         if(startup_voltage >= 332)
  2729     005E  3001               	movlw	1
  2730     005F  0020               	movlb	0	; select bank0
  2731     0060  0266               	subwf	_startup_voltage+1,w
  2732     0061  304C               	movlw	76
  2733     0062  1903               	skipnz
  2734     0063  0265               	subwf	_startup_voltage,w
  2735     0064  1C03               	skipc
  2736     0065  2867               	goto	u128_21
  2737     0066  2868               	goto	u128_20
  2738     0067                     u128_21:
  2739     0067  28A5               	goto	i1l2043
  2740     0068                     u128_20:
  2741     0068                     i1l2035:
  2742                           
  2743                           ;battery_discharge.c: 157:         {;battery_discharge.c: 158:             RC6 = 0;
  2744     0068  130E               	bcf	14,6	;volatile
  2745     0069                     i1l2037:
  2746                           
  2747                           ;battery_discharge.c: 159:             strcpy(prnBuf, "\r\n Battery below 3.1V - Not GB 
      +                          \r\n");
  2748     0069  3070               	movlw	112
  2749     006A  00F0               	movwf	i1strcpy@dest
  2750     006B  3023               	movlw	35
  2751     006C  00F1               	movwf	i1strcpy@dest+1
  2752     006D  3094               	movlw	low (STR_3| (0+32768))
  2753     006E  00F2               	movwf	i1strcpy@src
  2754     006F  3086               	movlw	high (STR_3| (0+32768))
  2755     0070  00F3               	movwf	i1strcpy@src+1
  2756     0071  3186  26B6  3180   	fcall	i1_strcpy
  2757     0074                     i1l2039:
  2758                           
  2759                           ;battery_discharge.c: 160:             writeMsg(prnBuf, strlen(prnBuf));
  2760     0074  3070               	movlw	112
  2761     0075  00F4               	movwf	i1writeMsg@msg
  2762     0076  3023               	movlw	35
  2763     0077  00F5               	movwf	i1writeMsg@msg+1
  2764     0078  3070               	movlw	112
  2765     0079  00F0               	movwf	i1strlen@s
  2766     007A  3023               	movlw	35
  2767     007B  00F1               	movwf	i1strlen@s+1
  2768     007C  3187  27DD  3180   	fcall	i1_strlen
  2769     007F  0870               	movf	?i1_strlen,w
  2770     0080  00F6               	movwf	i1writeMsg@len
  2771     0081  3187  27C4  3180   	fcall	i1_writeMsg
  2772     0084                     i1l2041:
  2773                           
  2774                           ;battery_discharge.c: 161:             sprintf(buffer_char, "\r\n Battery: %04u \n\r", s
      +                          tartup_voltage);
  2775     0084  30F0               	movlw	240
  2776     0085  0020               	movlb	0	; select bank0
  2777     0086  00CC               	movwf	sprintf@s
  2778     0087  3022               	movlw	34
  2779     0088  00CD               	movwf	sprintf@s+1
  2780     0089  3021               	movlw	low (STR_4| (0+32768))
  2781     008A  00CE               	movwf	sprintf@fmt
  2782     008B  3088               	movlw	high (STR_4| (0+32768))
  2783     008C  00CF               	movwf	sprintf@fmt+1
  2784     008D  0866               	movf	_startup_voltage+1,w
  2785     008E  00D1               	movwf	?_sprintf+5
  2786     008F  0865               	movf	_startup_voltage,w
  2787     0090  00D0               	movwf	?_sprintf+4
  2788     0091  3186  2625  3180   	fcall	_sprintf
  2789                           
  2790                           ;battery_discharge.c: 162:             writeMsg(buffer_char, strlen(buffer_char));
  2791     0094  30F0               	movlw	240
  2792     0095  00F4               	movwf	i1writeMsg@msg
  2793     0096  3022               	movlw	34
  2794     0097  00F5               	movwf	i1writeMsg@msg+1
  2795     0098  30F0               	movlw	240
  2796     0099  00F0               	movwf	i1strlen@s
  2797     009A  3022               	movlw	34
  2798     009B  00F1               	movwf	i1strlen@s+1
  2799     009C  3187  27DD  3180   	fcall	i1_strlen
  2800     009F  0870               	movf	?i1_strlen,w
  2801     00A0  00F6               	movwf	i1writeMsg@len
  2802     00A1  3187  27C4  3180   	fcall	i1_writeMsg
  2803                           
  2804                           ;battery_discharge.c: 163:         }
  2805     00A4  28E0               	goto	i1l2049
  2806     00A5                     i1l2043:
  2807                           
  2808                           ;battery_discharge.c: 166:             strcpy(prnBuf, "\r\n OK GB \r\n");
  2809     00A5  3070               	movlw	112
  2810     00A6  00F0               	movwf	i1strcpy@dest
  2811     00A7  3023               	movlw	35
  2812     00A8  00F1               	movwf	i1strcpy@dest+1
  2813     00A9  3051               	movlw	low (STR_5| (0+32768))
  2814     00AA  00F2               	movwf	i1strcpy@src
  2815     00AB  3088               	movlw	high (STR_5| (0+32768))
  2816     00AC  00F3               	movwf	i1strcpy@src+1
  2817     00AD  3186  26B6  3180   	fcall	i1_strcpy
  2818     00B0                     i1l2045:
  2819                           
  2820                           ;battery_discharge.c: 167:             writeMsg(prnBuf, strlen(prnBuf));
  2821     00B0  3070               	movlw	112
  2822     00B1  00F4               	movwf	i1writeMsg@msg
  2823     00B2  3023               	movlw	35
  2824     00B3  00F5               	movwf	i1writeMsg@msg+1
  2825     00B4  3070               	movlw	112
  2826     00B5  00F0               	movwf	i1strlen@s
  2827     00B6  3023               	movlw	35
  2828     00B7  00F1               	movwf	i1strlen@s+1
  2829     00B8  3187  27DD  3180   	fcall	i1_strlen
  2830     00BB  0870               	movf	?i1_strlen,w
  2831     00BC  00F6               	movwf	i1writeMsg@len
  2832     00BD  3187  27C4  3180   	fcall	i1_writeMsg
  2833     00C0                     i1l2047:
  2834                           
  2835                           ;battery_discharge.c: 170:             sprintf(buffer_char, "\r\n Battery: %04u \r\n", s
      +                          tartup_voltage);
  2836     00C0  30F0               	movlw	240
  2837     00C1  0020               	movlb	0	; select bank0
  2838     00C2  00CC               	movwf	sprintf@s
  2839     00C3  3022               	movlw	34
  2840     00C4  00CD               	movwf	sprintf@s+1
  2841     00C5  300D               	movlw	low (STR_6| (0+32768))
  2842     00C6  00CE               	movwf	sprintf@fmt
  2843     00C7  3088               	movlw	high (STR_6| (0+32768))
  2844     00C8  00CF               	movwf	sprintf@fmt+1
  2845     00C9  0866               	movf	_startup_voltage+1,w
  2846     00CA  00D1               	movwf	?_sprintf+5
  2847     00CB  0865               	movf	_startup_voltage,w
  2848     00CC  00D0               	movwf	?_sprintf+4
  2849     00CD  3186  2625  3180   	fcall	_sprintf
  2850                           
  2851                           ;battery_discharge.c: 171:             writeMsg(buffer_char, strlen(buffer_char));
  2852     00D0  30F0               	movlw	240
  2853     00D1  00F4               	movwf	i1writeMsg@msg
  2854     00D2  3022               	movlw	34
  2855     00D3  00F5               	movwf	i1writeMsg@msg+1
  2856     00D4  30F0               	movlw	240
  2857     00D5  00F0               	movwf	i1strlen@s
  2858     00D6  3022               	movlw	34
  2859     00D7  00F1               	movwf	i1strlen@s+1
  2860     00D8  3187  27DD  3180   	fcall	i1_strlen
  2861     00DB  0870               	movf	?i1_strlen,w
  2862     00DC  00F6               	movwf	i1writeMsg@len
  2863     00DD  3187  27C4  3180   	fcall	i1_writeMsg
  2864     00E0                     i1l2049:
  2865                           
  2866                           ;battery_discharge.c: 177:     if(IOCBFbits.IOCBF6)
  2867     00E0  0027               	movlb	7	; select bank7
  2868     00E1  1F16               	btfss	22,6	;volatile
  2869     00E2  28E4               	goto	u129_21
  2870     00E3  28E5               	goto	u129_20
  2871     00E4                     u129_21:
  2872     00E4  2926               	goto	i1l2069
  2873     00E5                     u129_20:
  2874     00E5                     i1l2051:
  2875                           
  2876                           ;battery_discharge.c: 178:     {;battery_discharge.c: 179:         IOCBFbits.IOCBF6 = 0;
  2877     00E5  1316               	bcf	22,6	;volatile
  2878                           
  2879                           ;battery_discharge.c: 180:         RB7 = 0;
  2880     00E6  0020               	movlb	0	; select bank0
  2881     00E7  138D               	bcf	13,7	;volatile
  2882                           
  2883                           ;battery_discharge.c: 181:         RC0 = 1;
  2884     00E8  140E               	bsf	14,0	;volatile
  2885                           
  2886                           ;battery_discharge.c: 182:         RC6 = 1;
  2887     00E9  170E               	bsf	14,6	;volatile
  2888                           
  2889                           ;battery_discharge.c: 183:         RC3 = 1;
  2890     00EA  158E               	bsf	14,3	;volatile
  2891     00EB                     i1l2053:
  2892                           
  2893                           ;battery_discharge.c: 184:         TX_TEST_voltage = getVoltage();
  2894     00EB  3183  23DE  3180   	fcall	_getVoltage
  2895     00EE  0871               	movf	?_getVoltage+1,w
  2896     00EF  0020               	movlb	0	; select bank0
  2897     00F0  00E4               	movwf	_TX_TEST_voltage+1
  2898     00F1  0870               	movf	?_getVoltage,w
  2899     00F2  00E3               	movwf	_TX_TEST_voltage
  2900     00F3                     i1l2055:
  2901                           
  2902                           ;battery_discharge.c: 185:         RC3 = 0;
  2903     00F3  118E               	bcf	14,3	;volatile
  2904     00F4                     i1l2057:
  2905                           
  2906                           ;battery_discharge.c: 189:         if(TX_TEST_voltage <= 476 & TX_TEST_voltage >= 460 ){
  2907     00F4  3001               	movlw	1
  2908     00F5  0264               	subwf	_TX_TEST_voltage+1,w
  2909     00F6  30DD               	movlw	221
  2910     00F7  1903               	skipnz
  2911     00F8  0263               	subwf	_TX_TEST_voltage,w
  2912     00F9  1803               	skipnc
  2913     00FA  28FC               	goto	u130_21
  2914     00FB  28FD               	goto	u130_20
  2915     00FC                     u130_21:
  2916     00FC  2926               	goto	i1l2069
  2917     00FD                     u130_20:
  2918     00FD                     i1l2059:
  2919     00FD  3001               	movlw	1
  2920     00FE  0264               	subwf	_TX_TEST_voltage+1,w
  2921     00FF  30CC               	movlw	204
  2922     0100  1903               	skipnz
  2923     0101  0263               	subwf	_TX_TEST_voltage,w
  2924     0102  1C03               	skipc
  2925     0103  2905               	goto	u131_21
  2926     0104  2906               	goto	u131_20
  2927     0105                     u131_21:
  2928     0105  2926               	goto	i1l2069
  2929     0106                     u131_20:
  2930     0106                     i1l2061:
  2931                           
  2932                           ;battery_discharge.c: 190:             RB7 = 0;
  2933     0106  138D               	bcf	13,7	;volatile
  2934                           
  2935                           ;battery_discharge.c: 191:             RC3 = 0;
  2936     0107  118E               	bcf	14,3	;volatile
  2937     0108                     i1l2063:
  2938                           
  2939                           ;battery_discharge.c: 192:             strcpy(prnBuf, "\r\n Battery at EOL Voltage \r\n"
      +                          );
  2940     0108  3070               	movlw	112
  2941     0109  00F0               	movwf	i1strcpy@dest
  2942     010A  3023               	movlw	35
  2943     010B  00F1               	movwf	i1strcpy@dest+1
  2944     010C  3072               	movlw	low (STR_7| (0+32768))
  2945     010D  00F2               	movwf	i1strcpy@src
  2946     010E  3087               	movlw	high (STR_7| (0+32768))
  2947     010F  00F3               	movwf	i1strcpy@src+1
  2948     0110  3186  26B6  3180   	fcall	i1_strcpy
  2949     0113                     i1l2065:
  2950                           
  2951                           ;battery_discharge.c: 193:             writeMsg(prnBuf, strlen(prnBuf));
  2952     0113  3070               	movlw	112
  2953     0114  00F4               	movwf	i1writeMsg@msg
  2954     0115  3023               	movlw	35
  2955     0116  00F5               	movwf	i1writeMsg@msg+1
  2956     0117  3070               	movlw	112
  2957     0118  00F0               	movwf	i1strlen@s
  2958     0119  3023               	movlw	35
  2959     011A  00F1               	movwf	i1strlen@s+1
  2960     011B  3187  27DD  3180   	fcall	i1_strlen
  2961     011E  0870               	movf	?i1_strlen,w
  2962     011F  00F6               	movwf	i1writeMsg@len
  2963     0120  3187  27C4  3180   	fcall	i1_writeMsg
  2964     0123                     i1l2067:
  2965                           
  2966                           ;battery_discharge.c: 195:             discharge_EOL_Complete = 1;
  2967     0123  0021               	movlb	1	; select bank1
  2968     0124  01A0               	clrf	_discharge_EOL_Complete^(0+128)
  2969     0125  0AA0               	incf	_discharge_EOL_Complete^(0+128),f
  2970     0126                     i1l2069:
  2971                           
  2972                           ;battery_discharge.c: 203:      if (PIR1bits.RCIF)
  2973     0126  0020               	movlb	0	; select bank0
  2974     0127  1E91               	btfss	17,5	;volatile
  2975     0128  292A               	goto	u132_21
  2976     0129  292B               	goto	u132_20
  2977     012A                     u132_21:
  2978     012A  29C7               	goto	i1l162
  2979     012B                     u132_20:
  2980     012B                     i1l2071:
  2981                           
  2982                           ;battery_discharge.c: 204:  {;battery_discharge.c: 205:   PIR1bits.RCIF = 0;
  2983     012B  1291               	bcf	17,5	;volatile
  2984     012C                     i1l2073:
  2985                           
  2986                           ;battery_discharge.c: 206:   rxChar = RCREG;
  2987     012C  0023               	movlb	3	; select bank3
  2988     012D  0819               	movf	25,w	;volatile
  2989     012E  0020               	movlb	0	; select bank0
  2990     012F  00E9               	movwf	_rxChar
  2991     0130                     i1l2075:
  2992                           
  2993                           ;battery_discharge.c: 208:   if (rxChar == 'b')
  2994     0130  3062               	movlw	98
  2995     0131  0669               	xorwf	_rxChar,w
  2996     0132  1D03               	btfss	3,2
  2997     0133  2935               	goto	u133_21
  2998     0134  2936               	goto	u133_20
  2999     0135                     u133_21:
  3000     0135  29C7               	goto	i1l162
  3001     0136                     u133_20:
  3002     0136                     i1l2077:
  3003                           
  3004                           ;battery_discharge.c: 209:         {;battery_discharge.c: 210:             if (batt_mode
      +                           == 4 )
  3005     0136  3004               	movlw	4
  3006     0137  0668               	xorwf	_batt_mode,w
  3007     0138  1D03               	btfss	3,2
  3008     0139  293B               	goto	u134_21
  3009     013A  293C               	goto	u134_20
  3010     013B                     u134_21:
  3011     013B  293D               	goto	i1l2081
  3012     013C                     u134_20:
  3013     013C                     i1l2079:
  3014                           
  3015                           ;battery_discharge.c: 211:             {;battery_discharge.c: 212:                 batt_
      +                          mode = 0;
  3016     013C  01E8               	clrf	_batt_mode
  3017     013D                     i1l2081:
  3018                           
  3019                           ;battery_discharge.c: 214:             batt_mode ++;
  3020     013D  3001               	movlw	1
  3021     013E  00DE               	movwf	??_ISR
  3022     013F  085E               	movf	??_ISR,w
  3023     0140  07E8               	addwf	_batt_mode,f
  3024     0141                     i1l2083:
  3025                           
  3026                           ;battery_discharge.c: 215:             if(batt_mode == 1){
  3027     0141  0368               	decf	_batt_mode,w
  3028     0142  1D03               	btfss	3,2
  3029     0143  2945               	goto	u135_21
  3030     0144  2946               	goto	u135_20
  3031     0145                     u135_21:
  3032     0145  2961               	goto	i1l2089
  3033     0146                     u135_20:
  3034     0146                     i1l2085:
  3035                           
  3036                           ;battery_discharge.c: 216:             strcpy(prnBuf, "\r\n CR123A Discharge \r\n");
  3037     0146  3070               	movlw	112
  3038     0147  00F0               	movwf	i1strcpy@dest
  3039     0148  3023               	movlw	35
  3040     0149  00F1               	movwf	i1strcpy@dest+1
  3041     014A  30F6               	movlw	low (STR_8| (0+32768))
  3042     014B  00F2               	movwf	i1strcpy@src
  3043     014C  3087               	movlw	high (STR_8| (0+32768))
  3044     014D  00F3               	movwf	i1strcpy@src+1
  3045     014E  3186  26B6  3180   	fcall	i1_strcpy
  3046     0151                     i1l2087:
  3047                           
  3048                           ;battery_discharge.c: 217:             writeMsg(prnBuf, strlen(prnBuf));
  3049     0151  3070               	movlw	112
  3050     0152  00F4               	movwf	i1writeMsg@msg
  3051     0153  3023               	movlw	35
  3052     0154  00F5               	movwf	i1writeMsg@msg+1
  3053     0155  3070               	movlw	112
  3054     0156  00F0               	movwf	i1strlen@s
  3055     0157  3023               	movlw	35
  3056     0158  00F1               	movwf	i1strlen@s+1
  3057     0159  3187  27DD  3180   	fcall	i1_strlen
  3058     015C  0870               	movf	?i1_strlen,w
  3059     015D  00F6               	movwf	i1writeMsg@len
  3060     015E  3187  27C4  3180   	fcall	i1_writeMsg
  3061     0161                     i1l2089:
  3062                           
  3063                           ;battery_discharge.c: 224:             if(batt_mode == 2){
  3064     0161  3002               	movlw	2
  3065     0162  0020               	movlb	0	; select bank0
  3066     0163  0668               	xorwf	_batt_mode,w
  3067     0164  1D03               	btfss	3,2
  3068     0165  2967               	goto	u136_21
  3069     0166  2968               	goto	u136_20
  3070     0167                     u136_21:
  3071     0167  2983               	goto	i1l2095
  3072     0168                     u136_20:
  3073     0168                     i1l2091:
  3074                           
  3075                           ;battery_discharge.c: 225:             strcpy(prnBuf, "\r\n Panasonic 2477 Discharge \r\
      +                          n");
  3076     0168  3070               	movlw	112
  3077     0169  00F0               	movwf	i1strcpy@dest
  3078     016A  3023               	movlw	35
  3079     016B  00F1               	movwf	i1strcpy@dest+1
  3080     016C  3016               	movlw	low (STR_9| (0+32768))
  3081     016D  00F2               	movwf	i1strcpy@src
  3082     016E  3087               	movlw	high (STR_9| (0+32768))
  3083     016F  00F3               	movwf	i1strcpy@src+1
  3084     0170  3186  26B6  3180   	fcall	i1_strcpy
  3085     0173                     i1l2093:
  3086                           
  3087                           ;battery_discharge.c: 226:             writeMsg(prnBuf, strlen(prnBuf));
  3088     0173  3070               	movlw	112
  3089     0174  00F4               	movwf	i1writeMsg@msg
  3090     0175  3023               	movlw	35
  3091     0176  00F5               	movwf	i1writeMsg@msg+1
  3092     0177  3070               	movlw	112
  3093     0178  00F0               	movwf	i1strlen@s
  3094     0179  3023               	movlw	35
  3095     017A  00F1               	movwf	i1strlen@s+1
  3096     017B  3187  27DD  3180   	fcall	i1_strlen
  3097     017E  0870               	movf	?i1_strlen,w
  3098     017F  00F6               	movwf	i1writeMsg@len
  3099     0180  3187  27C4  3180   	fcall	i1_writeMsg
  3100     0183                     i1l2095:
  3101                           
  3102                           ;battery_discharge.c: 232:             if(batt_mode == 3){
  3103     0183  3003               	movlw	3
  3104     0184  0020               	movlb	0	; select bank0
  3105     0185  0668               	xorwf	_batt_mode,w
  3106     0186  1D03               	btfss	3,2
  3107     0187  2989               	goto	u137_21
  3108     0188  298A               	goto	u137_20
  3109     0189                     u137_21:
  3110     0189  29A5               	goto	i1l2101
  3111     018A                     u137_20:
  3112     018A                     i1l2097:
  3113                           
  3114                           ;battery_discharge.c: 233:             strcpy(prnBuf, "\r\n Panasonic 2032 Discharge \r\
      +                          n");
  3115     018A  3070               	movlw	112
  3116     018B  00F0               	movwf	i1strcpy@dest
  3117     018C  3023               	movlw	35
  3118     018D  00F1               	movwf	i1strcpy@dest+1
  3119     018E  30D8               	movlw	low (STR_10| (0+32768))
  3120     018F  00F2               	movwf	i1strcpy@src
  3121     0190  3086               	movlw	high (STR_10| (0+32768))
  3122     0191  00F3               	movwf	i1strcpy@src+1
  3123     0192  3186  26B6  3180   	fcall	i1_strcpy
  3124     0195                     i1l2099:
  3125                           
  3126                           ;battery_discharge.c: 234:             writeMsg(prnBuf, strlen(prnBuf));
  3127     0195  3070               	movlw	112
  3128     0196  00F4               	movwf	i1writeMsg@msg
  3129     0197  3023               	movlw	35
  3130     0198  00F5               	movwf	i1writeMsg@msg+1
  3131     0199  3070               	movlw	112
  3132     019A  00F0               	movwf	i1strlen@s
  3133     019B  3023               	movlw	35
  3134     019C  00F1               	movwf	i1strlen@s+1
  3135     019D  3187  27DD  3180   	fcall	i1_strlen
  3136     01A0  0870               	movf	?i1_strlen,w
  3137     01A1  00F6               	movwf	i1writeMsg@len
  3138     01A2  3187  27C4  3180   	fcall	i1_writeMsg
  3139     01A5                     i1l2101:
  3140                           
  3141                           ;battery_discharge.c: 240:             if(batt_mode == 4){
  3142     01A5  3004               	movlw	4
  3143     01A6  0020               	movlb	0	; select bank0
  3144     01A7  0668               	xorwf	_batt_mode,w
  3145     01A8  1D03               	btfss	3,2
  3146     01A9  29AB               	goto	u138_21
  3147     01AA  29AC               	goto	u138_20
  3148     01AB                     u138_21:
  3149     01AB  29C7               	goto	i1l162
  3150     01AC                     u138_20:
  3151     01AC                     i1l2103:
  3152                           
  3153                           ;battery_discharge.c: 241:             strcpy(prnBuf, "\r\n Panasonic 1632 Discharge \r\
      +                          n");
  3154     01AC  3070               	movlw	112
  3155     01AD  00F0               	movwf	i1strcpy@dest
  3156     01AE  3023               	movlw	35
  3157     01AF  00F1               	movwf	i1strcpy@dest+1
  3158     01B0  30F7               	movlw	low (STR_11| (0+32768))
  3159     01B1  00F2               	movwf	i1strcpy@src
  3160     01B2  3086               	movlw	high (STR_11| (0+32768))
  3161     01B3  00F3               	movwf	i1strcpy@src+1
  3162     01B4  3186  26B6  3180   	fcall	i1_strcpy
  3163     01B7                     i1l2105:
  3164                           
  3165                           ;battery_discharge.c: 242:             writeMsg(prnBuf, strlen(prnBuf));
  3166     01B7  3070               	movlw	112
  3167     01B8  00F4               	movwf	i1writeMsg@msg
  3168     01B9  3023               	movlw	35
  3169     01BA  00F5               	movwf	i1writeMsg@msg+1
  3170     01BB  3070               	movlw	112
  3171     01BC  00F0               	movwf	i1strlen@s
  3172     01BD  3023               	movlw	35
  3173     01BE  00F1               	movwf	i1strlen@s+1
  3174     01BF  3187  27DD  3180   	fcall	i1_strlen
  3175     01C2  0870               	movf	?i1_strlen,w
  3176     01C3  00F6               	movwf	i1writeMsg@len
  3177     01C4  3187  27C4  3180   	fcall	i1_writeMsg
  3178     01C7                     i1l162:
  3179     01C7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3180     01C8  0009               	retfie
  3181     01C9                     __end_of_ISR:
  3182                           
  3183                           	psect	text11
  3184     07C4                     __ptext11:	
  3185 ;; *************** function i1_writeMsg *****************
  3186 ;; Defined at:
  3187 ;;		line 58 in file "uart.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  msg             2    4[COMMON] PTR unsigned char 
  3190 ;;		 -> buffer_char(128), prnBuf(128), 
  3191 ;;  len             1    6[COMMON] unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  i               1    8[COMMON] unsigned char 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3203 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;Total ram usage:        5 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 1
  3210 ;; This function calls:
  3211 ;;		i1_writeUart
  3212 ;; This function is called by:
  3213 ;;		_ISR
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217     07C4                     i1_writeMsg:	
  3218                           ;psect for function i1_writeMsg
  3219                           
  3220     07C4                     i1l1985:	
  3221                           ;incstack = 0
  3222                           ; Regs used in i1_writeMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3223                           
  3224                           
  3225                           ;uart.c: 58: void writeMsg(char *msg, uint8_t len);uart.c: 59: {;uart.c: 60:  for (uint8
      +                          _t i = 0; i < len; i++)
  3226     07C4  01F8               	clrf	i1writeMsg@i
  3227     07C5  2FD6               	goto	i1l1993
  3228     07C6                     i1l1987:
  3229                           
  3230                           ;uart.c: 61:   writeUart(*msg++);
  3231     07C6  0874               	movf	i1writeMsg@msg,w
  3232     07C7  0086               	movwf	6
  3233     07C8  0875               	movf	i1writeMsg@msg+1,w
  3234     07C9  0087               	movwf	7
  3235     07CA  0801               	movf	1,w
  3236     07CB  318F  27CE  3187   	fcall	i1_writeUart
  3237     07CE                     i1l1989:
  3238     07CE  3001               	movlw	1
  3239     07CF  07F4               	addwf	i1writeMsg@msg,f
  3240     07D0  3000               	movlw	0
  3241     07D1  3DF5               	addwfc	i1writeMsg@msg+1,f
  3242     07D2                     i1l1991:
  3243     07D2  3001               	movlw	1
  3244     07D3  00F7               	movwf	??i1_writeMsg
  3245     07D4  0877               	movf	??i1_writeMsg,w
  3246     07D5  07F8               	addwf	i1writeMsg@i,f
  3247     07D6                     i1l1993:
  3248     07D6  0876               	movf	i1writeMsg@len,w
  3249     07D7  0278               	subwf	i1writeMsg@i,w
  3250     07D8  1C03               	skipc
  3251     07D9  2FDB               	goto	u123_21
  3252     07DA  2FDC               	goto	u123_20
  3253     07DB                     u123_21:
  3254     07DB  2FC6               	goto	i1l1987
  3255     07DC                     u123_20:
  3256     07DC                     i1l242:
  3257     07DC  0008               	return
  3258     07DD                     __end_ofi1_writeMsg:
  3259                           
  3260                           	psect	text12
  3261     0FCE                     __ptext12:	
  3262 ;; *************** function i1_writeUart *****************
  3263 ;; Defined at:
  3264 ;;		line 64 in file "uart.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  data            1    wreg     unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  data            1    0[COMMON] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;Total ram usage:        1 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		i1_writeMsg
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291     0FCE                     i1_writeUart:	
  3292                           ;psect for function i1_writeUart
  3293                           
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in i1_writeUart: [wreg]
  3297                           ;i1writeUart@data stored from wreg
  3298     0FCE  00F0               	movwf	i1writeUart@data
  3299     0FCF                     i1l1781:
  3300                           
  3301                           ;uart.c: 64: void writeUart(unsigned char data);uart.c: 65: {;uart.c: 66:     TXREG = da
      +                          ta;
  3302     0FCF  0870               	movf	i1writeUart@data,w
  3303     0FD0  0023               	movlb	3	; select bank3
  3304     0FD1  009A               	movwf	26	;volatile
  3305     0FD2                     i1l245:	
  3306                           ;uart.c: 67:     while (!TRMT);
  3307                           
  3308     0FD2  1C9E               	btfss	30,1	;volatile
  3309     0FD3  2FD5               	goto	u113_21
  3310     0FD4  2FD6               	goto	u113_20
  3311     0FD5                     u113_21:
  3312     0FD5  2FD2               	goto	i1l245
  3313     0FD6                     u113_20:
  3314     0FD6                     i1l248:
  3315     0FD6  0008               	return
  3316     0FD7                     __end_ofi1_writeUart:
  3317                           
  3318                           	psect	text13
  3319     07DD                     __ptext13:	
  3320 ;; *************** function i1_strlen *****************
  3321 ;; Defined at:
  3322 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  s               2    0[COMMON] PTR const unsigned char 
  3325 ;;		 -> buffer_char(128), prnBuf(128), 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  a               2    2[COMMON] PTR const unsigned char 
  3328 ;;		 -> buffer_char(128), prnBuf(128), 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2    0[COMMON] unsigned int 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;Total ram usage:        4 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_ISR
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351     07DD                     i1_strlen:	
  3352                           ;psect for function i1_strlen
  3353                           
  3354     07DD                     i1l1999:	
  3355                           ;incstack = 0
  3356                           ; Regs used in i1_strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3357                           
  3358     07DD  0871               	movf	i1strlen@s+1,w
  3359     07DE  00F3               	movwf	i1strlen@a+1
  3360     07DF  0870               	movf	i1strlen@s,w
  3361     07E0  00F2               	movwf	i1strlen@a
  3362     07E1  2FE6               	goto	i1l2003
  3363     07E2                     i1l2001:
  3364     07E2  3001               	movlw	1
  3365     07E3  07F0               	addwf	i1strlen@s,f
  3366     07E4  3000               	movlw	0
  3367     07E5  3DF1               	addwfc	i1strlen@s+1,f
  3368     07E6                     i1l2003:
  3369     07E6  0870               	movf	i1strlen@s,w
  3370     07E7  0086               	movwf	6
  3371     07E8  0871               	movf	i1strlen@s+1,w
  3372     07E9  0087               	movwf	7
  3373     07EA  0801               	movf	1,w
  3374     07EB  1D03               	btfss	3,2
  3375     07EC  2FEE               	goto	u125_21
  3376     07ED  2FEF               	goto	u125_20
  3377     07EE                     u125_21:
  3378     07EE  2FE2               	goto	i1l2001
  3379     07EF                     u125_20:
  3380     07EF                     i1l2005:
  3381     07EF  0872               	movf	i1strlen@a,w
  3382     07F0  0270               	subwf	i1strlen@s,w
  3383     07F1  00F0               	movwf	?i1_strlen
  3384     07F2  0873               	movf	i1strlen@a+1,w
  3385     07F3  3B71               	subwfb	i1strlen@s+1,w
  3386     07F4  00F1               	movwf	?i1_strlen+1
  3387     07F5                     i1l961:
  3388     07F5  0008               	return
  3389     07F6                     __end_ofi1_strlen:
  3390                           
  3391                           	psect	text14
  3392     06B6                     __ptext14:	
  3393 ;; *************** function i1_strcpy *****************
  3394 ;; Defined at:
  3395 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  dest            2    0[COMMON] PTR unsigned char 
  3398 ;;		 -> prnBuf(128), 
  3399 ;;  src             2    2[COMMON] PTR const unsigned char 
  3400 ;;		 -> STR_12(38), STR_11(31), STR_10(31), STR_9(31), 
  3401 ;;		 -> STR_8(23), STR_7(29), STR_5(12), STR_3(34), 
  3402 ;;		 -> STR_2(14), STR_1(14), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  d               2    8[COMMON] PTR unsigned char 
  3405 ;;		 -> prnBuf(128), 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  2    0[COMMON] PTR unsigned char 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;Total ram usage:       10 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_ISR
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428     06B6                     i1_strcpy:	
  3429                           ;psect for function i1_strcpy
  3430                           
  3431     06B6                     i1l1995:	
  3432                           ;incstack = 0
  3433                           ; Regs used in i1_strcpy: [wreg-fsr1h+pclath]
  3434                           
  3435     06B6  0871               	movf	i1strcpy@dest+1,w
  3436     06B7  00F9               	movwf	i1strcpy@d+1
  3437     06B8  0870               	movf	i1strcpy@dest,w
  3438     06B9  00F8               	movwf	i1strcpy@d
  3439     06BA                     i1l1997:
  3440     06BA  0879               	movf	i1strcpy@d+1,w
  3441     06BB  00F5               	movwf	??i1_strcpy+1
  3442     06BC  0878               	movf	i1strcpy@d,w
  3443     06BD  00F4               	movwf	??i1_strcpy
  3444     06BE  0AF8               	incf	i1strcpy@d,f
  3445     06BF  1903               	skipnz
  3446     06C0  0AF9               	incf	i1strcpy@d+1,f
  3447     06C1  0874               	movf	??i1_strcpy,w
  3448     06C2  0086               	movwf	6
  3449     06C3  0875               	movf	??i1_strcpy+1,w
  3450     06C4  0087               	movwf	7
  3451     06C5  0873               	movf	i1strcpy@src+1,w
  3452     06C6  00F7               	movwf	??i1_strcpy+3
  3453     06C7  0872               	movf	i1strcpy@src,w
  3454     06C8  00F6               	movwf	??i1_strcpy+2
  3455     06C9  0AF2               	incf	i1strcpy@src,f
  3456     06CA  1903               	skipnz
  3457     06CB  0AF3               	incf	i1strcpy@src+1,f
  3458     06CC  0876               	movf	??i1_strcpy+2,w
  3459     06CD  0084               	movwf	4
  3460     06CE  0877               	movf	??i1_strcpy+3,w
  3461     06CF  0085               	movwf	5
  3462     06D0  0800               	movf	0,w	;code access
  3463     06D1  3FC0               	movwi [0]fsr1
  3464     06D2  0889               	movf	9,f
  3465     06D3  1D03               	btfss	3,2
  3466     06D4  2ED6               	goto	u124_21
  3467     06D5  2ED7               	goto	u124_20
  3468     06D6                     u124_21:
  3469     06D6  2EBA               	goto	i1l1997
  3470     06D7                     u124_20:
  3471     06D7                     i1l955:
  3472     06D7  0008               	return
  3473     06D8                     __end_ofi1_strcpy:
  3474                           
  3475                           	psect	text15
  3476     05D3                     __ptext15:	
  3477 ;; *************** function i1_blinkLED_red *****************
  3478 ;; Defined at:
  3479 ;;		line 86 in file "battery_discharge.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  ticks           1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  ticks           1    2[COMMON] unsigned char 
  3484 ;;  i               1    3[COMMON] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;Total ram usage:        4 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_ISR
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507     05D3                     i1_blinkLED_red:	
  3508                           ;psect for function i1_blinkLED_red
  3509                           
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in i1_blinkLED_red: [wreg+status,2+status,0]
  3513                           ;i1blinkLED_red@ticks stored from wreg
  3514     05D3  00F2               	movwf	i1blinkLED_red@ticks
  3515     05D4                     i1l1975:
  3516                           
  3517                           ;battery_discharge.c: 86: void blinkLED_red(uint8_t ticks);battery_discharge.c: 87: {;ba
      +                          ttery_discharge.c: 88:     for (uint8_t i = 0; i < ticks; i++)
  3518     05D4  01F3               	clrf	i1blinkLED_red@i
  3519     05D5  2DF8               	goto	i1l1983
  3520     05D6                     i1l128:
  3521                           
  3522                           ;battery_discharge.c: 89: {;battery_discharge.c: 90:     RB5 = 0;
  3523     05D6  0020               	movlb	0	; select bank0
  3524     05D7  128D               	bcf	13,5	;volatile
  3525     05D8  0064               	clrwdt	;# 
  3526     05D9                     i1l1977:
  3527                           
  3528                           ;battery_discharge.c: 92:     _delay((unsigned long)((100)*(32000000/4000.0)));
  3529     05D9  3005               	movlw	5
  3530     05DA  00F1               	movwf	??i1_blinkLED_red+1
  3531     05DB  300F               	movlw	15
  3532     05DC  00F0               	movwf	??i1_blinkLED_red
  3533     05DD  30F1               	movlw	241
  3534     05DE                     u146_27:
  3535     05DE  0B89               	decfsz	9,f
  3536     05DF  2DDE               	goto	u146_27
  3537     05E0  0BF0               	decfsz	??i1_blinkLED_red,f
  3538     05E1  2DDE               	goto	u146_27
  3539     05E2  0BF1               	decfsz	??i1_blinkLED_red+1,f
  3540     05E3  2DDE               	goto	u146_27
  3541     05E4  0000               	nop
  3542     05E5                     i1l1979:
  3543                           
  3544                           ;battery_discharge.c: 93:     RB5 = 1;
  3545     05E5  0020               	movlb	0	; select bank0
  3546     05E6  168D               	bsf	13,5	;volatile
  3547     05E7  0064               	clrwdt	;# 
  3548                           
  3549                           ;battery_discharge.c: 95:     _delay((unsigned long)((100)*(32000000/4000.0)));
  3550     05E8  3005               	movlw	5
  3551     05E9  00F1               	movwf	??i1_blinkLED_red+1
  3552     05EA  300F               	movlw	15
  3553     05EB  00F0               	movwf	??i1_blinkLED_red
  3554     05EC  30F1               	movlw	241
  3555     05ED                     u147_27:
  3556     05ED  0B89               	decfsz	9,f
  3557     05EE  2DED               	goto	u147_27
  3558     05EF  0BF0               	decfsz	??i1_blinkLED_red,f
  3559     05F0  2DED               	goto	u147_27
  3560     05F1  0BF1               	decfsz	??i1_blinkLED_red+1,f
  3561     05F2  2DED               	goto	u147_27
  3562     05F3  0000               	nop
  3563     05F4                     i1l1981:
  3564                           
  3565                           ;battery_discharge.c: 96:     }
  3566     05F4  3001               	movlw	1
  3567     05F5  00F0               	movwf	??i1_blinkLED_red
  3568     05F6  0870               	movf	??i1_blinkLED_red,w
  3569     05F7  07F3               	addwf	i1blinkLED_red@i,f
  3570     05F8                     i1l1983:
  3571     05F8  0872               	movf	i1blinkLED_red@ticks,w
  3572     05F9  0273               	subwf	i1blinkLED_red@i,w
  3573     05FA  1C03               	skipc
  3574     05FB  2DFD               	goto	u122_21
  3575     05FC  2DFE               	goto	u122_20
  3576     05FD                     u122_21:
  3577     05FD  2DD6               	goto	i1l128
  3578     05FE                     u122_20:
  3579     05FE                     i1l130:
  3580     05FE  0008               	return
  3581     05FF                     __end_ofi1_blinkLED_red:
  3582                           
  3583                           	psect	text16
  3584     0625                     __ptext16:	
  3585 ;; *************** function _sprintf *****************
  3586 ;; Defined at:
  3587 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  s               2   44[BANK0 ] PTR unsigned char 
  3590 ;;		 -> buffer_char(128), 
  3591 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  3592 ;;		 -> STR_6(20), STR_4(20), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  f              11   51[BANK0 ] struct _IO_FILE
  3595 ;;  ret             2    0        int 
  3596 ;;  ap              1   50[BANK0 ] PTR void [1]
  3597 ;;		 -> ?_sprintf(2), 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  2   44[BANK0 ] int 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3607 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;Total ram usage:       18 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 7
  3614 ;; This function calls:
  3615 ;;		_vfprintf
  3616 ;; This function is called by:
  3617 ;;		_ISR
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621     0625                     _sprintf:	
  3622                           ;psect for function _sprintf
  3623                           
  3624     0625                     i1l1867:	
  3625                           ;incstack = 0
  3626                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3627                           
  3628     0625  3050               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  3629     0626  0020               	movlb	0	; select bank0
  3630     0627  00D2               	movwf	sprintf@ap
  3631     0628  084D               	movf	sprintf@s+1,w
  3632     0629  00D4               	movwf	sprintf@f+1
  3633     062A  084C               	movf	sprintf@s,w
  3634     062B  00D3               	movwf	sprintf@f
  3635     062C                     i1l1869:
  3636     062C  01D5               	clrf	sprintf@f+2
  3637     062D  01D6               	clrf	sprintf@f+3
  3638     062E                     i1l1871:
  3639     062E  01DC               	clrf	sprintf@f+9
  3640     062F  01DD               	clrf	sprintf@f+10
  3641     0630                     i1l1873:
  3642     0630  3053               	movlw	low sprintf@f
  3643     0631  00C4               	movwf	vfprintf@fp
  3644     0632  3000               	movlw	high sprintf@f
  3645     0633  00C5               	movwf	vfprintf@fp+1
  3646     0634  084F               	movf	sprintf@fmt+1,w
  3647     0635  00C7               	movwf	vfprintf@fmt+1
  3648     0636  084E               	movf	sprintf@fmt,w
  3649     0637  00C6               	movwf	vfprintf@fmt
  3650     0638  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  3651     0639  00C8               	movwf	vfprintf@ap
  3652     063A  3187  2754  3186   	fcall	_vfprintf
  3653     063D                     i1l1875:
  3654     063D  3053               	movlw	low sprintf@f
  3655     063E  0086               	movwf	6
  3656     063F  3000               	movlw	high sprintf@f
  3657     0640  0087               	movwf	7
  3658     0641  3142               	addfsr 1,2
  3659     0642  3F40               	moviw [0]fsr1
  3660     0643  0020               	movlb	0	; select bank0
  3661     0644  074C               	addwf	sprintf@s,w
  3662     0645  0084               	movwf	4
  3663     0646  3F41               	moviw [1]fsr1
  3664     0647  3D4D               	addwfc	sprintf@s+1,w
  3665     0648  0085               	movwf	5
  3666     0649  0180               	clrf	0
  3667     064A                     i1l861:
  3668     064A  0008               	return
  3669     064B                     __end_of_sprintf:
  3670                           
  3671                           	psect	text17
  3672     0754                     __ptext17:	
  3673 ;; *************** function _vfprintf *****************
  3674 ;; Defined at:
  3675 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  3678 ;;		 -> sprintf@f(11), 
  3679 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  3680 ;;		 -> STR_6(20), STR_4(20), 
  3681 ;;  ap              1   40[BANK0 ] PTR PTR void 
  3682 ;;		 -> sprintf@ap(1), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  cfmt            2   42[BANK0 ] PTR unsigned char 
  3685 ;;		 -> STR_6(20), STR_4(20), 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  2   36[BANK0 ] int 
  3688 ;; Registers used:
  3689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3695 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;Total ram usage:        8 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 6
  3702 ;; This function calls:
  3703 ;;		_vfpfcnvrt
  3704 ;; This function is called by:
  3705 ;;		_sprintf
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709     0754                     _vfprintf:	
  3710                           ;psect for function _vfprintf
  3711                           
  3712     0754                     i1l1771:	
  3713                           ;incstack = 0
  3714                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3715                           
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3718     0754  0020               	movlb	0	; select bank0
  3719     0755  0847               	movf	vfprintf@fmt+1,w
  3720     0756  00CB               	movwf	vfprintf@cfmt+1
  3721     0757  0846               	movf	vfprintf@fmt,w
  3722     0758  00CA               	movwf	vfprintf@cfmt
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3725     0759  2F65               	goto	i1l1775
  3726     075A                     i1l1773:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3729     075A  0845               	movf	vfprintf@fp+1,w
  3730     075B  00B6               	movwf	vfpfcnvrt@fp+1
  3731     075C  0844               	movf	vfprintf@fp,w
  3732     075D  00B5               	movwf	vfpfcnvrt@fp
  3733     075E  304A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3734     075F  00B7               	movwf	vfpfcnvrt@fmt
  3735     0760  0848               	movf	vfprintf@ap,w
  3736     0761  00B8               	movwf	vfpfcnvrt@ap
  3737     0762  3181  21F0  3187   	fcall	_vfpfcnvrt
  3738     0765                     i1l1775:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3741     0765  0020               	movlb	0	; select bank0
  3742     0766  084A               	movf	vfprintf@cfmt,w
  3743     0767  0084               	movwf	4
  3744     0768  084B               	movf	vfprintf@cfmt+1,w
  3745     0769  0085               	movwf	5
  3746     076A  0012               	moviw fsr0++
  3747     076B  1D03               	btfss	3,2
  3748     076C  2F6E               	goto	u112_21
  3749     076D  2F6F               	goto	u112_20
  3750     076E                     u112_21:
  3751     076E  2F5A               	goto	i1l1773
  3752     076F                     u112_20:
  3753     076F                     i1l1777:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3756     076F  01C4               	clrf	?_vfprintf
  3757     0770  01C5               	clrf	?_vfprintf+1
  3758     0771                     i1l926:
  3759     0771  0008               	return
  3760     0772                     __end_of_vfprintf:
  3761                           
  3762                           	psect	text18
  3763     01F0                     __ptext18:	
  3764 ;; *************** function _vfpfcnvrt *****************
  3765 ;; Defined at:
  3766 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  3769 ;;		 -> sprintf@f(11), 
  3770 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  3771 ;;		 -> vfprintf@cfmt(2), 
  3772 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3773 ;;		 -> sprintf@ap(1), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  convarg         4   29[BANK0 ] struct .
  3776 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  3777 ;;		 -> STR_6(20), STR_4(20), 
  3778 ;;  done            1   33[BANK0 ] _Bool 
  3779 ;;  c               1    0        unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3789 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;Total ram usage:       15 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 5
  3796 ;; This function calls:
  3797 ;;		_fputc
  3798 ;;		_read_prec_or_width
  3799 ;;		_utoa
  3800 ;; This function is called by:
  3801 ;;		_vfprintf
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     01F0                     _vfpfcnvrt:	
  3806                           ;psect for function _vfpfcnvrt
  3807                           
  3808     01F0                     i1l1713:	
  3809                           ;incstack = 0
  3810                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3811                           
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3814     01F0  0020               	movlb	0	; select bank0
  3815     01F1  0837               	movf	vfpfcnvrt@fmt,w
  3816     01F2  0086               	movwf	6
  3817     01F3  0187               	clrf	7
  3818     01F4  3F40               	moviw [0]fsr1
  3819     01F5  00B9               	movwf	??_vfpfcnvrt
  3820     01F6  3F41               	moviw [1]fsr1
  3821     01F7  00BA               	movwf	??_vfpfcnvrt+1
  3822     01F8  0839               	movf	??_vfpfcnvrt,w
  3823     01F9  0084               	movwf	4
  3824     01FA  083A               	movf	??_vfpfcnvrt+1,w
  3825     01FB  0085               	movwf	5
  3826     01FC  0012               	moviw fsr0++
  3827     01FD  3A25               	xorlw	37
  3828     01FE  1D03               	btfss	3,2
  3829     01FF  2A01               	goto	u107_21
  3830     0200  2A02               	goto	u107_20
  3831     0201                     u107_21:
  3832     0201  2A98               	goto	i1l1759
  3833     0202                     u107_20:
  3834     0202                     i1l1715:
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3837     0202  0837               	movf	vfpfcnvrt@fmt,w
  3838     0203  0086               	movwf	6
  3839     0204  0187               	clrf	7
  3840     0205  3001               	movlw	1
  3841     0206  0781               	addwf	1,f
  3842     0207  3141               	addfsr 1,1
  3843     0208  1803               	skipnc
  3844     0209  0A81               	incf	1,f
  3845     020A                     i1l1717:
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3848     020A  01DF               	clrf	_width
  3849     020B  01E0               	clrf	_width+1
  3850     020C  1003               	clrc
  3851     020D  3000               	movlw	0
  3852     020E  1803               	btfsc	3,0
  3853     020F  3001               	movlw	1
  3854     0210  00E7               	movwf	_flags
  3855     0211                     i1l1719:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3858     0211  30FF               	movlw	255
  3859     0212  00E1               	movwf	_prec
  3860     0213  30FF               	movlw	255
  3861     0214  00E2               	movwf	_prec+1
  3862     0215                     i1l1721:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  3865     0215  01C1               	clrf	vfpfcnvrt@done
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3868     0216  2A34               	goto	i1l1729
  3869     0217                     i1l909:	
  3870                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  3871                           
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3874     0217  14E7               	bsf	_flags,1
  3875     0218                     i1l1723:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3878     0218  0837               	movf	vfpfcnvrt@fmt,w
  3879     0219  0086               	movwf	6
  3880     021A  0187               	clrf	7
  3881     021B  3001               	movlw	1
  3882     021C  0781               	addwf	1,f
  3883     021D  3141               	addfsr 1,1
  3884     021E  1803               	skipnc
  3885     021F  0A81               	incf	1,f
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3888     0220  2A34               	goto	i1l1729
  3889     0221                     i1l911:	
  3890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  3891                           
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3894     0221  01C1               	clrf	vfpfcnvrt@done
  3895     0222  0AC1               	incf	vfpfcnvrt@done,f
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3898     0223  2A34               	goto	i1l1729
  3899     0224                     i1l1727:
  3900     0224  0837               	movf	vfpfcnvrt@fmt,w
  3901     0225  0086               	movwf	6
  3902     0226  0187               	clrf	7
  3903     0227  3F40               	moviw [0]fsr1
  3904     0228  00B9               	movwf	??_vfpfcnvrt
  3905     0229  3F41               	moviw [1]fsr1
  3906     022A  00BA               	movwf	??_vfpfcnvrt+1
  3907     022B  0839               	movf	??_vfpfcnvrt,w
  3908     022C  0084               	movwf	4
  3909     022D  083A               	movf	??_vfpfcnvrt+1,w
  3910     022E  0085               	movwf	5
  3911     022F  0800               	movf	0,w	;code access
  3912                           
  3913                           ; Switch size 1, requested type "simple"
  3914                           ; Number of cases is 1, Range of values is 48 to 48
  3915                           ; switch strategies available:
  3916                           ; Name         Instructions Cycles
  3917                           ; simple_byte            4     3 (average)
  3918                           ; direct_byte           11     9 (fixed)
  3919                           ; jumptable            263     9 (fixed)
  3920                           ;	Chosen strategy is simple_byte
  3921     0230  3A30               	xorlw	48	; case 48
  3922     0231  1903               	skipnz
  3923     0232  2A17               	goto	i1l909
  3924     0233  2A21               	goto	i1l911
  3925     0234                     i1l1729:
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3928     0234  0841               	movf	vfpfcnvrt@done,w
  3929     0235  1903               	btfsc	3,2
  3930     0236  2A38               	goto	u108_21
  3931     0237  2A39               	goto	u108_20
  3932     0238                     u108_21:
  3933     0238  2A24               	goto	i1l1727
  3934     0239                     u108_20:
  3935     0239                     i1l1731:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  3938     0239  0838               	movf	vfpfcnvrt@ap,w
  3939     023A  00F6               	movwf	read_prec_or_width@ap
  3940     023B  0837               	movf	vfpfcnvrt@fmt,w
  3941     023C  3183  2321  3181   	fcall	_read_prec_or_width
  3942     023F  0877               	movf	?_read_prec_or_width+1,w
  3943     0240  0020               	movlb	0	; select bank0
  3944     0241  00E0               	movwf	_width+1
  3945     0242  0876               	movf	?_read_prec_or_width,w
  3946     0243  00DF               	movwf	_width
  3947     0244                     i1l1733:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  3950     0244  1FE0               	btfss	_width+1,7
  3951     0245  2A47               	goto	u109_21
  3952     0246  2A48               	goto	u109_20
  3953     0247                     u109_21:
  3954     0247  2A4E               	goto	i1l1739
  3955     0248                     u109_20:
  3956     0248                     i1l1735:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  3959     0248  1467               	bsf	_flags,0
  3960     0249                     i1l1737:
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  3963     0249  09DF               	comf	_width,f
  3964     024A  09E0               	comf	_width+1,f
  3965     024B  0ADF               	incf	_width,f
  3966     024C  1903               	skipnz
  3967     024D  0AE0               	incf	_width+1,f
  3968     024E                     i1l1739:
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  3971     024E  0837               	movf	vfpfcnvrt@fmt,w
  3972     024F  0086               	movwf	6
  3973     0250  0187               	clrf	7
  3974     0251  3F40               	moviw [0]fsr1
  3975     0252  00C2               	movwf	vfpfcnvrt@cp
  3976     0253  3F41               	moviw [1]fsr1
  3977     0254  00C3               	movwf	vfpfcnvrt@cp+1
  3978     0255                     i1l1741:
  3979     0255  0842               	movf	vfpfcnvrt@cp,w
  3980     0256  0084               	movwf	4
  3981     0257  0843               	movf	vfpfcnvrt@cp+1,w
  3982     0258  0085               	movwf	5
  3983     0259  0012               	moviw fsr0++
  3984     025A  3A75               	xorlw	117
  3985     025B  1D03               	btfss	3,2
  3986     025C  2A5E               	goto	u110_21
  3987     025D  2A5F               	goto	u110_20
  3988     025E                     u110_21:
  3989     025E  2A8E               	goto	i1l1755
  3990     025F                     u110_20:
  3991     025F                     i1l1743:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  3994     025F  0838               	movf	vfpfcnvrt@ap,w
  3995     0260  0086               	movwf	6
  3996     0261  0187               	clrf	7
  3997     0262  0801               	movf	1,w
  3998     0263  0084               	movwf	4
  3999     0264  0185               	clrf	5
  4000     0265  3002               	movlw	2
  4001     0266  0781               	addwf	1,f
  4002     0267  3F00               	moviw [0]fsr0
  4003     0268  00BD               	movwf	vfpfcnvrt@convarg
  4004     0269  3F01               	moviw [1]fsr0
  4005     026A  00BE               	movwf	vfpfcnvrt@convarg+1
  4006     026B                     i1l1745:
  4007                           
  4008                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  4009     026B  0842               	movf	vfpfcnvrt@cp,w
  4010     026C  3E01               	addlw	1
  4011     026D  00B9               	movwf	??_vfpfcnvrt
  4012     026E  3000               	movlw	0
  4013     026F  3D43               	addwfc	vfpfcnvrt@cp+1,w
  4014     0270  00BA               	movwf	??_vfpfcnvrt+1
  4015     0271  0837               	movf	vfpfcnvrt@fmt,w
  4016     0272  0086               	movwf	6
  4017     0273  0187               	clrf	7
  4018     0274  0839               	movf	??_vfpfcnvrt,w
  4019     0275  3FC0               	movwi [0]fsr1
  4020     0276  083A               	movf	??_vfpfcnvrt+1,w
  4021     0277  3FC1               	movwi [1]fsr1
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  4024     0278  2A85               	goto	i1l1753
  4025     0279                     i1l1747:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  4028     0279  0836               	movf	vfpfcnvrt@fp+1,w
  4029     027A  00AC               	movwf	utoa@fp+1
  4030     027B  0835               	movf	vfpfcnvrt@fp,w
  4031     027C  00AB               	movwf	utoa@fp
  4032     027D  083E               	movf	vfpfcnvrt@convarg+1,w
  4033     027E  00AE               	movwf	utoa@d+1
  4034     027F  083D               	movf	vfpfcnvrt@convarg,w
  4035     0280  00AD               	movwf	utoa@d
  4036     0281  3182  22B3  3181   	fcall	_utoa
  4037     0284  2AB2               	goto	i1l919
  4038     0285                     i1l1753:
  4039     0285  0842               	movf	vfpfcnvrt@cp,w
  4040     0286  0084               	movwf	4
  4041     0287  0843               	movf	vfpfcnvrt@cp+1,w
  4042     0288  0085               	movwf	5
  4043     0289  0800               	movf	0,w	;code access
  4044                           
  4045                           ; Switch size 1, requested type "simple"
  4046                           ; Number of cases is 1, Range of values is 117 to 117
  4047                           ; switch strategies available:
  4048                           ; Name         Instructions Cycles
  4049                           ; simple_byte            4     3 (average)
  4050                           ; direct_byte           11     9 (fixed)
  4051                           ; jumptable            263     9 (fixed)
  4052                           ;	Chosen strategy is simple_byte
  4053     028A  3A75               	xorlw	117	; case 117
  4054     028B  1903               	skipnz
  4055     028C  2A79               	goto	i1l1747
  4056     028D  2A8E               	goto	i1l1755
  4057     028E                     i1l1755:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4060     028E  0020               	movlb	0	; select bank0
  4061     028F  0837               	movf	vfpfcnvrt@fmt,w
  4062     0290  0086               	movwf	6
  4063     0291  0187               	clrf	7
  4064     0292  3001               	movlw	1
  4065     0293  0781               	addwf	1,f
  4066     0294  3141               	addfsr 1,1
  4067     0295  1803               	skipnc
  4068     0296  0A81               	incf	1,f
  4069     0297  2AB2               	goto	i1l919
  4070     0298                     i1l1759:
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4073     0298  0837               	movf	vfpfcnvrt@fmt,w
  4074     0299  0086               	movwf	6
  4075     029A  0187               	clrf	7
  4076     029B  3F40               	moviw [0]fsr1
  4077     029C  00B9               	movwf	??_vfpfcnvrt
  4078     029D  3F41               	moviw [1]fsr1
  4079     029E  00BA               	movwf	??_vfpfcnvrt+1
  4080     029F  0839               	movf	??_vfpfcnvrt,w
  4081     02A0  0084               	movwf	4
  4082     02A1  083A               	movf	??_vfpfcnvrt+1,w
  4083     02A2  0085               	movwf	5
  4084     02A3  0800               	movf	0,w	;code access
  4085     02A4  00BB               	movwf	??_vfpfcnvrt+2
  4086     02A5  01BC               	clrf	??_vfpfcnvrt+3
  4087     02A6  083B               	movf	??_vfpfcnvrt+2,w
  4088     02A7  00F0               	movwf	fputc@c
  4089     02A8  083C               	movf	??_vfpfcnvrt+3,w
  4090     02A9  00F1               	movwf	fputc@c+1
  4091     02AA  0836               	movf	vfpfcnvrt@fp+1,w
  4092     02AB  00F3               	movwf	fputc@fp+1
  4093     02AC  0835               	movf	vfpfcnvrt@fp,w
  4094     02AD  00F2               	movwf	fputc@fp
  4095     02AE  3183  2381  3181   	fcall	_fputc
  4096     02B1  2A8E               	goto	i1l1755
  4097     02B2                     i1l919:
  4098     02B2  0008               	return
  4099     02B3                     __end_of_vfpfcnvrt:
  4100                           
  4101                           	psect	text19
  4102     02B3                     __ptext19:	
  4103 ;; *************** function _utoa *****************
  4104 ;; Defined at:
  4105 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4108 ;;		 -> sprintf@f(11), 
  4109 ;;  d               2   13[BANK0 ] unsigned int 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  i               2   19[BANK0 ] int 
  4112 ;;  w               2   17[BANK0 ] int 
  4113 ;;  p               1   16[BANK0 ] _Bool 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;Total ram usage:       10 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 4
  4130 ;; This function calls:
  4131 ;;		___lwdiv
  4132 ;;		___lwmod
  4133 ;;		_pad
  4134 ;; This function is called by:
  4135 ;;		_vfpfcnvrt
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139     02B3                     _utoa:	
  4140                           ;psect for function _utoa
  4141                           
  4142     02B3                     i1l1665:	
  4143                           ;incstack = 0
  4144                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4145                           
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  4148     02B3  0020               	movlb	0	; select bank0
  4149     02B4  01B0               	clrf	utoa@p
  4150     02B5  0AB0               	incf	utoa@p,f
  4151     02B6                     i1l1667:
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  4154     02B6  0860               	movf	_width+1,w
  4155     02B7  00B2               	movwf	utoa@w+1
  4156     02B8  085F               	movf	_width,w
  4157     02B9  00B1               	movwf	utoa@w
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  4160     02BA  301F               	movlw	31
  4161     02BB  00B3               	movwf	utoa@i
  4162     02BC  3000               	movlw	0
  4163     02BD  00B4               	movwf	utoa@i+1
  4164     02BE                     i1l1669:
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  4167     02BE  0021               	movlb	1	; select bank1
  4168     02BF  01C0               	clrf	(_dbuf^(0+128)+31)
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  4171     02C0  2AED               	goto	i1l1681
  4172     02C1                     i1l1671:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1034:         --i;
  4175     02C1  30FF               	movlw	255
  4176     02C2  07B3               	addwf	utoa@i,f
  4177     02C3  30FF               	movlw	255
  4178     02C4  3DB4               	addwfc	utoa@i+1,f
  4179     02C5                     i1l1673:
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  4182     02C5  0833               	movf	utoa@i,w
  4183     02C6  3EA1               	addlw	(low (_dbuf| 0))& (0+255)
  4184     02C7  0086               	movwf	6
  4185     02C8  0187               	clrf	7
  4186     02C9  300A               	movlw	10
  4187     02CA  00F0               	movwf	___lwmod@divisor
  4188     02CB  3000               	movlw	0
  4189     02CC  00F1               	movwf	___lwmod@divisor+1
  4190     02CD  082E               	movf	utoa@d+1,w
  4191     02CE  00F3               	movwf	___lwmod@dividend+1
  4192     02CF  082D               	movf	utoa@d,w
  4193     02D0  00F2               	movwf	___lwmod@dividend
  4194     02D1  3185  2543  3182   	fcall	___lwmod
  4195     02D4  0870               	movf	?___lwmod,w
  4196     02D5  3E30               	addlw	48
  4197     02D6  0081               	movwf	1
  4198     02D7                     i1l1675:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  4201     02D7  0020               	movlb	0	; select bank0
  4202     02D8  01B0               	clrf	utoa@p
  4203     02D9                     i1l1677:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  4206     02D9  30FF               	movlw	255
  4207     02DA  07B1               	addwf	utoa@w,f
  4208     02DB  30FF               	movlw	255
  4209     02DC  3DB2               	addwfc	utoa@w+1,f
  4210     02DD                     i1l1679:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  4213     02DD  300A               	movlw	10
  4214     02DE  00F0               	movwf	___lwdiv@divisor
  4215     02DF  3000               	movlw	0
  4216     02E0  00F1               	movwf	___lwdiv@divisor+1
  4217     02E1  082E               	movf	utoa@d+1,w
  4218     02E2  00F3               	movwf	___lwdiv@dividend+1
  4219     02E3  082D               	movf	utoa@d,w
  4220     02E4  00F2               	movwf	___lwdiv@dividend
  4221     02E5  3185  2507  3182   	fcall	___lwdiv
  4222     02E8  0871               	movf	?___lwdiv+1,w
  4223     02E9  0020               	movlb	0	; select bank0
  4224     02EA  00AE               	movwf	utoa@d+1
  4225     02EB  0870               	movf	?___lwdiv,w
  4226     02EC  00AD               	movwf	utoa@d
  4227     02ED                     i1l1681:
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  4230     02ED  0020               	movlb	0	; select bank0
  4231     02EE  0833               	movf	utoa@i,w
  4232     02EF  0434               	iorwf	utoa@i+1,w
  4233     02F0  1903               	btfsc	3,2
  4234     02F1  2AF3               	goto	u100_21
  4235     02F2  2AF4               	goto	u100_20
  4236     02F3                     u100_21:
  4237     02F3  2B11               	goto	i1l1691
  4238     02F4                     u100_20:
  4239     02F4                     i1l1683:
  4240     02F4  082D               	movf	utoa@d,w
  4241     02F5  042E               	iorwf	utoa@d+1,w
  4242     02F6  1D03               	btfss	3,2
  4243     02F7  2AF9               	goto	u101_21
  4244     02F8  2AFA               	goto	u101_20
  4245     02F9                     u101_21:
  4246     02F9  2AC1               	goto	i1l1671
  4247     02FA                     u101_20:
  4248     02FA                     i1l1685:
  4249     02FA  0830               	movf	utoa@p,w
  4250     02FB  1D03               	btfss	3,2
  4251     02FC  2AFE               	goto	u102_21
  4252     02FD  2AFF               	goto	u102_20
  4253     02FE                     u102_21:
  4254     02FE  2AC1               	goto	i1l1671
  4255     02FF                     u102_20:
  4256     02FF                     i1l1687:
  4257     02FF  0832               	movf	utoa@w+1,w
  4258     0300  3A80               	xorlw	128
  4259     0301  00AF               	movwf	??_utoa
  4260     0302  3080               	movlw	128
  4261     0303  022F               	subwf	??_utoa,w
  4262     0304  1D03               	skipz
  4263     0305  2B08               	goto	u103_25
  4264     0306  3001               	movlw	1
  4265     0307  0231               	subwf	utoa@w,w
  4266     0308                     u103_25:
  4267     0308  1C03               	skipc
  4268     0309  2B0B               	goto	u103_21
  4269     030A  2B0C               	goto	u103_20
  4270     030B                     u103_21:
  4271     030B  2B11               	goto	i1l1691
  4272     030C                     u103_20:
  4273     030C                     i1l1689:
  4274     030C  0020               	movlb	0	; select bank0
  4275     030D  18E7               	btfsc	_flags,1
  4276     030E  2B10               	goto	u104_21
  4277     030F  2B11               	goto	u104_20
  4278     0310                     u104_21:
  4279     0310  2AC1               	goto	i1l1671
  4280     0311                     u104_20:
  4281     0311                     i1l1691:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  4284     0311  0020               	movlb	0	; select bank0
  4285     0312  082C               	movf	utoa@fp+1,w
  4286     0313  00A5               	movwf	pad@fp+1
  4287     0314  082B               	movf	utoa@fp,w
  4288     0315  00A4               	movwf	pad@fp
  4289     0316  0833               	movf	utoa@i,w
  4290     0317  3EA1               	addlw	(low (_dbuf| 0))& (0+255)
  4291     0318  00A6               	movwf	pad@buf
  4292     0319  0832               	movf	utoa@w+1,w
  4293     031A  00A8               	movwf	pad@p+1
  4294     031B  0831               	movf	utoa@w,w
  4295     031C  00A7               	movwf	pad@p
  4296     031D  3184  2487  3182   	fcall	_pad
  4297     0320                     i1l894:
  4298     0320  0008               	return
  4299     0321                     __end_of_utoa:
  4300                           
  4301                           	psect	text20
  4302     0487                     __ptext20:	
  4303 ;; *************** function _pad *****************
  4304 ;; Defined at:
  4305 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  4308 ;;		 -> sprintf@f(11), 
  4309 ;;  buf             1    6[BANK0 ] PTR unsigned char 
  4310 ;;		 -> dbuf(32), 
  4311 ;;  p               2    7[BANK0 ] int 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  i               2    9[BANK0 ] int 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4323 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;Total ram usage:        8 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 3
  4330 ;; This function calls:
  4331 ;;		_fputc
  4332 ;;		_fputs
  4333 ;; This function is called by:
  4334 ;;		_utoa
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338     0487                     _pad:	
  4339                           ;psect for function _pad
  4340                           
  4341     0487                     i1l1649:	
  4342                           ;incstack = 0
  4343                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4344                           
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  4347     0487  0020               	movlb	0	; select bank0
  4348     0488  1C67               	btfss	_flags,0
  4349     0489  2C8B               	goto	u96_21
  4350     048A  2C8C               	goto	u96_20
  4351     048B                     u96_21:
  4352     048B  2C94               	goto	i1l1653
  4353     048C                     u96_20:
  4354     048C                     i1l1651:
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  4357     048C  0825               	movf	pad@fp+1,w
  4358     048D  00FA               	movwf	fputs@fp+1
  4359     048E  0824               	movf	pad@fp,w
  4360     048F  00F9               	movwf	fputs@fp
  4361     0490  0826               	movf	pad@buf,w
  4362     0491  3186  264B  3184   	fcall	_fputs
  4363     0494                     i1l1653:
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  4366     0494  0020               	movlb	0	; select bank0
  4367     0495  1FA8               	btfss	pad@p+1,7
  4368     0496  2C98               	goto	u97_21
  4369     0497  2C99               	goto	u97_20
  4370     0498                     u97_21:
  4371     0498  2C9B               	goto	i1l879
  4372     0499                     u97_20:
  4373     0499                     i1l1655:
  4374                           
  4375                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4376     0499  01A7               	clrf	pad@p
  4377     049A  01A8               	clrf	pad@p+1
  4378     049B                     i1l879:	
  4379                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
  4380                           
  4381                           
  4382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4383     049B  01A9               	clrf	pad@i
  4384     049C  01AA               	clrf	pad@i+1
  4385                           
  4386                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4387     049D  2CAF               	goto	i1l1661
  4388     049E                     i1l1657:
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4391     049E  3020               	movlw	32
  4392     049F  00F0               	movwf	fputc@c
  4393     04A0  3000               	movlw	0
  4394     04A1  00F1               	movwf	fputc@c+1
  4395     04A2  0020               	movlb	0	; select bank0
  4396     04A3  0825               	movf	pad@fp+1,w
  4397     04A4  00F3               	movwf	fputc@fp+1
  4398     04A5  0824               	movf	pad@fp,w
  4399     04A6  00F2               	movwf	fputc@fp
  4400     04A7  3183  2381  3184   	fcall	_fputc
  4401     04AA                     i1l1659:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4404     04AA  3001               	movlw	1
  4405     04AB  0020               	movlb	0	; select bank0
  4406     04AC  07A9               	addwf	pad@i,f
  4407     04AD  3000               	movlw	0
  4408     04AE  3DAA               	addwfc	pad@i+1,f
  4409     04AF                     i1l1661:
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4412     04AF  082A               	movf	pad@i+1,w
  4413     04B0  3A80               	xorlw	128
  4414     04B1  00FD               	movwf	??_pad
  4415     04B2  0828               	movf	pad@p+1,w
  4416     04B3  3A80               	xorlw	128
  4417     04B4  027D               	subwf	??_pad,w
  4418     04B5  1D03               	skipz
  4419     04B6  2CB9               	goto	u98_25
  4420     04B7  0827               	movf	pad@p,w
  4421     04B8  0229               	subwf	pad@i,w
  4422     04B9                     u98_25:
  4423     04B9  1C03               	skipc
  4424     04BA  2CBC               	goto	u98_21
  4425     04BB  2CBD               	goto	u98_20
  4426     04BC                     u98_21:
  4427     04BC  2C9E               	goto	i1l1657
  4428     04BD                     u98_20:
  4429     04BD                     i1l882:
  4430                           
  4431                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  4432     04BD  0020               	movlb	0	; select bank0
  4433     04BE  1867               	btfsc	_flags,0
  4434     04BF  2CC1               	goto	u99_21
  4435     04C0  2CC2               	goto	u99_20
  4436     04C1                     u99_21:
  4437     04C1  2CCA               	goto	i1l884
  4438     04C2                     u99_20:
  4439     04C2                     i1l1663:
  4440                           
  4441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4442     04C2  0825               	movf	pad@fp+1,w
  4443     04C3  00FA               	movwf	fputs@fp+1
  4444     04C4  0824               	movf	pad@fp,w
  4445     04C5  00F9               	movwf	fputs@fp
  4446     04C6  0826               	movf	pad@buf,w
  4447     04C7  3186  264B  3184   	fcall	_fputs
  4448     04CA                     i1l884:
  4449     04CA  0008               	return
  4450     04CB                     __end_of_pad:
  4451                           
  4452                           	psect	text21
  4453     064B                     __ptext21:	
  4454 ;; *************** function _fputs *****************
  4455 ;; Defined at:
  4456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  s               1    wreg     PTR const unsigned char 
  4459 ;;		 -> dbuf(32), 
  4460 ;;  fp              2    9[COMMON] PTR struct _IO_FILE
  4461 ;;		 -> sprintf@f(11), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4464 ;;		 -> dbuf(32), 
  4465 ;;  i               2    1[BANK0 ] int 
  4466 ;;  c               1    0[BANK0 ] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    9[COMMON] int 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;Total ram usage:        8 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 2
  4483 ;; This function calls:
  4484 ;;		_fputc
  4485 ;; This function is called by:
  4486 ;;		_pad
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490     064B                     _fputs:	
  4491                           ;psect for function _fputs
  4492                           
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4496                           ;fputs@s stored from wreg
  4497     064B  0020               	movlb	0	; select bank0
  4498     064C  00A3               	movwf	fputs@s
  4499     064D                     i1l1579:
  4500     064D  01A1               	clrf	fputs@i
  4501     064E  01A2               	clrf	fputs@i+1
  4502     064F  2E63               	goto	i1l1585
  4503     0650                     i1l1581:
  4504     0650  0820               	movf	fputs@c,w
  4505     0651  00FB               	movwf	??_fputs
  4506     0652  01FC               	clrf	??_fputs+1
  4507     0653  087B               	movf	??_fputs,w
  4508     0654  00F0               	movwf	fputc@c
  4509     0655  087C               	movf	??_fputs+1,w
  4510     0656  00F1               	movwf	fputc@c+1
  4511     0657  087A               	movf	fputs@fp+1,w
  4512     0658  00F3               	movwf	fputc@fp+1
  4513     0659  0879               	movf	fputs@fp,w
  4514     065A  00F2               	movwf	fputc@fp
  4515     065B  3183  2381  3186   	fcall	_fputc
  4516     065E                     i1l1583:
  4517     065E  3001               	movlw	1
  4518     065F  0020               	movlb	0	; select bank0
  4519     0660  07A1               	addwf	fputs@i,f
  4520     0661  3000               	movlw	0
  4521     0662  3DA2               	addwfc	fputs@i+1,f
  4522     0663                     i1l1585:
  4523     0663  0821               	movf	fputs@i,w
  4524     0664  0723               	addwf	fputs@s,w
  4525     0665  00FB               	movwf	??_fputs
  4526     0666  087B               	movf	??_fputs,w
  4527     0667  0086               	movwf	6
  4528     0668  0187               	clrf	7
  4529     0669  0801               	movf	1,w
  4530     066A  00A0               	movwf	fputs@c
  4531     066B  0820               	movf	fputs@c,w
  4532     066C  1D03               	btfss	3,2
  4533     066D  2E6F               	goto	u78_21
  4534     066E  2E70               	goto	u78_20
  4535     066F                     u78_21:
  4536     066F  2E50               	goto	i1l1581
  4537     0670                     u78_20:
  4538     0670                     i1l946:
  4539     0670  0008               	return
  4540     0671                     __end_of_fputs:
  4541                           
  4542                           	psect	text22
  4543     0381                     __ptext22:	
  4544 ;; *************** function _fputc *****************
  4545 ;; Defined at:
  4546 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  c               2    0[COMMON] int 
  4549 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  4550 ;;		 -> sprintf@f(11), 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2    0[COMMON] int 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;Total ram usage:        9 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 1
  4569 ;; This function calls:
  4570 ;;		_putch
  4571 ;; This function is called by:
  4572 ;;		_pad
  4573 ;;		_vfpfcnvrt
  4574 ;;		_fputs
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578     0381                     _fputc:	
  4579                           ;psect for function _fputc
  4580                           
  4581     0381                     i1l1563:	
  4582                           ;incstack = 0
  4583                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4584                           
  4585     0381  0872               	movf	fputc@fp,w
  4586     0382  0473               	iorwf	fputc@fp+1,w
  4587     0383  1903               	btfsc	3,2
  4588     0384  2B86               	goto	u74_21
  4589     0385  2B87               	goto	u74_20
  4590     0386                     u74_21:
  4591     0386  2B8D               	goto	i1l1567
  4592     0387                     u74_20:
  4593     0387                     i1l1565:
  4594     0387  0872               	movf	fputc@fp,w
  4595     0388  0473               	iorwf	fputc@fp+1,w
  4596     0389  1D03               	btfss	3,2
  4597     038A  2B8C               	goto	u75_21
  4598     038B  2B8D               	goto	u75_20
  4599     038C                     u75_21:
  4600     038C  2B92               	goto	i1l1569
  4601     038D                     u75_20:
  4602     038D                     i1l1567:
  4603     038D  0870               	movf	fputc@c,w
  4604     038E  3180  2003  3183   	fcall	_putch
  4605     0391  2BDD               	goto	i1l938
  4606     0392                     i1l1569:
  4607     0392  0872               	movf	fputc@fp,w
  4608     0393  0086               	movwf	6
  4609     0394  0873               	movf	fputc@fp+1,w
  4610     0395  0087               	movwf	7
  4611     0396  3149               	addfsr 1,9
  4612     0397  0016               	moviw fsr1++
  4613     0398  0401               	iorwf	1,w
  4614     0399  1903               	btfsc	3,2
  4615     039A  2B9C               	goto	u76_21
  4616     039B  2B9D               	goto	u76_20
  4617     039C                     u76_21:
  4618     039C  2BBD               	goto	i1l1573
  4619     039D                     u76_20:
  4620     039D                     i1l1571:
  4621     039D  0872               	movf	fputc@fp,w
  4622     039E  0086               	movwf	6
  4623     039F  0873               	movf	fputc@fp+1,w
  4624     03A0  0087               	movwf	7
  4625     03A1  3149               	addfsr 1,9
  4626     03A2  3F40               	moviw [0]fsr1
  4627     03A3  00F4               	movwf	??_fputc
  4628     03A4  3F41               	moviw [1]fsr1
  4629     03A5  00F5               	movwf	??_fputc+1
  4630     03A6  0872               	movf	fputc@fp,w
  4631     03A7  0086               	movwf	6
  4632     03A8  0873               	movf	fputc@fp+1,w
  4633     03A9  0087               	movwf	7
  4634     03AA  3142               	addfsr 1,2
  4635     03AB  3F40               	moviw [0]fsr1
  4636     03AC  00F6               	movwf	??_fputc+2
  4637     03AD  3F41               	moviw [1]fsr1
  4638     03AE  00F7               	movwf	??_fputc+3
  4639     03AF  0877               	movf	??_fputc+3,w
  4640     03B0  3A80               	xorlw	128
  4641     03B1  00F8               	movwf	??_fputc+4
  4642     03B2  0875               	movf	??_fputc+1,w
  4643     03B3  3A80               	xorlw	128
  4644     03B4  0278               	subwf	??_fputc+4,w
  4645     03B5  1D03               	skipz
  4646     03B6  2BB9               	goto	u77_25
  4647     03B7  0874               	movf	??_fputc,w
  4648     03B8  0276               	subwf	??_fputc+2,w
  4649     03B9                     u77_25:
  4650     03B9  1803               	skipnc
  4651     03BA  2BBC               	goto	u77_21
  4652     03BB  2BBD               	goto	u77_20
  4653     03BC                     u77_21:
  4654     03BC  2BDD               	goto	i1l938
  4655     03BD                     u77_20:
  4656     03BD                     i1l1573:
  4657     03BD  0872               	movf	fputc@fp,w
  4658     03BE  0086               	movwf	6
  4659     03BF  0873               	movf	fputc@fp+1,w
  4660     03C0  0087               	movwf	7
  4661     03C1  3142               	addfsr 1,2
  4662     03C2  0872               	movf	fputc@fp,w
  4663     03C3  0084               	movwf	4
  4664     03C4  0873               	movf	fputc@fp+1,w
  4665     03C5  0085               	movwf	5
  4666     03C6  3F40               	moviw [0]fsr1
  4667     03C7  0700               	addwf	0,w
  4668     03C8  00F4               	movwf	??_fputc
  4669     03C9  3101               	addfsr 0,1
  4670     03CA  3F41               	moviw [1]fsr1
  4671     03CB  3D00               	addwfc	0,w
  4672     03CC  00F5               	movwf	??_fputc+1
  4673     03CD  0874               	movf	??_fputc,w
  4674     03CE  0086               	movwf	6
  4675     03CF  0875               	movf	??_fputc+1,w
  4676     03D0  0087               	movwf	7
  4677     03D1  0870               	movf	fputc@c,w
  4678     03D2  0081               	movwf	1
  4679     03D3                     i1l1575:
  4680     03D3  0872               	movf	fputc@fp,w
  4681     03D4  0086               	movwf	6
  4682     03D5  0873               	movf	fputc@fp+1,w
  4683     03D6  0087               	movwf	7
  4684     03D7  3142               	addfsr 1,2
  4685     03D8  3001               	movlw	1
  4686     03D9  0781               	addwf	1,f
  4687     03DA  3141               	addfsr 1,1
  4688     03DB  1803               	skipnc
  4689     03DC  0A81               	incf	1,f
  4690     03DD                     i1l938:
  4691     03DD  0008               	return
  4692     03DE                     __end_of_fputc:
  4693                           
  4694                           	psect	text23
  4695     0003                     __ptext23:	
  4696 ;; *************** function _putch *****************
  4697 ;; Defined at:
  4698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  c               1    wreg     unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  c               1    0[COMMON] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_fputc
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725     0003                     _putch:	
  4726                           ;psect for function _putch
  4727                           
  4728     0003                     i1l949:	
  4729                           ;incstack = 0
  4730                           ; Regs used in _putch: [wreg]
  4731                           
  4732     0003  0008               	return
  4733     0004                     __end_of_putch:
  4734                           
  4735                           	psect	text24
  4736     0543                     __ptext24:	
  4737 ;; *************** function ___lwmod *****************
  4738 ;; Defined at:
  4739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  divisor         2    0[COMMON] unsigned int 
  4742 ;;  dividend        2    2[COMMON] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  counter         1    5[COMMON] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2    0[COMMON] unsigned int 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        6 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_utoa
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767     0543                     ___lwmod:	
  4768                           ;psect for function ___lwmod
  4769                           
  4770     0543                     i1l1627:	
  4771                           ;incstack = 0
  4772                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4773                           
  4774     0543  0870               	movf	___lwmod@divisor,w
  4775     0544  0471               	iorwf	___lwmod@divisor+1,w
  4776     0545  1903               	btfsc	3,2
  4777     0546  2D48               	goto	u90_21
  4778     0547  2D49               	goto	u90_20
  4779     0548                     u90_21:
  4780     0548  2D72               	goto	i1l1645
  4781     0549                     u90_20:
  4782     0549                     i1l1629:
  4783     0549  01F5               	clrf	___lwmod@counter
  4784     054A  0AF5               	incf	___lwmod@counter,f
  4785     054B  2D55               	goto	i1l1635
  4786     054C                     i1l1631:
  4787     054C  3001               	movlw	1
  4788     054D                     u91_25:
  4789     054D  35F0               	lslf	___lwmod@divisor,f
  4790     054E  0DF1               	rlf	___lwmod@divisor+1,f
  4791     054F  0B89               	decfsz	9,f
  4792     0550  2D4D               	goto	u91_25
  4793     0551                     i1l1633:
  4794     0551  3001               	movlw	1
  4795     0552  00F4               	movwf	??___lwmod
  4796     0553  0874               	movf	??___lwmod,w
  4797     0554  07F5               	addwf	___lwmod@counter,f
  4798     0555                     i1l1635:
  4799     0555  1FF1               	btfss	___lwmod@divisor+1,7
  4800     0556  2D58               	goto	u92_21
  4801     0557  2D59               	goto	u92_20
  4802     0558                     u92_21:
  4803     0558  2D4C               	goto	i1l1631
  4804     0559                     u92_20:
  4805     0559                     i1l1637:
  4806     0559  0871               	movf	___lwmod@divisor+1,w
  4807     055A  0273               	subwf	___lwmod@dividend+1,w
  4808     055B  1D03               	skipz
  4809     055C  2D5F               	goto	u93_25
  4810     055D  0870               	movf	___lwmod@divisor,w
  4811     055E  0272               	subwf	___lwmod@dividend,w
  4812     055F                     u93_25:
  4813     055F  1C03               	skipc
  4814     0560  2D62               	goto	u93_21
  4815     0561  2D63               	goto	u93_20
  4816     0562                     u93_21:
  4817     0562  2D67               	goto	i1l1641
  4818     0563                     u93_20:
  4819     0563                     i1l1639:
  4820     0563  0870               	movf	___lwmod@divisor,w
  4821     0564  02F2               	subwf	___lwmod@dividend,f
  4822     0565  0871               	movf	___lwmod@divisor+1,w
  4823     0566  3BF3               	subwfb	___lwmod@dividend+1,f
  4824     0567                     i1l1641:
  4825     0567  3001               	movlw	1
  4826     0568                     u94_25:
  4827     0568  36F1               	lsrf	___lwmod@divisor+1,f
  4828     0569  0CF0               	rrf	___lwmod@divisor,f
  4829     056A  0B89               	decfsz	9,f
  4830     056B  2D68               	goto	u94_25
  4831     056C                     i1l1643:
  4832     056C  3001               	movlw	1
  4833     056D  02F5               	subwf	___lwmod@counter,f
  4834     056E  1D03               	btfss	3,2
  4835     056F  2D71               	goto	u95_21
  4836     0570  2D72               	goto	u95_20
  4837     0571                     u95_21:
  4838     0571  2D59               	goto	i1l1637
  4839     0572                     u95_20:
  4840     0572                     i1l1645:
  4841     0572  0873               	movf	___lwmod@dividend+1,w
  4842     0573  00F1               	movwf	?___lwmod+1
  4843     0574  0872               	movf	___lwmod@dividend,w
  4844     0575  00F0               	movwf	?___lwmod
  4845     0576                     i1l688:
  4846     0576  0008               	return
  4847     0577                     __end_of___lwmod:
  4848                           
  4849                           	psect	text25
  4850     0507                     __ptext25:	
  4851 ;; *************** function ___lwdiv *****************
  4852 ;; Defined at:
  4853 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  divisor         2    0[COMMON] unsigned int 
  4856 ;;  dividend        2    2[COMMON] unsigned int 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  quotient        2    5[COMMON] unsigned int 
  4859 ;;  counter         1    7[COMMON] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2    0[COMMON] unsigned int 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;Total ram usage:        8 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_utoa
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882     0507                     ___lwdiv:	
  4883                           ;psect for function ___lwdiv
  4884                           
  4885     0507                     i1l1601:	
  4886                           ;incstack = 0
  4887                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4888                           
  4889     0507  01F5               	clrf	___lwdiv@quotient
  4890     0508  01F6               	clrf	___lwdiv@quotient+1
  4891     0509                     i1l1603:
  4892     0509  0870               	movf	___lwdiv@divisor,w
  4893     050A  0471               	iorwf	___lwdiv@divisor+1,w
  4894     050B  1903               	btfsc	3,2
  4895     050C  2D0E               	goto	u83_21
  4896     050D  2D0F               	goto	u83_20
  4897     050E                     u83_21:
  4898     050E  2D3E               	goto	i1l1623
  4899     050F                     u83_20:
  4900     050F                     i1l1605:
  4901     050F  01F7               	clrf	___lwdiv@counter
  4902     0510  0AF7               	incf	___lwdiv@counter,f
  4903     0511  2D1B               	goto	i1l1611
  4904     0512                     i1l1607:
  4905     0512  3001               	movlw	1
  4906     0513                     u84_25:
  4907     0513  35F0               	lslf	___lwdiv@divisor,f
  4908     0514  0DF1               	rlf	___lwdiv@divisor+1,f
  4909     0515  0B89               	decfsz	9,f
  4910     0516  2D13               	goto	u84_25
  4911     0517                     i1l1609:
  4912     0517  3001               	movlw	1
  4913     0518  00F4               	movwf	??___lwdiv
  4914     0519  0874               	movf	??___lwdiv,w
  4915     051A  07F7               	addwf	___lwdiv@counter,f
  4916     051B                     i1l1611:
  4917     051B  1FF1               	btfss	___lwdiv@divisor+1,7
  4918     051C  2D1E               	goto	u85_21
  4919     051D  2D1F               	goto	u85_20
  4920     051E                     u85_21:
  4921     051E  2D12               	goto	i1l1607
  4922     051F                     u85_20:
  4923     051F                     i1l1613:
  4924     051F  3001               	movlw	1
  4925     0520                     u86_25:
  4926     0520  35F5               	lslf	___lwdiv@quotient,f
  4927     0521  0DF6               	rlf	___lwdiv@quotient+1,f
  4928     0522  0B89               	decfsz	9,f
  4929     0523  2D20               	goto	u86_25
  4930     0524  0871               	movf	___lwdiv@divisor+1,w
  4931     0525  0273               	subwf	___lwdiv@dividend+1,w
  4932     0526  1D03               	skipz
  4933     0527  2D2A               	goto	u87_25
  4934     0528  0870               	movf	___lwdiv@divisor,w
  4935     0529  0272               	subwf	___lwdiv@dividend,w
  4936     052A                     u87_25:
  4937     052A  1C03               	skipc
  4938     052B  2D2D               	goto	u87_21
  4939     052C  2D2E               	goto	u87_20
  4940     052D                     u87_21:
  4941     052D  2D33               	goto	i1l1619
  4942     052E                     u87_20:
  4943     052E                     i1l1615:
  4944     052E  0870               	movf	___lwdiv@divisor,w
  4945     052F  02F2               	subwf	___lwdiv@dividend,f
  4946     0530  0871               	movf	___lwdiv@divisor+1,w
  4947     0531  3BF3               	subwfb	___lwdiv@dividend+1,f
  4948     0532                     i1l1617:
  4949     0532  1475               	bsf	___lwdiv@quotient,0
  4950     0533                     i1l1619:
  4951     0533  3001               	movlw	1
  4952     0534                     u88_25:
  4953     0534  36F1               	lsrf	___lwdiv@divisor+1,f
  4954     0535  0CF0               	rrf	___lwdiv@divisor,f
  4955     0536  0B89               	decfsz	9,f
  4956     0537  2D34               	goto	u88_25
  4957     0538                     i1l1621:
  4958     0538  3001               	movlw	1
  4959     0539  02F7               	subwf	___lwdiv@counter,f
  4960     053A  1D03               	btfss	3,2
  4961     053B  2D3D               	goto	u89_21
  4962     053C  2D3E               	goto	u89_20
  4963     053D                     u89_21:
  4964     053D  2D1F               	goto	i1l1613
  4965     053E                     u89_20:
  4966     053E                     i1l1623:
  4967     053E  0876               	movf	___lwdiv@quotient+1,w
  4968     053F  00F1               	movwf	?___lwdiv+1
  4969     0540  0875               	movf	___lwdiv@quotient,w
  4970     0541  00F0               	movwf	?___lwdiv
  4971     0542                     i1l678:
  4972     0542  0008               	return
  4973     0543                     __end_of___lwdiv:
  4974                           
  4975                           	psect	text26
  4976     0321                     __ptext26:	
  4977 ;; *************** function _read_prec_or_width *****************
  4978 ;; Defined at:
  4979 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  fmt             1    wreg     PTR PTR const unsigned c
  4982 ;;		 -> vfprintf@cfmt(2), 
  4983 ;;  ap              1    6[COMMON] PTR PTR void [1]
  4984 ;;		 -> sprintf@ap(1), 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  4987 ;;		 -> vfprintf@cfmt(2), 
  4988 ;;  c               1    0[BANK0 ] unsigned char 
  4989 ;;  n               2    1[BANK0 ] int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2    6[COMMON] int 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;Total ram usage:        9 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 1
  5006 ;; This function calls:
  5007 ;;		___wmul
  5008 ;; This function is called by:
  5009 ;;		_vfpfcnvrt
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013     0321                     _read_prec_or_width:	
  5014                           ;psect for function _read_prec_or_width
  5015                           
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5019                           ;read_prec_or_width@fmt stored from wreg
  5020     0321  0020               	movlb	0	; select bank0
  5021     0322  00A3               	movwf	read_prec_or_width@fmt
  5022     0323                     i1l1695:
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  5025     0323  01A1               	clrf	read_prec_or_width@n
  5026     0324  01A2               	clrf	read_prec_or_width@n+1
  5027     0325                     i1l1697:
  5028                           
  5029                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  5030     0325  0823               	movf	read_prec_or_width@fmt,w
  5031     0326  0086               	movwf	6
  5032     0327  0187               	clrf	7
  5033     0328  3F40               	moviw [0]fsr1
  5034     0329  00F8               	movwf	??_read_prec_or_width
  5035     032A  3F41               	moviw [1]fsr1
  5036     032B  00F9               	movwf	??_read_prec_or_width+1
  5037     032C  0878               	movf	??_read_prec_or_width,w
  5038     032D  0084               	movwf	4
  5039     032E  0879               	movf	??_read_prec_or_width+1,w
  5040     032F  0085               	movwf	5
  5041     0330  0012               	moviw fsr0++
  5042     0331  3A2A               	xorlw	42
  5043     0332  1D03               	btfss	3,2
  5044     0333  2B35               	goto	u105_21
  5045     0334  2B36               	goto	u105_20
  5046     0335                     u105_21:
  5047     0335  2B68               	goto	i1l1707
  5048     0336                     u105_20:
  5049     0336                     i1l1699:
  5050                           
  5051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  5052     0336  0823               	movf	read_prec_or_width@fmt,w
  5053     0337  0086               	movwf	6
  5054     0338  0187               	clrf	7
  5055     0339  3001               	movlw	1
  5056     033A  0781               	addwf	1,f
  5057     033B  3141               	addfsr 1,1
  5058     033C  1803               	skipnc
  5059     033D  0A81               	incf	1,f
  5060     033E                     i1l1701:
  5061                           
  5062                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  5063     033E  0876               	movf	read_prec_or_width@ap,w
  5064     033F  0086               	movwf	6
  5065     0340  0187               	clrf	7
  5066     0341  0801               	movf	1,w
  5067     0342  0084               	movwf	4
  5068     0343  0185               	clrf	5
  5069     0344  3002               	movlw	2
  5070     0345  0781               	addwf	1,f
  5071     0346  3F00               	moviw [0]fsr0
  5072     0347  00A1               	movwf	read_prec_or_width@n
  5073     0348  3F01               	moviw [1]fsr0
  5074     0349  00A2               	movwf	read_prec_or_width@n+1
  5075                           
  5076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  5077     034A  2B7C               	goto	i1l1709
  5078     034B                     i1l1703:
  5079                           
  5080                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  5081     034B  0820               	movf	read_prec_or_width@c,w
  5082     034C  00F8               	movwf	??_read_prec_or_width
  5083     034D  01F9               	clrf	??_read_prec_or_width+1
  5084     034E  0822               	movf	read_prec_or_width@n+1,w
  5085     034F  00F1               	movwf	___wmul@multiplier+1
  5086     0350  0821               	movf	read_prec_or_width@n,w
  5087     0351  00F0               	movwf	___wmul@multiplier
  5088     0352  300A               	movlw	10
  5089     0353  00F2               	movwf	___wmul@multiplicand
  5090     0354  3000               	movlw	0
  5091     0355  00F3               	movwf	___wmul@multiplicand+1
  5092     0356  3187  2735  3183   	fcall	___wmul
  5093     0359  0878               	movf	??_read_prec_or_width,w
  5094     035A  0770               	addwf	?___wmul,w
  5095     035B  0020               	movlb	0	; select bank0
  5096     035C  00A1               	movwf	read_prec_or_width@n
  5097     035D  0879               	movf	??_read_prec_or_width+1,w
  5098     035E  3D71               	addwfc	?___wmul+1,w
  5099     035F  00A2               	movwf	read_prec_or_width@n+1
  5100     0360                     i1l1705:
  5101                           
  5102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  5103     0360  0823               	movf	read_prec_or_width@fmt,w
  5104     0361  0086               	movwf	6
  5105     0362  0187               	clrf	7
  5106     0363  3001               	movlw	1
  5107     0364  0781               	addwf	1,f
  5108     0365  3141               	addfsr 1,1
  5109     0366  1803               	skipnc
  5110     0367  0A81               	incf	1,f
  5111     0368                     i1l1707:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5114     0368  0823               	movf	read_prec_or_width@fmt,w
  5115     0369  0086               	movwf	6
  5116     036A  0187               	clrf	7
  5117     036B  3F40               	moviw [0]fsr1
  5118     036C  00F8               	movwf	??_read_prec_or_width
  5119     036D  3F41               	moviw [1]fsr1
  5120     036E  00F9               	movwf	??_read_prec_or_width+1
  5121     036F  0878               	movf	??_read_prec_or_width,w
  5122     0370  0084               	movwf	4
  5123     0371  0879               	movf	??_read_prec_or_width+1,w
  5124     0372  0085               	movwf	5
  5125     0373  0800               	movf	0,w	;code access
  5126     0374  3ED0               	addlw	208
  5127     0375  00A0               	movwf	read_prec_or_width@c
  5128     0376  300A               	movlw	10
  5129     0377  0220               	subwf	read_prec_or_width@c,w
  5130     0378  1C03               	skipc
  5131     0379  2B7B               	goto	u106_21
  5132     037A  2B7C               	goto	u106_20
  5133     037B                     u106_21:
  5134     037B  2B4B               	goto	i1l1703
  5135     037C                     u106_20:
  5136     037C                     i1l1709:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  5139     037C  0822               	movf	read_prec_or_width@n+1,w
  5140     037D  00F7               	movwf	?_read_prec_or_width+1
  5141     037E  0821               	movf	read_prec_or_width@n,w
  5142     037F  00F6               	movwf	?_read_prec_or_width
  5143     0380                     i1l902:
  5144     0380  0008               	return
  5145     0381                     __end_of_read_prec_or_width:
  5146                           
  5147                           	psect	text27
  5148     0735                     __ptext27:	
  5149 ;; *************** function ___wmul *****************
  5150 ;; Defined at:
  5151 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  multiplier      2    0[COMMON] unsigned int 
  5154 ;;  multiplicand    2    2[COMMON] unsigned int 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  product         2    4[COMMON] unsigned int 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2    0[COMMON] unsigned int 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;Total ram usage:        6 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_read_prec_or_width
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179     0735                     ___wmul:	
  5180                           ;psect for function ___wmul
  5181                           
  5182     0735                     i1l1587:	
  5183                           ;incstack = 0
  5184                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5185                           
  5186     0735  01F4               	clrf	___wmul@product
  5187     0736  01F5               	clrf	___wmul@product+1
  5188     0737                     i1l1589:
  5189     0737  1C70               	btfss	___wmul@multiplier,0
  5190     0738  2F3A               	goto	u79_21
  5191     0739  2F3B               	goto	u79_20
  5192     073A                     u79_21:
  5193     073A  2F3F               	goto	i1l398
  5194     073B                     u79_20:
  5195     073B                     i1l1591:
  5196     073B  0872               	movf	___wmul@multiplicand,w
  5197     073C  07F4               	addwf	___wmul@product,f
  5198     073D  0873               	movf	___wmul@multiplicand+1,w
  5199     073E  3DF5               	addwfc	___wmul@product+1,f
  5200     073F                     i1l398:
  5201     073F  3001               	movlw	1
  5202     0740                     u80_25:
  5203     0740  35F2               	lslf	___wmul@multiplicand,f
  5204     0741  0DF3               	rlf	___wmul@multiplicand+1,f
  5205     0742  0B89               	decfsz	9,f
  5206     0743  2F40               	goto	u80_25
  5207     0744                     i1l1593:
  5208     0744  3001               	movlw	1
  5209     0745                     u81_25:
  5210     0745  36F1               	lsrf	___wmul@multiplier+1,f
  5211     0746  0CF0               	rrf	___wmul@multiplier,f
  5212     0747  0B89               	decfsz	9,f
  5213     0748  2F45               	goto	u81_25
  5214     0749                     i1l1595:
  5215     0749  0870               	movf	___wmul@multiplier,w
  5216     074A  0471               	iorwf	___wmul@multiplier+1,w
  5217     074B  1D03               	btfss	3,2
  5218     074C  2F4E               	goto	u82_21
  5219     074D  2F4F               	goto	u82_20
  5220     074E                     u82_21:
  5221     074E  2F37               	goto	i1l1589
  5222     074F                     u82_20:
  5223     074F                     i1l1597:
  5224     074F  0875               	movf	___wmul@product+1,w
  5225     0750  00F1               	movwf	?___wmul+1
  5226     0751  0874               	movf	___wmul@product,w
  5227     0752  00F0               	movwf	?___wmul
  5228     0753                     i1l400:
  5229     0753  0008               	return
  5230     0754                     __end_of___wmul:
  5231                           
  5232                           	psect	text28
  5233     03DE                     __ptext28:	
  5234 ;; *************** function _getVoltage *****************
  5235 ;; Defined at:
  5236 ;;		line 42 in file "battery_discharge.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  voltage         2    7[COMMON] unsigned short 
  5241 ;;  hi              1   10[COMMON] unsigned char 
  5242 ;;  lo              1    9[COMMON] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  2    0[COMMON] unsigned short 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0, pclath, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;Total ram usage:       11 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 1
  5259 ;; This function calls:
  5260 ;;		_isFVReadDone
  5261 ;; This function is called by:
  5262 ;;		_ISR
  5263 ;;		_batteryTest
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267     03DE                     _getVoltage:	
  5268                           ;psect for function _getVoltage
  5269                           
  5270     03DE                     i1l1783:	
  5271                           ;incstack = 0
  5272                           ; Regs used in _getVoltage: [wreg+status,2+status,0+pclath+cstack]
  5273                           
  5274                           
  5275                           ;battery_discharge.c: 44:     uint8_t lo, hi;;battery_discharge.c: 45:     uint16_t volt
      +                          age;;battery_discharge.c: 47:     FVRCONbits.ADFVR = 0b01;
  5276     03DE  0022               	movlb	2	; select bank2
  5277     03DF  0817               	movf	23,w	;volatile
  5278     03E0  39FC               	andlw	-4
  5279     03E1  3801               	iorlw	1
  5280     03E2  0097               	movwf	23	;volatile
  5281     03E3                     i1l1785:
  5282                           
  5283                           ;battery_discharge.c: 48:     FVRCONbits.FVREN = 0b1;
  5284     03E3  1797               	bsf	23,7	;volatile
  5285     03E4                     i1l118:	
  5286                           ;battery_discharge.c: 49:     while(!FVRCONbits.FVRRDY);
  5287                           
  5288     03E4  1F17               	btfss	23,6	;volatile
  5289     03E5  2BE7               	goto	u114_21
  5290     03E6  2BE8               	goto	u114_20
  5291     03E7                     u114_21:
  5292     03E7  2BE4               	goto	i1l118
  5293     03E8                     u114_20:
  5294     03E8                     i1l1787:
  5295                           
  5296                           ;battery_discharge.c: 52:     ADCON1bits.ADPREF = 0b10;
  5297     03E8  0021               	movlb	1	; select bank1
  5298     03E9  081E               	movf	30,w	;volatile
  5299     03EA  39FC               	andlw	-4
  5300     03EB  3802               	iorlw	2
  5301     03EC  009E               	movwf	30	;volatile
  5302     03ED                     i1l1789:
  5303                           
  5304                           ;battery_discharge.c: 53:     ADCON1bits.ADNREF = 0b1;
  5305     03ED  151E               	bsf	30,2	;volatile
  5306                           
  5307                           ;battery_discharge.c: 56:     ADCON1bits.ADCS = 0b010;
  5308     03EE  081E               	movf	30,w	;volatile
  5309     03EF  398F               	andlw	-113
  5310     03F0  3820               	iorlw	32
  5311     03F1  009E               	movwf	30	;volatile
  5312     03F2                     i1l1791:
  5313                           
  5314                           ;battery_discharge.c: 57:     ADCON1bits.ADFM = 0b1;
  5315     03F2  179E               	bsf	30,7	;volatile
  5316                           
  5317                           ;battery_discharge.c: 58:     ADCON0bits.CHS = 0b01001;
  5318     03F3  081D               	movf	29,w	;volatile
  5319     03F4  3983               	andlw	-125
  5320     03F5  3824               	iorlw	36
  5321     03F6  009D               	movwf	29	;volatile
  5322     03F7                     i1l1793:
  5323                           
  5324                           ;battery_discharge.c: 59:     ADCON0bits.ADON = 1;
  5325     03F7  141D               	bsf	29,0	;volatile
  5326     03F8                     i1l1795:
  5327                           
  5328                           ;battery_discharge.c: 60:     _delay((unsigned long)((1)*(32000000/4000.0)));
  5329     03F8  300B               	movlw	11
  5330     03F9  00F2               	movwf	??_getVoltage
  5331     03FA  3062               	movlw	98
  5332     03FB                     u148_27:
  5333     03FB  0B89               	decfsz	9,f
  5334     03FC  2BFB               	goto	u148_27
  5335     03FD  0BF2               	decfsz	??_getVoltage,f
  5336     03FE  2BFB               	goto	u148_27
  5337     03FF  3200               	nop2
  5338     0400                     i1l1797:
  5339                           
  5340                           ;battery_discharge.c: 62:     RC3 = 1;
  5341     0400  0020               	movlb	0	; select bank0
  5342     0401  158E               	bsf	14,3	;volatile
  5343     0402                     i1l1799:
  5344                           
  5345                           ;battery_discharge.c: 63:  _delay((unsigned long)((1)*(32000000/4000.0)));
  5346     0402  300B               	movlw	11
  5347     0403  00F2               	movwf	??_getVoltage
  5348     0404  3062               	movlw	98
  5349     0405                     u149_27:
  5350     0405  0B89               	decfsz	9,f
  5351     0406  2C05               	goto	u149_27
  5352     0407  0BF2               	decfsz	??_getVoltage,f
  5353     0408  2C05               	goto	u149_27
  5354     0409  3200               	nop2
  5355     040A                     i1l1801:
  5356                           
  5357                           ;battery_discharge.c: 64:     ADCON0bits.GO = 1;
  5358     040A  0021               	movlb	1	; select bank1
  5359     040B  149D               	bsf	29,1	;volatile
  5360     040C                     i1l1803:	
  5361                           ;battery_discharge.c: 65:     while (!isFVReadDone());
  5362                           
  5363     040C  318F  27C7  3183   	fcall	_isFVReadDone
  5364     040F  3A00               	xorlw	0
  5365     0410  1903               	skipnz
  5366     0411  2C13               	goto	u115_21
  5367     0412  2C14               	goto	u115_20
  5368     0413                     u115_21:
  5369     0413  2C0C               	goto	i1l1803
  5370     0414                     u115_20:
  5371     0414                     i1l123:
  5372                           
  5373                           ;battery_discharge.c: 66:     RC3 = 0;
  5374     0414  0020               	movlb	0	; select bank0
  5375     0415  118E               	bcf	14,3	;volatile
  5376     0416                     i1l1805:
  5377                           
  5378                           ;battery_discharge.c: 67:     lo = ADRESLbits.ADRESL;
  5379     0416  0021               	movlb	1	; select bank1
  5380     0417  081B               	movf	27,w	;volatile
  5381     0418  00F9               	movwf	getVoltage@lo
  5382     0419                     i1l1807:
  5383                           
  5384                           ;battery_discharge.c: 68:     hi = (uint8_t)(ADRESHbits.ADRESH & 0x03);
  5385     0419  081C               	movf	28,w	;volatile
  5386     041A  3903               	andlw	3
  5387     041B  00FA               	movwf	getVoltage@hi
  5388     041C                     i1l1809:
  5389                           
  5390                           ;battery_discharge.c: 69:     voltage = (uint16_t)((hi << 8) | (lo & 0xFC));
  5391     041C  0879               	movf	getVoltage@lo,w
  5392     041D  39FC               	andlw	252
  5393     041E  00F2               	movwf	??_getVoltage
  5394     041F  01F3               	clrf	??_getVoltage+1
  5395     0420  087A               	movf	getVoltage@hi,w
  5396     0421  00F4               	movwf	??_getVoltage+2
  5397     0422  01F5               	clrf	??_getVoltage+3
  5398     0423  0874               	movf	??_getVoltage+2,w
  5399     0424  00F5               	movwf	??_getVoltage+3
  5400     0425  01F4               	clrf	??_getVoltage+2
  5401     0426  0872               	movf	??_getVoltage,w
  5402     0427  0474               	iorwf	??_getVoltage+2,w
  5403     0428  00F7               	movwf	getVoltage@voltage
  5404     0429  0873               	movf	??_getVoltage+1,w
  5405     042A  0475               	iorwf	??_getVoltage+3,w
  5406     042B  00F8               	movwf	getVoltage@voltage+1
  5407     042C                     i1l1811:
  5408                           
  5409                           ;battery_discharge.c: 72:     ADCON1 = 0;
  5410     042C  019E               	clrf	30	;volatile
  5411     042D                     i1l1813:
  5412                           
  5413                           ;battery_discharge.c: 73:     ADCON0bits.ADON = 0;
  5414     042D  101D               	bcf	29,0	;volatile
  5415     042E                     i1l1815:
  5416                           
  5417                           ;battery_discharge.c: 74:     FVRCONbits.FVREN = 0;
  5418     042E  0022               	movlb	2	; select bank2
  5419     042F  1397               	bcf	23,7	;volatile
  5420     0430                     i1l1817:
  5421                           
  5422                           ;battery_discharge.c: 75:     FVRCONbits.ADFVR = 0b00;
  5423     0430  30FC               	movlw	-4
  5424     0431  0597               	andwf	23,f	;volatile
  5425     0432                     i1l1819:
  5426                           
  5427                           ;battery_discharge.c: 77:     return(voltage);
  5428     0432  0878               	movf	getVoltage@voltage+1,w
  5429     0433  00F1               	movwf	?_getVoltage+1
  5430     0434  0877               	movf	getVoltage@voltage,w
  5431     0435  00F0               	movwf	?_getVoltage
  5432     0436                     i1l124:
  5433     0436  0008               	return
  5434     0437                     __end_of_getVoltage:
  5435                           
  5436                           	psect	text29
  5437     0FC7                     __ptext29:	
  5438 ;; *************** function _isFVReadDone *****************
  5439 ;; Defined at:
  5440 ;;		line 37 in file "battery_discharge.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      _Bool 
  5447 ;; Registers used:
  5448 ;;		wreg, status,0
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_getVoltage
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467     0FC7                     _isFVReadDone:	
  5468                           ;psect for function _isFVReadDone
  5469                           
  5470     0FC7                     i1l1765:	
  5471                           ;incstack = 0
  5472                           ; Regs used in _isFVReadDone: [wreg+status,0]
  5473                           
  5474                           
  5475                           ;battery_discharge.c: 39:     return (_Bool)!ADCON0bits.GO_nDONE;
  5476     0FC7  1003               	clrc
  5477     0FC8  0021               	movlb	1	; select bank1
  5478     0FC9  1C9D               	btfss	29,1	;volatile
  5479     0FCA  1403               	setc
  5480     0FCB  3000               	movlw	0
  5481     0FCC  3D09               	addwfc	9,w
  5482     0FCD                     i1l115:
  5483     0FCD  0008               	return
  5484     0FCE                     __end_of_isFVReadDone:
  5485     007E                     btemp	set	126	;btemp
  5486     007E                     int$flags	set	126
  5487     007E                     wtemp0	set	126
  5488     22F0                     
  5489                           	psect	idloc
  5490                           
  5491                           ;Config register IDLOC0 @ 0x8000
  5492                           ;	unspecified, using default values
  5493     8000                     	org	32768
  5494     8000  3FFF               	dw	16383
  5495                           
  5496                           ;Config register IDLOC1 @ 0x8001
  5497                           ;	unspecified, using default values
  5498     8001                     	org	32769
  5499     8001  3FFF               	dw	16383
  5500                           
  5501                           ;Config register IDLOC2 @ 0x8002
  5502                           ;	unspecified, using default values
  5503     8002                     	org	32770
  5504     8002  3FFF               	dw	16383
  5505                           
  5506                           ;Config register IDLOC3 @ 0x8003
  5507                           ;	unspecified, using default values
  5508     8003                     	org	32771
  5509     8003  3FFF               	dw	16383
  5510                           
  5511                           	psect	config
  5512                           
  5513                           ;Config register CONFIG1 @ 0x8007
  5514                           ;	Oscillator Selection
  5515                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5516                           ;	Watchdog Timer Enable
  5517                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  5518                           ;	Power-up Timer Enable
  5519                           ;	PWRTE = OFF, PWRT disabled
  5520                           ;	MCLR Pin Function Select
  5521                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5522                           ;	Flash Program Memory Code Protection
  5523                           ;	CP = ON, Program memory code protection is enabled
  5524                           ;	Data Memory Code Protection
  5525                           ;	CPD = OFF, Data memory code protection is disabled
  5526                           ;	Brown-out Reset Enable
  5527                           ;	BOREN = OFF, Brown-out Reset disabled
  5528                           ;	Clock Out Enable
  5529                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5530                           ;	Internal/External Switchover
  5531                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5532                           ;	Fail-Safe Clock Monitor Enable
  5533                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5534     8007                     	org	32775
  5535     8007  096C               	dw	2412
  5536                           
  5537                           ;Config register CONFIG2 @ 0x8008
  5538                           ;	Flash Memory Self-Write Protection
  5539                           ;	WRT = OFF, Write protection off
  5540                           ;	PLL Enable
  5541                           ;	PLLEN = ON, 4x PLL enabled
  5542                           ;	Stack Overflow/Underflow Reset Enable
  5543                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5544                           ;	Brown-out Reset Voltage Selection
  5545                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5546                           ;	Low-Voltage Programming Enable
  5547                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5548     8008                     	org	32776
  5549     8008  1FFF               	dw	8191

Data Sizes:
    Strings     297
    Constant    0
    Data        0
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      76
    BANK1            80     10      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1109$buffer	PTR unsigned char  size(2) Largest target is 0

    S1109$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> prnBuf(BIGRAM[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_6(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> buffer_char(BIGRAM[128]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 128
		 -> prnBuf(BIGRAM[128]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 128
		 -> prnBuf(BIGRAM[128]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_1(CODE[14]), STR_10(CODE[31]), STR_11(CODE[31]), STR_12(CODE[38]), 
		 -> STR_2(CODE[14]), STR_3(CODE[34]), STR_5(CODE[12]), STR_7(CODE[29]), 
		 -> STR_8(CODE[23]), STR_9(CODE[31]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> buffer_char(BIGRAM[128]), prnBuf(BIGRAM[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> buffer_char(BIGRAM[128]), prnBuf(BIGRAM[128]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_6(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_6(CODE[20]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_6(CODE[20]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    writeMsg@msg	PTR unsigned char  size(2) Largest target is 128
		 -> buffer_char(BIGRAM[128]), prnBuf(BIGRAM[128]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_writeMsg->i1_strlen
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _read_prec_or_width->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    _main->_strcpy
    _writeMsg->_strlen

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3276
         _blinkLED_GRN_daughterboard
                       _blinkLED_red
                            _initPic
                           _initUart
                          _startUart
                             _strcpy
                             _strlen
                           _writeMsg
 ---------------------------------------------------------------------------------
 (1) _writeMsg                                             5     2      3    1343
                                              4 BANK1      5     2      3
                             _strlen (ARG)
                          _writeUart
 ---------------------------------------------------------------------------------
 (2) _writeUart                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     716
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4    1125
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (1) _startUart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blinkLED_red                                         4     4      0      46
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _blinkLED_GRN_daughterboard                           4     4      0      46
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  1     1      0    7468
                                             62 BANK0      1     1      0
                         _getVoltage
                            _sprintf
                     i1_blinkLED_red
                           i1_strcpy
                           i1_strlen
                         i1_writeMsg
 ---------------------------------------------------------------------------------
 (4) i1_writeMsg                                           5     2      3     663
                                              4 COMMON     5     2      3
                           i1_strlen (ARG)
                        i1_writeUart
 ---------------------------------------------------------------------------------
 (5) i1_writeUart                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_strlen                                             4     2      2     376
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) i1_strcpy                                            10     6      4     541
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (4) i1_blinkLED_red                                       4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             20    14      6    5773
                                             44 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     3      5    5268
                                             36 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           16    12      4    4926
                                             21 BANK0     15    11      4
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (7) _utoa                                                10     6      4    3078
                                             11 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     3      5    2069
                                             13 COMMON     1     1      0
                                              4 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     6      2     997
                                              9 COMMON     4     2      2
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4     682
                                              0 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _getVoltage                                          11     9      2      69
                                              0 COMMON    11     9      2
                       _isFVReadDone
 ---------------------------------------------------------------------------------
 (5) _isFVReadDone                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blinkLED_GRN_daughterboard
   _blinkLED_red
   _initPic
   _initUart
   _startUart
   _strcpy
   _strlen
   _writeMsg
     _strlen (ARG)
     _writeUart (ARG)

 _ISR (ROOT)
   _getVoltage
     _isFVReadDone
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc
   i1_blinkLED_red
   i1_strcpy
   i1_strlen
   i1_writeMsg
     i1_strlen (ARG)
     i1_writeUart (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      2B       7       53.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      85      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      85      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 23 13:58:51 2024

                      getVoltage@hi 007A                        getVoltage@lo 0079  
               ___wmul@multiplicand 0072                                 l130 05A4  
                               l140 05A9                                 l142 05D2  
                               l128 057B                                 l233 0FE9  
                               l242 07A9                                 l236 0FDF  
                               l245 0FEF                                 l248 0FF3  
                               l177 0486                                 l961 07C3  
                               l955 0693                                 _RC0 0070  
                               _RC3 0073                                 _RB5 006D  
                               _RB7 006F                                 _RC6 0076  
                               _ISR 0004                                 _pad 0487  
                               wreg 0009                __end_of_isFVReadDone 0FCE  
               __end_ofi1_writeUart 0FD7                                ?_ISR 0070  
                              l2111 04D5                                l2121 04FA  
                              l2113 04D9                                l2123 0500  
                              l2115 04DB                                l2117 04DC  
                              l2109 04CB                                l2119 04E8  
                              l1901 044F                                l1831 059E  
                              l1823 0579                                l1911 045C  
                              l1903 0452                                l1841 05CC  
                              l1833 05A7                                l1825 057E  
                              l1921 046B                                l1913 045F  
                              l1905 0454                                l1835 05AC  
                              l1827 058A                                l1931 0473  
                              l1923 046C                                l1915 0462  
                              l1907 0457                                l1843 0671  
                              l1851 07B4                                l1837 05B8  
                              l1829 0599                                l1941 0479  
                              l1933 0474                                l1925 046D  
                              l1917 0465                                l1909 045A  
                              l1845 0676                                l1853 07BD  
                              l1861 079A                                l1839 05C7  
                              l1951 047E                                l1943 047A  
                              l1935 0475                                l1927 046F  
                              l1919 0469                                l1847 07AA  
                              l1863 079F                                l1953 047F  
                              l1945 047B                                l1937 0477  
                              l1929 0471                                l1881 043A  
                              l1961 0FE0                                l1849 07B0  
                              l1769 0FEC                                l1865 07A3  
                              l1857 078F                                l1955 0481  
                              l1947 047C                                l1939 0478  
                              l1891 0444                                l1883 043E  
                              l1963 0FE7                                l1859 0792  
                              l1957 0483                                l1949 047D  
                              l1893 0447                                l1885 043F  
                              l1965 0FD7                                ?_pad 0024  
                              l1959 0485                                l1895 0449  
                              l1887 0440                                l1879 0437  
                              l1897 044A                                l1889 0442  
                              l1899 044C                                STR_1 0843  
                              STR_2 0835                                STR_3 0694  
                              STR_4 0821                                STR_5 0851  
                              STR_6 080D                                STR_7 0772  
                              STR_8 07F6                                STR_9 0716  
                              _BRGH 0CF2                                _CREN 0CEC  
                              u1110 0FF3                                u1111 0FF2  
                              u1200 07A9                                u1201 07A8  
                              u1160 05A4                                u1161 05A3  
                              u1170 05D2                                u1171 05D1  
                              u1180 0693                                u1181 0692  
                              _LATA 010C                                u1190 07BD  
                              _LATB 010D                                u1191 07BC  
                              _LATC 010E                                u1427 0584  
                              u1437 0593                                u1390 0500  
                              u1447 05B2                                u1391 04FF  
                              u1457 05C1                                _SPEN 0CEF  
                              _TRMT 0CF1                                _TXEN 0CF5  
                              _SYNC 0CF4                                _WPUA 020C  
                              _WPUB 020D                                _WPUC 020E  
                              _dbuf 00A1                                _main 04CB  
                              _prec 0061                                pad@i 0029  
                              pad@p 0027                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              _utoa 02B3                                start 01C9  
                       _str_voltage 006B                     _TX_TEST_voltage 0063  
                             ??_ISR 005E                               ??_pad 007D  
                        i1_writeMsg 07C4                __end_of_blinkLED_red 05A5  
                             ?_main 0070                               STR_10 06D8  
                             STR_11 06F7                               STR_12 05FF  
                             _BRG16 0CFB                               ?_utoa 002B  
                   __end_of___lwdiv 0543                               i1l130 05FE  
                             i1l115 0FCD                               i1l123 0414  
                             i1l124 0436                               i1l118 03E4  
                             i1l400 0753                               i1l128 05D6  
                             i1l242 07DC                               i1l162 01C7  
                             i1l245 0FD2                               i1l248 0FD6  
                   __end_of___lwmod 0577                               i1l398 073F  
                             i1l902 0380                               i1l911 0221  
                             i1l909 0217                               i1l861 064A  
                             i1l678 0542                               i1l926 0771  
                             i1l919 02B2                               i1l688 0576  
                             i1l961 07F5                               i1l938 03DD  
                             i1l946 0670                               i1l882 04BD  
                             i1l955 06D7                               i1l884 04CA  
                             i1l949 0003                               i1l894 0320  
                             i1l879 049B                               _RCREG 0199  
                      vfpfcnvrt@fmt 0037                               _SPBRG 019B  
                             u80_25 0740                               _TRISA 008C  
                             _TRISB 008D                               u81_25 0745  
                             _TRISC 008E                               u82_20 074F  
                             u90_20 0549                               u74_20 0387  
                             u82_21 074E                               u90_21 0548  
                             u74_21 0386                               u83_20 050F  
                             u75_20 038D                               u83_21 050E  
                             u75_21 038C                               u91_25 054D  
                             u92_20 0559                               u76_20 039D  
                             u92_21 0558                               u76_21 039C  
                             u84_25 0513                               u85_20 051F  
                             u93_20 0563                               u77_20 03BD  
                             u85_21 051E                               u93_21 0562  
                             u77_21 03BC                               u93_25 055F  
                             u77_25 03B9                               u78_20 0670  
                             u78_21 066F                               u86_25 0520  
                             u94_25 0568                               u79_20 073B  
                             u87_20 052E                               u95_20 0572  
                             u79_21 073A                               u87_21 052D  
                             u95_21 0571                               u87_25 052A  
                             u96_20 048C                               u96_21 048B  
                             u88_25 0534                               u89_20 053E  
                             u97_20 0499                               u89_21 053D  
                             u97_21 0498                               _TXREG 019A  
                             u98_20 04BD                               u98_21 04BC  
                             u98_25 04B9                               u99_20 04C2  
                             u99_21 04C1                               _flags 0067  
                   __end_of_initPic 0487                 read_prec_or_width@c 0020  
               read_prec_or_width@n 0021                               _fputc 0381  
                             _fputs 064B                               pad@fp 0024  
                             _width 005F                               _putch 0003  
                             utoa@d 002D                               utoa@i 0033  
                             utoa@p 0030                               utoa@w 0031  
                             status 0003                               wtemp0 007E  
                   __end_of_sprintf 064B  __end_of_blinkLED_GRN_daughterboard 05D3  
        _blinkLED_GRN_daughterboard 05A5     blinkLED_GRN_daughterboard@ticks 00C3  
                  __end_ofi1_strcpy 06D8                    __end_ofi1_strlen 07F6  
                   __initialization 01CB                        __end_of_main 0507  
                      __end_of_utoa 0321                     i1writeUart@data 0070  
                            ??_main 00CB                              ??_utoa 002F  
                       i1_writeUart 0FCE          __end_of_read_prec_or_width 0381  
                            _ADCON1 009E                              ?_fputc 0070  
                            ?_fputs 0079                              _ANSELA 018C  
                            ?_putch 0070                              _ANSELB 018D  
                            _ANSELC 018E                              u100_20 02F4  
                            u100_21 02F3                              u101_20 02FA  
                            u101_21 02F9                              u102_20 02FF  
                            u110_20 025F                              u102_21 02FE  
                            u110_21 025E                              i1l2001 07E2  
                            i1l2003 07E6                              i1l2011 000B  
                            i1l2005 07EF                              i1l2101 01A5  
                            i1l2013 0012                              i1l2021 0033  
                            i1l2103 01AC                              i1l2031 004E  
                            i1l2023 0038                              i1l2015 0014  
                            u103_20 030C                              u103_21 030B  
                            i1l2105 01B7                              i1l2041 0084  
                            i1l2033 005E                              i1l2025 0039  
                            i1l2017 0018                              i1l2009 0006  
                            i1l2051 00E5                              i1l2035 0068  
                            i1l2043 00A5                              i1l2027 003B  
                            i1l2019 0023                              u103_25 0308  
                            i1l2061 0106                              i1l2053 00EB  
                            i1l2045 00B0                              i1l2037 0069  
                            i1l2029 0043                              i1l2071 012B  
                            i1l2063 0108                              i1l2055 00F3  
                            i1l2047 00C0                              i1l2039 0074  
                            u104_20 0311                              u112_20 076F  
                            i1l1601 0507                              u104_21 0310  
                            u112_21 076E                              i1l2081 013D  
                            i1l2073 012C                              i1l2065 0113  
                            i1l2057 00F4                              i1l2049 00E0  
                            i1l1611 051B                              i1l1603 0509  
                            i1l2091 0168                              i1l2083 0141  
                            i1l2075 0130                              i1l2067 0123  
                            i1l2059 00FD                              i1l1701 033E  
                            i1l1621 0538                              i1l1613 051F  
                            i1l1605 050F                              i1l2093 0173  
                            i1l2085 0146                              i1l2077 0136  
                            i1l2069 0126                              i1l1703 034B  
                            i1l1615 052E                              i1l1607 0512  
                            i1l1623 053E                              i1l1631 054C  
                            i1l2095 0183                              i1l2087 0151  
                            i1l2079 013C                              u105_20 0336  
                            u113_20 0FD6                              i1l1801 040A  
                            i1l1705 0360                              u105_21 0335  
                            i1l1617 0532                              i1l1609 0517  
                            i1l1641 0567                              i1l1633 0551  
                            i1l1721 0215                              i1l1713 01F0  
                            u113_21 0FD5                              i1l2097 018A  
                            i1l2089 0161                              i1l1811 042C  
                            i1l1803 040C                              i1l1707 0368  
                            i1l1619 0533                              i1l1643 056C  
                            i1l1635 0555                              i1l1627 0543  
                            i1l1571 039D                              i1l1563 0381  
                            i1l1651 048C                              i1l1731 0239  
                            i1l1723 0218                              i1l1715 0202  
                            i1l2099 0195                              i1l1813 042D  
                            i1l1805 0416                              i1l1709 037C  
                            i1l1637 0559                              i1l1629 0549  
                            i1l1645 0572                              i1l1573 03BD  
                            i1l1565 0387                              i1l1581 0650  
                            i1l1661 04AF                              i1l1653 0494  
                            i1l1741 0255                              i1l1733 0244  
                            i1l1717 020A                              i1l1815 042E  
                            i1l1807 0419                              i1l1591 073B  
                            i1l1639 0563                              i1l1575 03D3  
                            i1l1567 038D                              i1l1583 065E  
                            i1l1663 04C2                              i1l1655 0499  
                            i1l1671 02C1                              i1l1743 025F  
                            i1l1735 0248                              i1l1727 0224  
                            i1l1719 0211                              u114_20 03E8  
                            u106_20 037C                              u122_20 05FE  
                            u130_20 00FD                              i1l1817 0430  
                            i1l1809 041C                              u114_21 03E7  
                            i1l1593 0744                              u106_21 037B  
                            i1l1569 0392                              i1l1585 0663  
                            i1l1657 049E                              i1l1649 0487  
                            i1l1673 02C5                              i1l1681 02ED  
                            i1l1665 02B3                              i1l1753 0285  
                            i1l1745 026B                              i1l1737 0249  
                            i1l1729 0234                              u122_21 05FD  
                            u130_21 00FC                              i1l1819 0432  
                            i1l1595 0749                              i1l1587 0735  
                            i1l1579 064D                              i1l1659 04AA  
                            i1l1683 02F4                              i1l1691 0311  
                            i1l1675 02D7                              i1l1667 02B6  
                            i1l1747 0279                              i1l1755 028E  
                            i1l1739 024E                              i1l1771 0754  
                            i1l1765 0FC7                              i1l1597 074F  
                            i1l1589 0737                              i1l1685 02FA  
                            i1l1677 02D9                              i1l1669 02BE  
                            i1l1773 075A                              i1l1781 0FCF  
                            i1l1791 03F2                              i1l1783 03DE  
                            i1l1695 0323                              i1l1687 02FF  
                            i1l1679 02DD                              i1l1759 0298  
                            i1l1775 0765                              i1l1871 062E  
                            u115_20 0414                              u107_20 0202  
                            u123_20 07DC                              u131_20 0106  
                            u115_21 0413                              i1l1793 03F7  
                            i1l1785 03E3                              i1l1697 0325  
                            i1l1689 030C                              u107_21 0201  
                            i1l1777 076F                              i1l1873 0630  
                            u123_21 07DB                              u131_21 0105  
                            i1l1795 03F8                              i1l1787 03E8  
                            i1l1699 0336                              i1l1875 063D  
                            i1l1867 0625                              i1l1797 0400  
                            i1l1789 03ED                              i1l1869 062C  
                            i1l1981 05F4                              i1l1799 0402  
                            i1l1983 05F8                              i1l1975 05D4  
                            i1l1991 07D2                              u108_20 0239  
                            u124_20 06D7                              u132_20 012B  
                            u108_21 0238                              i1l1977 05D9  
                            u124_21 06D6                              i1l1993 07D6  
                            i1l1985 07C4                              u132_21 012A  
                            i1l1979 05E5                              i1l1995 06B6  
                            i1l1987 07C6                              i1l1997 06BA  
                            i1l1989 07CE                              i1l1999 07DD  
                            u109_20 0248                              u125_20 07EF  
                            u133_20 0136                              u109_21 0247  
                            u125_21 07EE                              u133_21 0135  
                            u134_20 013C                              u126_20 000B  
                            u134_21 013B                              u126_21 000A  
                            u135_20 0146                              u127_20 0038  
                            u135_21 0145                              u127_21 0037  
                            u136_20 0168                              u128_20 0068  
                            u136_21 0167                              u128_21 0067  
                            u137_20 018A                              u129_20 00E5  
                            _INTCON 000B                              u137_21 0189  
                            u129_21 00E4                              u138_20 01AC  
                            u138_21 01AB                              u146_27 05DE  
                            u147_27 05ED                              u148_27 03FB  
                            u149_27 0405                              _OSCCON 0099  
                     vfpfcnvrt@done 0041                              _TRISC4 0474  
                            _TRISC5 0475                 i1blinkLED_red@ticks 0072  
                      vfprintf@cfmt 004A                              ___wmul 0735  
                         ??___lwdiv 0074                           ??___lwmod 0074  
                       ?i1_writeMsg 0074                    __end_of_initUart 0FEA  
              read_prec_or_width@ap 0076                              _rxChar 0069  
                            _prnBuf 2370                              pad@buf 0026  
                            _strcpy 0671                              _strlen 07AA  
                         ??_initPic 00C1                              fputc@c 0070  
                            fputs@c 0020                              fputs@i 0021  
                            fputs@s 0023                              putch@c 0070  
                  __end_of_vfprintf 0772                              utoa@fp 002B  
                         ??_sprintf 007E                    __end_of_writeMsg 07AA  
           __end_of__initialization 01EC                      __pcstackCOMMON 0070  
                      _isFVReadDone 0FC7                       __end_of_fputc 03DE  
                     __end_of_fputs 0671                       __end_of_putch 0004  
                     i1writeMsg@len 0076                       i1writeMsg@msg 0074  
                         ?i1_strcpy 0070                           ?i1_strlen 0070  
                           ??_fputc 0074                             ??_fputs 007B  
                       i1strcpy@src 0072                   getVoltage@voltage 0077  
                           ??_putch 0070                          __pbssBANK0 005F  
                        __pbssBANK1 00A0                         i1writeMsg@i 0078  
                      _blinkLED_red 0577                          __pmaintext 04CB  
      ??_blinkLED_GRN_daughterboard 00C1                             ?___wmul 0070  
                        __pintentry 0004                             _APFCON0 011D  
                           ?_strcpy 00C1                             ?_strlen 00C1  
            _consecutiveLowReadings 006A                          _getVoltage 03DE  
                           _OSCTUNE 0098                          ??i1_strcpy 0074  
                        ??i1_strlen 0072                           ?_initUart 0070  
       ?_blinkLED_GRN_daughterboard 0070                      i1_blinkLED_red 05D3  
                           ___lwdiv 0507                             ___lwmod 0543  
                         ?_vfprintf 0044                             __ptext1 078F  
                           __ptext2 0FEA                             __ptext3 07AA  
                           __ptext4 0671                             __ptext5 0FD7  
                           __ptext6 0FE0                             __ptext7 0437  
                           __ptext8 0577                             __ptext9 05A5  
                         ?_writeMsg 00C5                        ?i1_writeUart 0070  
                         _T1CONbits 0018                             _initPic 0437  
             read_prec_or_width@fmt 0023                           _IOCAFbits 0393  
                         _IOCBFbits 0396                           _IOCANbits 0392  
                         _IOCAPbits 0391                           _IOCBNbits 0395  
                         _IOCBPbits 0394                             _sprintf 0625  
                           clrloop0 0FF5                end_of_initialization 01EC  
                           fputc@fp 0072                          ??_initUart 00C1  
            __end_ofi1_blinkLED_red 05FF                             fputs@fp 0079  
                _read_prec_or_width 0321                   __end_of_vfpfcnvrt 02B3  
               ?_read_prec_or_width 0076                    vfpfcnvrt@convarg 003D  
                 __end_of_startUart 0FE0                          ??_vfprintf 0049  
                      ??i1_writeMsg 0077                             strcpy@d 00C9  
                           strlen@a 00C3                             strlen@s 00C1  
                        ??_writeMsg 00C8                         ?_getVoltage 0070  
                 __end_of_writeUart 0FF4                ??_read_prec_or_width 0078  
                __end_ofi1_writeMsg 07DD                     ?i1_blinkLED_red 0070  
                       vfpfcnvrt@ap 0038                         vfpfcnvrt@cp 0042  
                       vfpfcnvrt@fp 0035                      __end_of___wmul 0754  
                     blinkLED_red@i 00C4                      __end_of_strcpy 0694  
                    __end_of_strlen 07C4                 start_initialization 01CB  
                       __end_of_ISR 01C9                         __end_of_pad 04CB  
                         i1strcpy@d 0078                           i1strlen@a 0072  
                         i1strlen@s 0070                         vfprintf@fmt 0046  
                          ??___wmul 0074                     _startup_voltage 0065  
                      i1strcpy@dest 0070                            ??_strcpy 00C5  
                          ??_strlen 00C3                         __pbssBIGRAM 22F0  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00C1                           _batt_mode 0068  
                  ___lwdiv@dividend 0072              _discharge_EOL_Complete 00A0  
                          ?___lwdiv 0070                            ?___lwmod 0070  
                          ?_initPic 0070                     i1blinkLED_red@i 0073  
                  ___lwdiv@quotient 0075                            ?_sprintf 004C  
                    ___wmul@product 0074                           clear_ram0 0FF4  
                          _PIE1bits 0091                         _buffer_char 22F0  
                          _PIR1bits 0011                         writeMsg@len 00C7  
                       writeMsg@msg 00C5                           _vfpfcnvrt 01F0  
                        _ADCON0bits 009D                          _ADCON1bits 009E  
                 ___wmul@multiplier 0070                           _startUart 0FD7  
                      ??_getVoltage 0072                            i1_strcpy 06B6  
                          i1_strlen 07DD                    ??i1_blinkLED_red 0070  
                         _writeUart 0FEA                          _ADRESHbits 009C  
                        _ADRESLbits 009B                          vfprintf@ap 0048  
                        vfprintf@fp 0044                  __end_of_getVoltage 0437  
                     ?_isFVReadDone 0070                          ?_vfpfcnvrt 0035  
                        ?_startUart 0070                          sprintf@fmt 004E  
                 blinkLED_red@ticks 00C3                     ___lwdiv@divisor 0070  
                   ___lwdiv@counter 0077                            __ptext11 07C4  
                          __ptext20 0487                            __ptext12 0FCE  
                          __ptext21 064B                            __ptext13 07DD  
                          __ptext22 0381                            __ptext14 06B6  
                          __ptext23 0003                            __ptext15 05D3  
                          __ptext24 0543                            __ptext16 0625  
                          __ptext25 0507                            __ptext17 0754  
                          __ptext26 0321                            __ptext18 01F0  
                          __ptext27 0735                            __ptext19 02B3  
                          __ptext28 03DE                            __ptext29 0FC7  
                        ?_writeUart 0070                          strcpy@dest 00C1  
                          _initUart 0FE0                       ?_blinkLED_red 0070  
                    ??_isFVReadDone 0070                            int$flags 007E  
                          _vfprintf 0754                            _writeMsg 078F  
                        _INTCONbits 000B                          _FVRCONbits 0117  
                    __pstringtext10 0835                      __pstringtext11 0843  
                    __pstringtext12 0851                      __pstringtext13 0000  
                          intlevel1 0000                           sprintf@ap 0052  
                    ??_blinkLED_red 00C1                    ___lwmod@dividend 0072  
                         strcpy@src 00C3                           writeMsg@i 00C9  
                       ??_vfpfcnvrt 0039         blinkLED_GRN_daughterboard@i 00C4  
                     __pstringtext1 05FF                       __pstringtext2 0694  
                     __pstringtext3 06D8                       __pstringtext4 06F7  
                     __pstringtext5 0716                       __pstringtext6 0772  
                     __pstringtext7 07F6                       __pstringtext8 080D  
                     __pstringtext9 0821                         ??_startUart 00C1  
                     ??i1_writeUart 0070                          _OPTION_REG 0095  
                          sprintf@f 0053                            sprintf@s 004C  
                   ___lwmod@divisor 0070                     ___lwmod@counter 0075  
                        _WDTCONbits 0097                         ??_writeUart 00C1  
                     writeUart@data 00C1  
